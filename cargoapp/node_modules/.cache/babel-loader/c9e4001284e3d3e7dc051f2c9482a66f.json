{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Intersect = void 0;\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction inserted(el, binding, vnode) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) return;\n  var modifiers = binding.modifiers || {};\n  var value = binding.value;\n\n  var _ref = _typeof(value) === 'object' ? value : {\n    handler: value,\n    options: {}\n  },\n      handler = _ref.handler,\n      options = _ref.options;\n\n  var observer = new IntersectionObserver(function () {\n    var _el$_observe;\n\n    var entries = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var observer = arguments.length > 1 ? arguments[1] : undefined;\n\n    var _observe = (_el$_observe = el._observe) == null ? void 0 : _el$_observe[vnode.context._uid];\n\n    if (!_observe) return; // Just in case, should never fire\n\n    var isIntersecting = entries.some(function (entry) {\n      return entry.isIntersecting;\n    }); // If is not quiet or has already been\n    // initted, invoke the user callback\n\n    if (handler && (!modifiers.quiet || _observe.init) && (!modifiers.once || isIntersecting || _observe.init)) {\n      handler(entries, observer, isIntersecting);\n    }\n\n    if (isIntersecting && modifiers.once) unbind(el, binding, vnode);else _observe.init = true;\n  }, options);\n  el._observe = Object(el._observe);\n  el._observe[vnode.context._uid] = {\n    init: false,\n    observer: observer\n  };\n  observer.observe(el);\n}\n\nfunction unbind(el, binding, vnode) {\n  var _el$_observe2;\n\n  var observe = (_el$_observe2 = el._observe) == null ? void 0 : _el$_observe2[vnode.context._uid];\n  if (!observe) return;\n  observe.observer.unobserve(el);\n  delete el._observe[vnode.context._uid];\n}\n\nvar Intersect = {\n  inserted: inserted,\n  unbind: unbind\n};\nexports.Intersect = Intersect;\nvar _default = Intersect;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAASA,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAoEC,KAApE,EAAgF;EAC9E,IAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,EAAE,0BAA0BA,MAA5B,CAArC,EAA0E;EAE1E,IAAMC,SAAS,GAAGH,OAAO,CAACG,SAAR,IAAqB,EAAvC;EACA,IAAMC,KAAK,GAAGJ,OAAO,CAACI,KAAtB;;EAJ8E,WAKjDC,QAAOD,KAAP,MAAiB,QAAjB,GACzBA,KADyB,GAEzB;IAAEE,OAAO,EAAEF,KAAX;IAAkBG,OAAO,EAAE;EAA3B,CAP0E;EAAA,IAKtED,OALsE,QAKtEA,OALsE;EAAA,IAK7DC,OAL6D,QAK7DA,OAL6D;;EAQ9E,IAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,YAGtC;IAAA;;IAAA,IAFFC,OAEE,uEAFqC,EAErC;IAAA,IADFF,QACE;;IACF,IAAMG,QAAQ,mBAAGZ,EAAE,CAACY,QAAN,qBAAGC,aAAcX,KAAK,CAACY,OAAN,CAAeC,IAA7B,CAAjB;;IACA,IAAI,CAACH,QAAL,EAAe,OAFb,CAEoB;;IAEtB,IAAMI,cAAc,GAAGL,OAAO,CAACM,IAAR,CAAa,iBAAK;MAAA,OAAIC,KAAK,CAACF,cAAV;IAAlB,EAAvB,CAJE,CAMF;IACA;;IACA,IACET,OAAO,KACL,CAACH,SAAS,CAACe,KAAX,IACAP,QAAQ,CAACQ,IAFJ,CAAP,KAIE,CAAChB,SAAS,CAACiB,IAAX,IACAL,cADA,IAEAJ,QAAQ,CAACQ,IANX,CADF,EASE;MACAb,OAAO,CAACI,OAAD,EAAUF,QAAV,EAAoBO,cAApB,CAAP;IACD;;IAED,IAAIA,cAAc,IAAIZ,SAAS,CAACiB,IAAhC,EAAsCC,MAAM,CAACtB,EAAD,EAAKC,OAAL,EAAcC,KAAd,CAAN,CAAtC,KACKU,QAAQ,CAACQ,IAAT,GAAgB,IAAhB;EAzBU,GA0BdZ,OA1Bc,CAAjB;EA4BAR,EAAE,CAACY,QAAH,GAAcW,MAAM,CAACvB,EAAE,CAACY,QAAJ,CAApB;EACAZ,EAAE,CAACY,QAAH,CAAaV,KAAK,CAACY,OAAN,CAAeC,IAA5B,IAAoC;IAAEK,IAAI,EAAE,KAAR;IAAeX,QAAQ,EAARA;EAAf,CAApC;EAEAA,QAAQ,CAACe,OAAT,CAAiBxB,EAAjB;AACD;;AAED,SAASsB,MAAT,CAAiBtB,EAAjB,EAAkCC,OAAlC,EAAkEC,KAAlE,EAA8E;EAAA;;EAC5E,IAAMsB,OAAO,oBAAGxB,EAAE,CAACY,QAAN,qBAAGa,cAAcvB,KAAK,CAACY,OAAN,CAAeC,IAA7B,CAAhB;EACA,IAAI,CAACS,OAAL,EAAc;EAEdA,OAAO,CAACf,QAAR,CAAiBiB,SAAjB,CAA2B1B,EAA3B;EACA,OAAOA,EAAE,CAACY,QAAH,CAAaV,KAAK,CAACY,OAAN,CAAeC,IAA5B,CAAP;AACD;;AAEM,IAAMY,SAAS,GAAG;EACvB5B,QAAQ,EAARA,QADuB;EAEvBuB,MAAM,EAANA;AAFuB,CAAlB;;eAKQK","names":["inserted","el","binding","vnode","window","modifiers","value","_typeof","handler","options","observer","IntersectionObserver","entries","_observe","_el$_observe","context","_uid","isIntersecting","some","entry","quiet","init","once","unbind","Object","observe","_el$_observe2","unobserve","Intersect"],"sourceRoot":"","sources":["../../../src/directives/intersect/index.ts"],"sourcesContent":["import { VNodeDirective } from 'vue/types/vnode'\nimport { VNode } from 'vue'\n\ntype ObserveHandler = (\n  entries: IntersectionObserverEntry[],\n  observer: IntersectionObserver,\n  isIntersecting: boolean,\n) => void\n\ninterface ObserveVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value?: ObserveHandler | { handler: ObserveHandler, options?: IntersectionObserverInit }\n  modifiers?: {\n    once?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ObserveVNodeDirective, vnode: VNode) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) return\n\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const { handler, options } = typeof value === 'object'\n    ? value\n    : { handler: value, options: {} }\n  const observer = new IntersectionObserver((\n    entries: IntersectionObserverEntry[] = [],\n    observer: IntersectionObserver\n  ) => {\n    const _observe = el._observe?.[vnode.context!._uid]\n    if (!_observe) return // Just in case, should never fire\n\n    const isIntersecting = entries.some(entry => entry.isIntersecting)\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (\n      handler && (\n        !modifiers.quiet ||\n        _observe.init\n      ) && (\n        !modifiers.once ||\n        isIntersecting ||\n        _observe.init\n      )\n    ) {\n      handler(entries, observer, isIntersecting)\n    }\n\n    if (isIntersecting && modifiers.once) unbind(el, binding, vnode)\n    else _observe.init = true\n  }, options)\n\n  el._observe = Object(el._observe)\n  el._observe![vnode.context!._uid] = { init: false, observer }\n\n  observer.observe(el)\n}\n\nfunction unbind (el: HTMLElement, binding: ObserveVNodeDirective, vnode: VNode) {\n  const observe = el._observe?.[vnode.context!._uid]\n  if (!observe) return\n\n  observe.observer.unobserve(el)\n  delete el._observe![vnode.context!._uid]\n}\n\nexport const Intersect = {\n  inserted,\n  unbind,\n}\n\nexport default Intersect\n"]},"metadata":{},"sourceType":"script"}
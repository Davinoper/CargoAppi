{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _default = _vue.default.extend({\n  name: 'elevatable',\n  props: {\n    elevation: [Number, String]\n  },\n  computed: {\n    computedElevation: function computedElevation() {\n      return this.elevation;\n    },\n    elevationClasses: function elevationClasses() {\n      var elevation = this.computedElevation;\n      if (elevation == null) return {};\n      if (isNaN(parseInt(elevation))) return {};\n      return _defineProperty({}, \"elevation-\".concat(this.elevation), true);\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;eAEeA,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAE,YADkB;EAGxBC,KAAK,EAAE;IACLC,SAAS,EAAE,CAACC,MAAD,EAASC,MAAT;EADN,CAHiB;EAOxBC,QAAQ,EAAE;IACRC,iBADQ,+BACS;MACf,OAAO,KAAKJ,SAAZ;IAFM;IAIRK,gBAJQ,8BAIQ;MACd,IAAML,SAAS,GAAG,KAAKI,iBAAvB;MAEA,IAAIJ,SAAS,IAAI,IAAjB,EAAuB,OAAO,EAAP;MACvB,IAAIM,KAAK,CAACC,QAAQ,CAACP,SAAD,CAAT,CAAT,EAAgC,OAAO,EAAP;MAChC,+CAAuB,KAAKA,SAA5B,GAA0C,IAA1C;IACD;EAVO;AAPc,CAAX","names":["_vue","extend","name","props","elevation","Number","String","computed","computedElevation","elevationClasses","isNaN","parseInt"],"sourceRoot":"","sources":["../../../src/mixins/elevatable/index.ts"],"sourcesContent":["import Vue from 'vue'\n\nexport default Vue.extend({\n  name: 'elevatable',\n\n  props: {\n    elevation: [Number, String],\n  },\n\n  computed: {\n    computedElevation (): string | number | undefined {\n      return this.elevation\n    },\n    elevationClasses (): Record<string, boolean> {\n      const elevation = this.computedElevation\n\n      if (elevation == null) return {}\n      if (isNaN(parseInt(elevation))) return {}\n      return { [`elevation-${this.elevation}`]: true }\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
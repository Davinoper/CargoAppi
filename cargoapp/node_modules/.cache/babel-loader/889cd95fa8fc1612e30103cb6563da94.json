{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.string.starts-with.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VGrid/_grid.sass\");\n\nrequire(\"../../../src/components/VGrid/VGrid.sass\");\n\nvar _grid2 = _interopRequireDefault(require(\"./grid\"));\n\nvar _mergeData = _interopRequireDefault(require(\"../../util/mergeData\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* @vue/component */\n\n\nvar _default = (0, _grid2.default)('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    var classes;\n    var attrs = data.attrs;\n\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {};\n      classes = Object.keys(attrs).filter(function (key) {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false;\n        var value = attrs[key]; // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n\n        if (key.startsWith('data-')) {\n          data.attrs[key] = value;\n          return false;\n        }\n\n        return value || typeof value === 'string';\n      });\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {};\n      data.domProps.id = props.id;\n    }\n\n    return h(props.tag, (0, _mergeData.default)(data, {\n      staticClass: 'container',\n      class: Array({\n        'container--fluid': props.fluid\n      }).concat(classes || [])\n    }), children);\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAAA;;AACAA;;AAEA;;AAEA;;;;;;;AAEA;;;eACe,oBAAK,WAAL,EAAkBC,MAAlB,CAAyB;EACtCC,IAAI,EAAE,aADgC;EAEtCC,UAAU,EAAE,IAF0B;EAGtCC,KAAK,EAAE;IACLC,EAAE,EAAEC,MADC;IAELC,GAAG,EAAE;MACHC,IAAI,EAAEF,MADH;MAEHG,OAAO,EAAE;IAFN,CAFA;IAMLC,KAAK,EAAE;MACLF,IAAI,EAAEG,OADD;MAELF,OAAO,EAAE;IAFJ;EANF,CAH+B;EActCG,MAdsC,kBAc9BC,CAd8B,QAcF;IAAA,IAAvBT,KAAuB,QAAvBA,KAAuB;IAAA,IAAhBU,IAAgB,QAAhBA,IAAgB;IAAA,IAAVC,QAAU,QAAVA,QAAU;IAClC,IAAIC,OAAJ;IADkC,IAE1BC,KAF0B,GAEhBH,IAFgB,CAE1BG,KAF0B;;IAGlC,IAAIA,KAAJ,EAAW;MACT;MACAH,IAAI,CAACG,KAAL,GAAa,EAAb;MACAD,OAAO,GAAGE,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,CAA0B,eAAM;QACxC;QACA;QACA,IAAIC,GAAG,KAAK,MAAZ,EAAoB,OAAO,KAAP;QAEpB,IAAMC,KAAK,GAAGL,KAAK,CAACI,GAAD,CAAnB,CALwC,CAOxC;QACA;;QACA,IAAIA,GAAG,CAACE,UAAJ,CAAe,OAAf,CAAJ,EAA6B;UAC3BT,IAAI,CAACG,KAAL,CAAYI,GAAZ,IAAmBC,KAAnB;UACA,OAAO,KAAP;QACD;;QAED,OAAOA,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAAjC;MAdQ,EAAV;IAgBD;;IAED,IAAIlB,KAAK,CAACC,EAAV,EAAc;MACZS,IAAI,CAACU,QAAL,GAAgBV,IAAI,CAACU,QAAL,IAAiB,EAAjC;MACAV,IAAI,CAACU,QAAL,CAAcnB,EAAd,GAAmBD,KAAK,CAACC,EAAzB;IACD;;IAED,OAAOQ,CAAC,CACNT,KAAK,CAACG,GADA,EAEN,wBAAUO,IAAV,EAAgB;MACdW,WAAW,EAAE,WADC;MAEdC,KAAK,EAAEC,KAAK,CAAM;QAChB,oBAAoBvB,KAAK,CAACM;MADV,CAAN,CAAL,CAEJkB,MAFI,CAEGZ,OAAO,IAAI,EAFd;IAFO,CAAhB,CAFM,EAQND,QARM,CAAR;EAUD;AArDqC,CAAzB","names":["require","extend","name","functional","props","id","String","tag","type","default","fluid","Boolean","render","h","data","children","classes","attrs","Object","keys","filter","key","value","startsWith","domProps","staticClass","class","Array","concat"],"sourceRoot":"","sources":["../../../src/components/VGrid/VContainer.ts"],"sourcesContent":["import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
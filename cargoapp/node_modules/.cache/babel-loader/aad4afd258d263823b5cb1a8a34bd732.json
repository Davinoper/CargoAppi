{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _measurable = _interopRequireDefault(require(\"../../mixins/measurable\"));\n\nvar _toggleable = _interopRequireDefault(require(\"../../mixins/toggleable\"));\n\nvar _intersect = _interopRequireDefault(require(\"../../directives/intersect\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _default2 = (0, _mixins.default)(_measurable.default, _toggleable.default).extend({\n  name: 'VLazy',\n  directives: {\n    intersect: _intersect.default\n  },\n  props: {\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: function _default() {\n        return {\n          root: undefined,\n          rootMargin: undefined,\n          threshold: undefined\n        };\n      }\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition'\n    }\n  },\n  computed: {\n    styles: function styles() {\n      return _objectSpread({}, this.measurableStyles);\n    }\n  },\n  methods: {\n    genContent: function genContent() {\n      var children = this.isActive && (0, _helpers.getSlot)(this);\n      return this.transition ? this.$createElement('transition', {\n        props: {\n          name: this.transition\n        }\n      }, children) : children;\n    },\n    onObserve: function onObserve(entries, observer, isIntersecting) {\n      if (this.isActive) return;\n      this.isActive = isIntersecting;\n    }\n  },\n  render: function render(h) {\n    return h(this.tag, {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options\n        }\n      }],\n      on: this.$listeners,\n      style: this.styles\n    }, [this.genContent()]);\n  }\n});\n\nexports.default = _default2;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAMe,qBACbA,mBADa,EAEbC,mBAFa,EAGbC,MAHa,CAGN;EACPC,IAAI,EAAE,OADC;EAGPC,UAAU,EAAE;IAAEC,SAAS,EAATC;EAAF,CAHL;EAKPC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAEC,MADC;MAEP;MACA;MACAC,OAAO,EAAE;QAAA,OAAO;UACdC,IAAI,EAAEC,SADQ;UAEdC,UAAU,EAAED,SAFE;UAGdE,SAAS,EAAEF;QAHG,CAAP;MAAA;IAJF,CADJ;IAWLG,GAAG,EAAE;MACHP,IAAI,EAAEQ,MADH;MAEHN,OAAO,EAAE;IAFN,CAXA;IAeLO,UAAU,EAAE;MACVT,IAAI,EAAEQ,MADI;MAEVN,OAAO,EAAE;IAFC;EAfP,CALA;EA0BPQ,QAAQ,EAAE;IACRC,MADQ,oBACF;MACJ,yBACK,KAAKC,gBADV;IAGD;EALO,CA1BH;EAkCPC,OAAO,EAAE;IACPC,UADO,wBACG;MACR,IAAMC,QAAQ,GAAG,KAAKC,QAAL,IAAiB,sBAAQ,IAAR,CAAlC;MAEA,OAAO,KAAKP,UAAL,GACH,KAAKQ,cAAL,CAAoB,YAApB,EAAkC;QAClCnB,KAAK,EAAE;UAAEJ,IAAI,EAAE,KAAKe;QAAb;MAD2B,CAAlC,EAECM,QAFD,CADG,GAIHA,QAJJ;IAJK;IAUPG,SAVO,qBAWLC,OAXK,EAYLC,QAZK,EAaLC,cAbK,EAakB;MAEvB,IAAI,KAAKL,QAAT,EAAmB;MAEnB,KAAKA,QAAL,GAAgBK,cAAhB;IACD;EAlBM,CAlCF;EAuDPC,MAvDO,kBAuDCC,CAvDD,EAuDE;IACP,OAAOA,CAAC,CAAC,KAAKhB,GAAN,EAAW;MACjBiB,WAAW,EAAE,QADI;MAEjBC,KAAK,EAAE,KAAKC,MAFK;MAGjB/B,UAAU,EAAE,CAAC;QACXD,IAAI,EAAE,WADK;QAEXiC,KAAK,EAAE;UACLC,OAAO,EAAE,KAAKV,SADT;UAELnB,OAAO,EAAE,KAAKA;QAFT;MAFI,CAAD,CAHK;MAUjB8B,EAAE,EAAE,KAAKC,UAVQ;MAWjBC,KAAK,EAAE,KAAKpB;IAXK,CAAX,EAYL,CAAC,KAAKG,UAAL,EAAD,CAZK,CAAR;EAaD;AArEM,CAHM","names":["_measurable","_toggleable","extend","name","directives","intersect","_intersect","props","options","type","Object","default","root","undefined","rootMargin","threshold","tag","String","transition","computed","styles","measurableStyles","methods","genContent","children","isActive","$createElement","onObserve","entries","observer","isIntersecting","render","h","staticClass","attrs","$attrs","value","handler","on","$listeners","style"],"sourceRoot":"","sources":["../../../src/components/VLazy/VLazy.ts"],"sourcesContent":["// Mixins\nimport Measurable from '../../mixins/measurable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nexport default mixins(\n  Measurable,\n  Toggleable\n).extend({\n  name: 'VLazy',\n\n  directives: { intersect },\n\n  props: {\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    } as PropValidator<IntersectionObserverInit>,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    transition: {\n      type: String,\n      default: 'fade-transition',\n    },\n  },\n\n  computed: {\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      const children = this.isActive && getSlot(this)\n\n      return this.transition\n        ? this.$createElement('transition', {\n          props: { name: this.transition },\n        }, children)\n        : children\n    },\n    onObserve (\n      entries: IntersectionObserverEntry[],\n      observer: IntersectionObserver,\n      isIntersecting: boolean,\n    ) {\n      if (this.isActive) return\n\n      this.isActive = isIntersecting\n    },\n  },\n\n  render (h): VNode {\n    return h(this.tag, {\n      staticClass: 'v-lazy',\n      attrs: this.$attrs,\n      directives: [{\n        name: 'intersect',\n        value: {\n          handler: this.onObserve,\n          options: this.options,\n        },\n      }],\n      on: this.$listeners,\n      style: this.styles,\n    }, [this.genContent()])\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
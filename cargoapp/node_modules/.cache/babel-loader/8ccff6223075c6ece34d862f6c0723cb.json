{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.from.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nrequire(\"core-js/modules/es.string.split.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _console = require(\"../../util/console\");\n\nvar _colorUtils = require(\"../../util/colorUtils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _default = _vue.default.extend({\n  name: 'colorable',\n  props: {\n    color: String\n  },\n  methods: {\n    setBackgroundColor: function setBackgroundColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        (0, _console.consoleError)('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        (0, _console.consoleError)('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if ((0, _colorUtils.isCssColor)(color)) {\n        data.style = _objectSpread(_objectSpread({}, data.style), {}, {\n          'background-color': \"\".concat(color),\n          'border-color': \"\".concat(color)\n        });\n      } else if (color) {\n        data.class = _objectSpread(_objectSpread({}, data.class), {}, _defineProperty({}, color, true));\n      }\n\n      return data;\n    },\n    setTextColor: function setTextColor(color) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        (0, _console.consoleError)('style must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        (0, _console.consoleError)('class must be an object', this); // istanbul ignore next\n\n        return data;\n      }\n\n      if ((0, _colorUtils.isCssColor)(color)) {\n        data.style = _objectSpread(_objectSpread({}, data.style), {}, {\n          color: \"\".concat(color),\n          'caret-color': \"\".concat(color)\n        });\n      } else if (color) {\n        var _color$toString$trim$ = color.toString().trim().split(' ', 2),\n            _color$toString$trim$2 = _slicedToArray(_color$toString$trim$, 2),\n            colorName = _color$toString$trim$2[0],\n            colorModifier = _color$toString$trim$2[1];\n\n        data.class = _objectSpread(_objectSpread({}, data.class), {}, _defineProperty({}, colorName + '--text', true));\n\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true;\n        }\n      }\n\n      return data;\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAEeA,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAE,WADkB;EAGxBC,KAAK,EAAE;IACLC,KAAK,EAAEC;EADF,CAHiB;EAOxBC,OAAO,EAAE;IACPC,kBADO,8BACaH,KADb,EACyD;MAAA,IAApBI,IAAoB,uEAAF,EAAE;;MAC9D,IAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;QAClC;QACA,2BAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;QACA,OAAOD,IAAP;MACD;;MACD,IAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;QAClC;QACA,2BAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;QACA,OAAOF,IAAP;MACD;;MACD,IAAI,4BAAWJ,KAAX,CAAJ,EAAuB;QACrBI,IAAI,CAACC,KAAL,mCACKD,IAAI,CAACC,KADV;UAEE,8BAAuBL,KAAvB,CAFF;UAGE,0BAAmBA,KAAnB;QAHF;MADF,OAMO,IAAIA,KAAJ,EAAW;QAChBI,IAAI,CAACE,KAAL,mCACKF,IAAI,CAACE,KADV,2BAEGN,KAFH,EAEW,IAFX;MAID;;MAED,OAAOI,IAAP;IA3BK;IA8BPG,YA9BO,wBA8BOP,KA9BP,EA8BmD;MAAA,IAApBI,IAAoB,uEAAF,EAAE;;MACxD,IAAI,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAA1B,EAAoC;QAClC;QACA,2BAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;QACA,OAAOD,IAAP;MACD;;MACD,IAAI,OAAOA,IAAI,CAACE,KAAZ,KAAsB,QAA1B,EAAoC;QAClC;QACA,2BAAa,yBAAb,EAAwC,IAAxC,EAFkC,CAGlC;;QACA,OAAOF,IAAP;MACD;;MACD,IAAI,4BAAWJ,KAAX,CAAJ,EAAuB;QACrBI,IAAI,CAACC,KAAL,mCACKD,IAAI,CAACC,KADV;UAEEL,KAAK,YAAKA,KAAL,CAFP;UAGE,yBAAkBA,KAAlB;QAHF;MADF,OAMO,IAAIA,KAAJ,EAAW;QAAA,4BACmBA,KAAK,CAACQ,QAAN,GAAiBC,IAAjB,GAAwBC,KAAxB,CAA8B,GAA9B,EAAmC,CAAnC,CADnB;QAAA;QAAA,IACTC,SADS;QAAA,IACEC,aADF;;QAEhBR,IAAI,CAACE,KAAL,mCACKF,IAAI,CAACE,KADV,2BAEGK,SAAS,GAAG,QAFf,EAE0B,IAF1B;;QAIA,IAAIC,aAAJ,EAAmB;UACjBR,IAAI,CAACE,KAAL,CAAW,WAAWM,aAAtB,IAAuC,IAAvC;QACD;MACF;;MACD,OAAOR,IAAP;IACD;EA5DM;AAPe,CAAX","names":["_vue","extend","name","props","color","String","methods","setBackgroundColor","data","style","class","setTextColor","toString","trim","split","colorName","colorModifier"],"sourceRoot":"","sources":["../../../src/mixins/colorable/index.ts"],"sourcesContent":["import Vue from 'vue'\nimport { VNodeData } from 'vue/types/vnode'\nimport { consoleError } from '../../util/console'\nimport { isCssColor } from '../../util/colorUtils'\n\nexport default Vue.extend({\n  name: 'colorable',\n\n  props: {\n    color: String,\n  },\n\n  methods: {\n    setBackgroundColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          'background-color': `${color}`,\n          'border-color': `${color}`,\n        }\n      } else if (color) {\n        data.class = {\n          ...data.class,\n          [color]: true,\n        }\n      }\n\n      return data\n    },\n\n    setTextColor (color?: string | false, data: VNodeData = {}): VNodeData {\n      if (typeof data.style === 'string') {\n        // istanbul ignore next\n        consoleError('style must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (typeof data.class === 'string') {\n        // istanbul ignore next\n        consoleError('class must be an object', this)\n        // istanbul ignore next\n        return data\n      }\n      if (isCssColor(color)) {\n        data.style = {\n          ...data.style as object,\n          color: `${color}`,\n          'caret-color': `${color}`,\n        }\n      } else if (color) {\n        const [colorName, colorModifier] = color.toString().trim().split(' ', 2) as (string | undefined)[]\n        data.class = {\n          ...data.class,\n          [colorName + '--text']: true,\n        }\n        if (colorModifier) {\n          data.class['text--' + colorModifier] = true\n        }\n      }\n      return data\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
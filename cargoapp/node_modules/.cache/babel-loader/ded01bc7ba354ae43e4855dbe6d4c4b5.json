{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _registrable = require(\"../../mixins/registrable\");\n\nvar _helpers = require(\"../../util/helpers\");\n\nvar _easingPatterns = require(\"../../services/goto/easing-patterns\"); // Mixins\n// Utilities\n\n\nvar base = (0, _registrable.inject)('VAppBar', 'v-app-bar-title', 'v-app-bar');\n\nvar _default = base.extend().extend({\n  name: 'v-app-bar-title',\n  data: function data() {\n    return {\n      contentWidth: 0,\n      left: 0,\n      width: 0\n    };\n  },\n  watch: {\n    '$vuetify.breakpoint.width': 'updateDimensions'\n  },\n  computed: {\n    styles: function styles() {\n      if (!this.contentWidth) return {};\n      var min = this.width;\n      var max = this.contentWidth;\n      var ratio = (0, _easingPatterns.easeInOutCubic)(Math.min(1, this.VAppBar.scrollRatio * 1.5));\n      return {\n        width: (0, _helpers.convertToUnit)(min + (max - min) * ratio),\n        visibility: this.VAppBar.scrollRatio ? 'visible' : 'hidden'\n      };\n    }\n  },\n  mounted: function mounted() {\n    this.updateDimensions();\n  },\n  methods: {\n    updateDimensions: function updateDimensions() {\n      var dimensions = this.$refs.placeholder.getBoundingClientRect();\n      this.width = dimensions.width;\n      this.left = dimensions.left;\n      this.contentWidth = this.$refs.content.scrollWidth;\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: 'v-toolbar__title v-app-bar-title'\n    }, [h('div', {\n      class: 'v-app-bar-title__content',\n      style: this.styles,\n      ref: 'content'\n    }, [this.$slots.default]), h('div', {\n      class: 'v-app-bar-title__placeholder',\n      style: {\n        visibility: this.VAppBar.scrollRatio ? 'hidden' : 'visible'\n      },\n      ref: 'placeholder'\n    }, [this.$slots.default])]);\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AACA;;AAQA;;AACA,qE,CAVA;AAQA;;;AAIA,IAAMA,IAAI,GAAG,yBAAkC,SAAlC,EAA6C,iBAA7C,EAAgE,WAAhE,CAAb;;eASeA,IAAI,CAACC,MAAL,GAAuBA,MAAvB,CAA8B;EAC3CC,IAAI,EAAE,iBADqC;EAG3CC,IAAI,EAAE;IAAA,OAAO;MACXC,YAAY,EAAE,CADH;MAEXC,IAAI,EAAE,CAFK;MAGXC,KAAK,EAAE;IAHI,CAAP;EAHqC;EAS3CC,KAAK,EAAE;IACL,6BAA6B;EADxB,CAToC;EAa3CC,QAAQ,EAAE;IACRC,MADQ,oBACF;MACJ,IAAI,CAAC,KAAKL,YAAV,EAAwB,OAAO,EAAP;MAExB,IAAMM,GAAG,GAAG,KAAKJ,KAAjB;MACA,IAAMK,GAAG,GAAG,KAAKP,YAAjB;MACA,IAAMQ,KAAK,GAAG,oCAAeC,IAAI,CAACH,GAAL,CAAS,CAAT,EAAY,KAAKI,OAAL,CAAaC,WAAb,GAA2B,GAAvC,CAAf,CAAd;MACA,OAAO;QACLT,KAAK,EAAE,4BAAcI,GAAG,GAAG,CAACC,GAAG,GAAGD,GAAP,IAAcE,KAAlC,CADF;QAELI,UAAU,EAAE,KAAKF,OAAL,CAAaC,WAAb,GAA2B,SAA3B,GAAuC;MAF9C,CAAP;IAID;EAXO,CAbiC;EA2B3CE,OA3B2C,qBA2BpC;IACL,KAAKC,gBAAL;EA5ByC;EA+B3CC,OAAO,EAAE;IACPD,gBADO,8BACS;MACd,IAAME,UAAU,GAAG,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,qBAAvB,EAAnB;MACA,KAAKjB,KAAL,GAAac,UAAU,CAACd,KAAxB;MACA,KAAKD,IAAL,GAAYe,UAAU,CAACf,IAAvB;MACA,KAAKD,YAAL,GAAoB,KAAKiB,KAAL,CAAWG,OAAX,CAAmBC,WAAvC;IACD;EANM,CA/BkC;EAwC3CC,MAxC2C,kBAwCnCC,CAxCmC,EAwClC;IACP,OAAOA,CAAC,CAAC,KAAD,EAAQ;MACdC,KAAK,EAAE;IADO,CAAR,EAEL,CACDD,CAAC,CAAC,KAAD,EAAQ;MACPC,KAAK,EAAE,0BADA;MAEPC,KAAK,EAAE,KAAKpB,MAFL;MAGPqB,GAAG,EAAE;IAHE,CAAR,EAIE,CAAC,KAAKC,MAAL,CAAYC,OAAb,CAJF,CADA,EAMDL,CAAC,CAAC,KAAD,EAAQ;MACPC,KAAK,EAAE,8BADA;MAEPC,KAAK,EAAE;QACLb,UAAU,EAAE,KAAKF,OAAL,CAAaC,WAAb,GAA2B,QAA3B,GAAsC;MAD7C,CAFA;MAKPe,GAAG,EAAE;IALE,CAAR,EAME,CAAC,KAAKC,MAAL,CAAYC,OAAb,CANF,CANA,CAFK,CAAR;EAgBD;AAzD0C,CAA9B","names":["base","extend","name","data","contentWidth","left","width","watch","computed","styles","min","max","ratio","Math","VAppBar","scrollRatio","visibility","mounted","updateDimensions","methods","dimensions","$refs","placeholder","getBoundingClientRect","content","scrollWidth","render","h","class","style","ref","$slots","default"],"sourceRoot":"","sources":["../../../src/components/VAppBar/VAppBarTitle.ts"],"sourcesContent":["// Mixins\nimport { inject } from '../../mixins/registrable'\n\n// Types\nimport { VNode } from 'vue'\nimport { ExtractVue } from '../../util/mixins'\nimport VAppBar from './VAppBar'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport { easeInOutCubic } from '../../services/goto/easing-patterns'\n\nconst base = inject<'VAppBar', typeof VAppBar>('VAppBar', 'v-app-bar-title', 'v-app-bar')\n\ninterface options extends ExtractVue<typeof base> {\n  $refs: {\n    content: Element\n    placeholder: Element\n  }\n}\n\nexport default base.extend<options>().extend({\n  name: 'v-app-bar-title',\n\n  data: () => ({\n    contentWidth: 0,\n    left: 0,\n    width: 0,\n  }),\n\n  watch: {\n    '$vuetify.breakpoint.width': 'updateDimensions',\n  },\n\n  computed: {\n    styles (): object {\n      if (!this.contentWidth) return {}\n\n      const min = this.width\n      const max = this.contentWidth\n      const ratio = easeInOutCubic(Math.min(1, this.VAppBar.scrollRatio * 1.5))\n      return {\n        width: convertToUnit(min + (max - min) * ratio),\n        visibility: this.VAppBar.scrollRatio ? 'visible' : 'hidden',\n      }\n    },\n  },\n\n  mounted () {\n    this.updateDimensions()\n  },\n\n  methods: {\n    updateDimensions (): void {\n      const dimensions = this.$refs.placeholder.getBoundingClientRect()\n      this.width = dimensions.width\n      this.left = dimensions.left\n      this.contentWidth = this.$refs.content.scrollWidth\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      class: 'v-toolbar__title v-app-bar-title',\n    }, [\n      h('div', {\n        class: 'v-app-bar-title__content',\n        style: this.styles,\n        ref: 'content',\n      }, [this.$slots.default]),\n      h('div', {\n        class: 'v-app-bar-title__placeholder',\n        style: {\n          visibility: this.VAppBar.scrollRatio ? 'hidden' : 'visible',\n        },\n        ref: 'placeholder',\n      }, [this.$slots.default]),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
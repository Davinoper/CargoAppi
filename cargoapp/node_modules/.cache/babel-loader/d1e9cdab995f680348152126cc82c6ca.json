{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.BaseItem = void 0;\n\nvar _groupable = require(\"../../mixins/groupable\");\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nvar _console = require(\"../../util/console\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* @vue/component */\n\n\nvar BaseItem = _vue.default.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      isActive: false\n    };\n  },\n  methods: {\n    toggle: function toggle() {\n      this.isActive = !this.isActive;\n    }\n  },\n  render: function render() {\n    if (!this.$scopedSlots.default) {\n      (0, _console.consoleWarn)('v-item is missing a default scopedSlot', this);\n      return null;\n    }\n\n    var element;\n    /* istanbul ignore else */\n\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle\n      });\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0];\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      (0, _console.consoleWarn)('v-item should only contain a single element', this);\n      return element;\n    }\n\n    element.data = this._b(element.data || {}, element.tag, {\n      class: _defineProperty({}, this.activeClass, this.isActive)\n    });\n    return element;\n  }\n});\n\nexports.BaseItem = BaseItem;\n\nvar _default = (0, _mixins.default)(BaseItem, (0, _groupable.factory)('itemGroup', 'v-item', 'v-item-group')).extend({\n  name: 'v-item'\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AACA;;AAGA;;AACA;;AAGA;;;;;;;;;;;;;;;;;;;;;;AAGA;;;AACO,IAAMA,QAAQ,GAAGC,aAAIC,MAAJ,CAAW;EACjCC,KAAK,EAAE;IACLC,WAAW,EAAEC,MADR;IAELC,KAAK,EAAE;MACLC,QAAQ,EAAE;IADL;EAFF,CAD0B;EAQjCC,IAAI,EAAE;IAAA,OAAO;MACXC,QAAQ,EAAE;IADC,CAAP;EAR2B;EAYjCC,OAAO,EAAE;IACPC,MADO,oBACD;MACJ,KAAKF,QAAL,GAAgB,CAAC,KAAKA,QAAtB;IACD;EAHM,CAZwB;EAkBjCG,MAlBiC,oBAkB3B;IACJ,IAAI,CAAC,KAAKC,YAAL,CAAkBC,OAAvB,EAAgC;MAC9B,0BAAY,wCAAZ,EAAsD,IAAtD;MAEA,OAAO,IAAP;IACD;;IAED,IAAIC,OAAJ;IAEA;;IACA,IAAI,KAAKF,YAAL,CAAkBC,OAAtB,EAA+B;MAC7BC,OAAO,GAAG,KAAKF,YAAL,CAAkBC,OAAlB,CAA0B;QAClCE,MAAM,EAAE,KAAKP,QADqB;QAElCE,MAAM,EAAE,KAAKA;MAFqB,CAA1B,CAAV;IAID;;IAED,IAAIM,KAAK,CAACC,OAAN,CAAcH,OAAd,KAA0BA,OAAO,CAACI,MAAR,KAAmB,CAAjD,EAAoD;MAClDJ,OAAO,GAAGA,OAAO,CAAC,CAAD,CAAjB;IACD;;IAED,IAAI,CAACA,OAAD,IAAYE,KAAK,CAACC,OAAN,CAAcH,OAAd,CAAZ,IAAsC,CAACA,OAAO,CAACK,GAAnD,EAAwD;MACtD,0BAAY,6CAAZ,EAA2D,IAA3D;MAEA,OAAOL,OAAP;IACD;;IAEDA,OAAO,CAACP,IAAR,GAAe,KAAKa,EAAL,CAAQN,OAAO,CAACP,IAAR,IAAgB,EAAxB,EAA4BO,OAAO,CAACK,GAApC,EAA0C;MACvDE,KAAK,sBAAK,KAAKlB,WAAV,EAAwB,KAAKK,QAA7B;IADkD,CAA1C,CAAf;IAIA,OAAOM,OAAP;EACD;AAlDgC,CAAX,CAAjB;;;;eAqDQ,qBACbf,QADa,EAEb,wBAAiB,WAAjB,EAA8B,QAA9B,EAAwC,cAAxC,CAFa,EAGbE,MAHa,CAGN;EACPqB,IAAI,EAAE;AADC,CAHM","names":["BaseItem","_vue","extend","props","activeClass","String","value","required","data","isActive","methods","toggle","render","$scopedSlots","default","element","active","Array","isArray","length","tag","_b","class","name"],"sourceRoot":"","sources":["../../../src/components/VItemGroup/VItem.ts"],"sourcesContent":["// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\nimport { VNode, ScopedSlotChildren } from 'vue/types/vnode'\n\n/* @vue/component */\nexport const BaseItem = Vue.extend({\n  props: {\n    activeClass: String,\n    value: {\n      required: false,\n    },\n  },\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  methods: {\n    toggle () {\n      this.isActive = !this.isActive\n    },\n  },\n\n  render (): VNode {\n    if (!this.$scopedSlots.default) {\n      consoleWarn('v-item is missing a default scopedSlot', this)\n\n      return null as any\n    }\n\n    let element: VNode | ScopedSlotChildren\n\n    /* istanbul ignore else */\n    if (this.$scopedSlots.default) {\n      element = this.$scopedSlots.default({\n        active: this.isActive,\n        toggle: this.toggle,\n      })\n    }\n\n    if (Array.isArray(element) && element.length === 1) {\n      element = element[0]\n    }\n\n    if (!element || Array.isArray(element) || !element.tag) {\n      consoleWarn('v-item should only contain a single element', this)\n\n      return element as any\n    }\n\n    element.data = this._b(element.data || {}, element.tag!, {\n      class: { [this.activeClass]: this.isActive },\n    })\n\n    return element\n  },\n})\n\nexport default mixins(\n  BaseItem,\n  GroupableFactory('itemGroup', 'v-item', 'v-item-group')\n).extend({\n  name: 'v-item',\n})\n"]},"metadata":{},"sourceType":"script"}
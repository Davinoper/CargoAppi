{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStartOfWeek = getStartOfWeek;\nexports.getEndOfWeek = getEndOfWeek;\nexports.getStartOfMonth = getStartOfMonth;\nexports.getEndOfMonth = getEndOfMonth;\nexports.validateTime = validateTime;\nexports.parseTime = parseTime;\nexports.validateTimestamp = validateTimestamp;\nexports.parseTimestamp = parseTimestamp;\nexports.parseDate = parseDate;\nexports.getDayIdentifier = getDayIdentifier;\nexports.getTimeIdentifier = getTimeIdentifier;\nexports.getTimestampIdentifier = getTimestampIdentifier;\nexports.updateRelative = updateRelative;\nexports.isTimedless = isTimedless;\nexports.updateHasTime = updateHasTime;\nexports.updateMinutes = updateMinutes;\nexports.updateWeekday = updateWeekday;\nexports.updateFormatted = updateFormatted;\nexports.getWeekday = getWeekday;\nexports.daysInMonth = daysInMonth;\nexports.copyTimestamp = copyTimestamp;\nexports.padNumber = padNumber;\nexports.getDate = getDate;\nexports.getTime = getTime;\nexports.nextMinutes = nextMinutes;\nexports.nextDay = nextDay;\nexports.prevDay = prevDay;\nexports.relativeDays = relativeDays;\nexports.diffMinutes = diffMinutes;\nexports.findWeekday = findWeekday;\nexports.getWeekdaySkips = getWeekdaySkips;\nexports.timestampToDate = timestampToDate;\nexports.createDayList = createDayList;\nexports.createIntervalList = createIntervalList;\nexports.createNativeLocaleFormatter = createNativeLocaleFormatter;\nexports.OFFSET_TIME = exports.OFFSET_HOUR = exports.OFFSET_MONTH = exports.OFFSET_YEAR = exports.FIRST_HOUR = exports.HOUR_MAX = exports.HOURS_IN_DAY = exports.MINUTES_IN_DAY = exports.MINUTE_MAX = exports.MINUTES_IN_HOUR = exports.DAYS_IN_WEEK = exports.DAY_MIN = exports.MONTH_MIN = exports.MONTH_MAX = exports.DAYS_IN_MONTH_MAX = exports.DAYS_IN_MONTH_MIN = exports.DAYS_IN_MONTH_LEAP = exports.DAYS_IN_MONTH = exports.PARSE_TIME = exports.PARSE_REGEX = void 0;\n\nvar _dateTimeUtils = require(\"../../../util/dateTimeUtils\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar PARSE_REGEX = /^(\\d{4})-(\\d{1,2})(-(\\d{1,2}))?([^\\d]+(\\d{1,2}))?(:(\\d{1,2}))?(:(\\d{1,2}))?$/;\nexports.PARSE_REGEX = PARSE_REGEX;\nvar PARSE_TIME = /(\\d\\d?)(:(\\d\\d?)|)(:(\\d\\d?)|)/;\nexports.PARSE_TIME = PARSE_TIME;\nvar DAYS_IN_MONTH = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexports.DAYS_IN_MONTH = DAYS_IN_MONTH;\nvar DAYS_IN_MONTH_LEAP = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nexports.DAYS_IN_MONTH_LEAP = DAYS_IN_MONTH_LEAP;\nvar DAYS_IN_MONTH_MIN = 28;\nexports.DAYS_IN_MONTH_MIN = DAYS_IN_MONTH_MIN;\nvar DAYS_IN_MONTH_MAX = 31;\nexports.DAYS_IN_MONTH_MAX = DAYS_IN_MONTH_MAX;\nvar MONTH_MAX = 12;\nexports.MONTH_MAX = MONTH_MAX;\nvar MONTH_MIN = 1;\nexports.MONTH_MIN = MONTH_MIN;\nvar DAY_MIN = 1;\nexports.DAY_MIN = DAY_MIN;\nvar DAYS_IN_WEEK = 7;\nexports.DAYS_IN_WEEK = DAYS_IN_WEEK;\nvar MINUTES_IN_HOUR = 60;\nexports.MINUTES_IN_HOUR = MINUTES_IN_HOUR;\nvar MINUTE_MAX = 59;\nexports.MINUTE_MAX = MINUTE_MAX;\nvar MINUTES_IN_DAY = 24 * 60;\nexports.MINUTES_IN_DAY = MINUTES_IN_DAY;\nvar HOURS_IN_DAY = 24;\nexports.HOURS_IN_DAY = HOURS_IN_DAY;\nvar HOUR_MAX = 23;\nexports.HOUR_MAX = HOUR_MAX;\nvar FIRST_HOUR = 0;\nexports.FIRST_HOUR = FIRST_HOUR;\nvar OFFSET_YEAR = 10000;\nexports.OFFSET_YEAR = OFFSET_YEAR;\nvar OFFSET_MONTH = 100;\nexports.OFFSET_MONTH = OFFSET_MONTH;\nvar OFFSET_HOUR = 100;\nexports.OFFSET_HOUR = OFFSET_HOUR;\nvar OFFSET_TIME = 10000;\nexports.OFFSET_TIME = OFFSET_TIME;\n\nfunction getStartOfWeek(timestamp, weekdays, today) {\n  var start = copyTimestamp(timestamp);\n  findWeekday(start, weekdays[0], prevDay);\n  updateFormatted(start);\n\n  if (today) {\n    updateRelative(start, today, start.hasTime);\n  }\n\n  return start;\n}\n\nfunction getEndOfWeek(timestamp, weekdays, today) {\n  var end = copyTimestamp(timestamp);\n  findWeekday(end, weekdays[weekdays.length - 1]);\n  updateFormatted(end);\n\n  if (today) {\n    updateRelative(end, today, end.hasTime);\n  }\n\n  return end;\n}\n\nfunction getStartOfMonth(timestamp) {\n  var start = copyTimestamp(timestamp);\n  start.day = DAY_MIN;\n  updateWeekday(start);\n  updateFormatted(start);\n  return start;\n}\n\nfunction getEndOfMonth(timestamp) {\n  var end = copyTimestamp(timestamp);\n  end.day = daysInMonth(end.year, end.month);\n  updateWeekday(end);\n  updateFormatted(end);\n  return end;\n}\n\nfunction validateTime(input) {\n  return typeof input === 'number' && isFinite(input) || !!PARSE_TIME.exec(input) || _typeof(input) === 'object' && isFinite(input.hour) && isFinite(input.minute);\n}\n\nfunction parseTime(input) {\n  if (typeof input === 'number') {\n    // when a number is given, it's minutes since 12:00am\n    return input;\n  } else if (typeof input === 'string') {\n    // when a string is given, it's a hh:mm:ss format where seconds are optional\n    var parts = PARSE_TIME.exec(input);\n\n    if (!parts) {\n      return false;\n    }\n\n    return parseInt(parts[1]) * 60 + parseInt(parts[3] || 0);\n  } else if (_typeof(input) === 'object') {\n    // when an object is given, it must have hour and minute\n    if (typeof input.hour !== 'number' || typeof input.minute !== 'number') {\n      return false;\n    }\n\n    return input.hour * 60 + input.minute;\n  } else {\n    // unsupported type\n    return false;\n  }\n}\n\nfunction validateTimestamp(input) {\n  return typeof input === 'number' && isFinite(input) || typeof input === 'string' && !!PARSE_REGEX.exec(input) || input instanceof Date;\n}\n\nfunction parseTimestamp(input) {\n  var required = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var now = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (typeof input === 'number' && isFinite(input)) {\n    input = new Date(input);\n  }\n\n  if (input instanceof Date) {\n    var date = parseDate(input);\n\n    if (now) {\n      updateRelative(date, now, date.hasTime);\n    }\n\n    return date;\n  }\n\n  if (typeof input !== 'string') {\n    if (required) {\n      throw new Error(\"\".concat(input, \" is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.\"));\n    }\n\n    return null;\n  } // YYYY-MM-DD hh:mm:ss\n\n\n  var parts = PARSE_REGEX.exec(input);\n\n  if (!parts) {\n    if (required) {\n      throw new Error(\"\".concat(input, \" is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.\"));\n    }\n\n    return null;\n  }\n\n  var timestamp = {\n    date: input,\n    time: '',\n    year: parseInt(parts[1]),\n    month: parseInt(parts[2]),\n    day: parseInt(parts[4]) || 1,\n    hour: parseInt(parts[6]) || 0,\n    minute: parseInt(parts[8]) || 0,\n    weekday: 0,\n    hasDay: !!parts[4],\n    hasTime: !!(parts[6] && parts[8]),\n    past: false,\n    present: false,\n    future: false\n  };\n  updateWeekday(timestamp);\n  updateFormatted(timestamp);\n\n  if (now) {\n    updateRelative(timestamp, now, timestamp.hasTime);\n  }\n\n  return timestamp;\n}\n\nfunction parseDate(date) {\n  return updateFormatted({\n    date: '',\n    time: '',\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    weekday: date.getDay(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    hasDay: true,\n    hasTime: true,\n    past: false,\n    present: true,\n    future: false\n  });\n}\n\nfunction getDayIdentifier(timestamp) {\n  return timestamp.year * OFFSET_YEAR + timestamp.month * OFFSET_MONTH + timestamp.day;\n}\n\nfunction getTimeIdentifier(timestamp) {\n  return timestamp.hour * OFFSET_HOUR + timestamp.minute;\n}\n\nfunction getTimestampIdentifier(timestamp) {\n  return getDayIdentifier(timestamp) * OFFSET_TIME + getTimeIdentifier(timestamp);\n}\n\nfunction updateRelative(timestamp, now) {\n  var time = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var a = getDayIdentifier(now);\n  var b = getDayIdentifier(timestamp);\n  var present = a === b;\n\n  if (timestamp.hasTime && time && present) {\n    a = getTimeIdentifier(now);\n    b = getTimeIdentifier(timestamp);\n    present = a === b;\n  }\n\n  timestamp.past = b < a;\n  timestamp.present = present;\n  timestamp.future = b > a;\n  return timestamp;\n}\n\nfunction isTimedless(input) {\n  return input instanceof Date || typeof input === 'number' && isFinite(input);\n}\n\nfunction updateHasTime(timestamp, hasTime, now) {\n  if (timestamp.hasTime !== hasTime) {\n    timestamp.hasTime = hasTime;\n\n    if (!hasTime) {\n      timestamp.hour = HOUR_MAX;\n      timestamp.minute = MINUTE_MAX;\n      timestamp.time = getTime(timestamp);\n    }\n\n    if (now) {\n      updateRelative(timestamp, now, timestamp.hasTime);\n    }\n  }\n\n  return timestamp;\n}\n\nfunction updateMinutes(timestamp, minutes, now) {\n  timestamp.hasTime = true;\n  timestamp.hour = Math.floor(minutes / MINUTES_IN_HOUR);\n  timestamp.minute = minutes % MINUTES_IN_HOUR;\n  timestamp.time = getTime(timestamp);\n\n  if (now) {\n    updateRelative(timestamp, now, true);\n  }\n\n  return timestamp;\n}\n\nfunction updateWeekday(timestamp) {\n  timestamp.weekday = getWeekday(timestamp);\n  return timestamp;\n}\n\nfunction updateFormatted(timestamp) {\n  timestamp.time = getTime(timestamp);\n  timestamp.date = getDate(timestamp);\n  return timestamp;\n}\n\nfunction getWeekday(timestamp) {\n  if (timestamp.hasDay) {\n    var _ = Math.floor;\n    var k = timestamp.day;\n    var m = (timestamp.month + 9) % MONTH_MAX + 1;\n\n    var C = _(timestamp.year / 100);\n\n    var Y = timestamp.year % 100 - (timestamp.month <= 2 ? 1 : 0);\n    return ((k + _(2.6 * m - 0.2) - 2 * C + Y + _(Y / 4) + _(C / 4)) % 7 + 7) % 7;\n  }\n\n  return timestamp.weekday;\n}\n\nfunction daysInMonth(year, month) {\n  return (0, _dateTimeUtils.isLeapYear)(year) ? DAYS_IN_MONTH_LEAP[month] : DAYS_IN_MONTH[month];\n}\n\nfunction copyTimestamp(timestamp) {\n  var date = timestamp.date,\n      time = timestamp.time,\n      year = timestamp.year,\n      month = timestamp.month,\n      day = timestamp.day,\n      weekday = timestamp.weekday,\n      hour = timestamp.hour,\n      minute = timestamp.minute,\n      hasDay = timestamp.hasDay,\n      hasTime = timestamp.hasTime,\n      past = timestamp.past,\n      present = timestamp.present,\n      future = timestamp.future;\n  return {\n    date: date,\n    time: time,\n    year: year,\n    month: month,\n    day: day,\n    weekday: weekday,\n    hour: hour,\n    minute: minute,\n    hasDay: hasDay,\n    hasTime: hasTime,\n    past: past,\n    present: present,\n    future: future\n  };\n}\n\nfunction padNumber(x, length) {\n  var padded = String(x);\n\n  while (padded.length < length) {\n    padded = '0' + padded;\n  }\n\n  return padded;\n}\n\nfunction getDate(timestamp) {\n  var str = \"\".concat(padNumber(timestamp.year, 4), \"-\").concat(padNumber(timestamp.month, 2));\n  if (timestamp.hasDay) str += \"-\".concat(padNumber(timestamp.day, 2));\n  return str;\n}\n\nfunction getTime(timestamp) {\n  if (!timestamp.hasTime) {\n    return '';\n  }\n\n  return \"\".concat(padNumber(timestamp.hour, 2), \":\").concat(padNumber(timestamp.minute, 2));\n}\n\nfunction nextMinutes(timestamp, minutes) {\n  timestamp.minute += minutes;\n\n  while (timestamp.minute > MINUTES_IN_HOUR) {\n    timestamp.minute -= MINUTES_IN_HOUR;\n    timestamp.hour++;\n\n    if (timestamp.hour >= HOURS_IN_DAY) {\n      nextDay(timestamp);\n      timestamp.hour = FIRST_HOUR;\n    }\n  }\n\n  return timestamp;\n}\n\nfunction nextDay(timestamp) {\n  timestamp.day++;\n  timestamp.weekday = (timestamp.weekday + 1) % DAYS_IN_WEEK;\n\n  if (timestamp.day > DAYS_IN_MONTH_MIN && timestamp.day > daysInMonth(timestamp.year, timestamp.month)) {\n    timestamp.day = DAY_MIN;\n    timestamp.month++;\n\n    if (timestamp.month > MONTH_MAX) {\n      timestamp.month = MONTH_MIN;\n      timestamp.year++;\n    }\n  }\n\n  return timestamp;\n}\n\nfunction prevDay(timestamp) {\n  timestamp.day--;\n  timestamp.weekday = (timestamp.weekday + 6) % DAYS_IN_WEEK;\n\n  if (timestamp.day < DAY_MIN) {\n    timestamp.month--;\n\n    if (timestamp.month < MONTH_MIN) {\n      timestamp.year--;\n      timestamp.month = MONTH_MAX;\n    }\n\n    timestamp.day = daysInMonth(timestamp.year, timestamp.month);\n  }\n\n  return timestamp;\n}\n\nfunction relativeDays(timestamp) {\n  var mover = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : nextDay;\n  var days = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n  while (--days >= 0) {\n    mover(timestamp);\n  }\n\n  return timestamp;\n}\n\nfunction diffMinutes(min, max) {\n  var Y = (max.year - min.year) * 525600;\n  var M = (max.month - min.month) * 43800;\n  var D = (max.day - min.day) * 1440;\n  var h = (max.hour - min.hour) * 60;\n  var m = max.minute - min.minute;\n  return Y + M + D + h + m;\n}\n\nfunction findWeekday(timestamp, weekday) {\n  var mover = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : nextDay;\n  var maxDays = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 6;\n\n  while (timestamp.weekday !== weekday && --maxDays >= 0) {\n    mover(timestamp);\n  }\n\n  return timestamp;\n}\n\nfunction getWeekdaySkips(weekdays) {\n  var skips = [1, 1, 1, 1, 1, 1, 1];\n  var filled = [0, 0, 0, 0, 0, 0, 0];\n\n  for (var i = 0; i < weekdays.length; i++) {\n    filled[weekdays[i]] = 1;\n  }\n\n  for (var k = 0; k < DAYS_IN_WEEK; k++) {\n    var skip = 1;\n\n    for (var j = 1; j < DAYS_IN_WEEK; j++) {\n      var next = (k + j) % DAYS_IN_WEEK;\n\n      if (filled[next]) {\n        break;\n      }\n\n      skip++;\n    }\n\n    skips[k] = filled[k] * skip;\n  }\n\n  return skips;\n}\n\nfunction timestampToDate(timestamp) {\n  var time = \"\".concat(padNumber(timestamp.hour, 2), \":\").concat(padNumber(timestamp.minute, 2));\n  var date = timestamp.date;\n  return new Date(\"\".concat(date, \"T\").concat(time, \":00+00:00\"));\n}\n\nfunction createDayList(start, end, now, weekdaySkips) {\n  var max = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 42;\n  var min = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n  var stop = getDayIdentifier(end);\n  var days = [];\n  var current = copyTimestamp(start);\n  var currentIdentifier = 0;\n  var stopped = currentIdentifier === stop;\n\n  if (stop < getDayIdentifier(start)) {\n    throw new Error('End date is earlier than start date.');\n  }\n\n  while ((!stopped || days.length < min) && days.length < max) {\n    currentIdentifier = getDayIdentifier(current);\n    stopped = stopped || currentIdentifier === stop;\n\n    if (weekdaySkips[current.weekday] === 0) {\n      current = nextDay(current);\n      continue;\n    }\n\n    var day = copyTimestamp(current);\n    updateFormatted(day);\n    updateRelative(day, now);\n    days.push(day);\n    current = relativeDays(current, nextDay, weekdaySkips[current.weekday]);\n  }\n\n  if (!days.length) throw new Error('No dates found using specified start date, end date, and weekdays.');\n  return days;\n}\n\nfunction createIntervalList(timestamp, first, minutes, count, now) {\n  var intervals = [];\n\n  for (var i = 0; i < count; i++) {\n    var mins = first + i * minutes;\n    var int = copyTimestamp(timestamp);\n    intervals.push(updateMinutes(int, mins, now));\n  }\n\n  return intervals;\n}\n\nfunction createNativeLocaleFormatter(locale, getOptions) {\n  var emptyFormatter = function emptyFormatter(_t, _s) {\n    return '';\n  };\n\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return emptyFormatter;\n  }\n\n  return function (timestamp, short) {\n    try {\n      var intlFormatter = new Intl.DateTimeFormat(locale || undefined, getOptions(timestamp, short));\n      return intlFormatter.format(timestampToDate(timestamp));\n    } catch (e) {\n      return '';\n    }\n  };\n}","map":{"version":3,"mappings":"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","names":["PARSE_REGEX","PARSE_TIME","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP","DAYS_IN_MONTH_MIN","DAYS_IN_MONTH_MAX","MONTH_MAX","MONTH_MIN","DAY_MIN","DAYS_IN_WEEK","MINUTES_IN_HOUR","MINUTE_MAX","MINUTES_IN_DAY","HOURS_IN_DAY","HOUR_MAX","FIRST_HOUR","OFFSET_YEAR","OFFSET_MONTH","OFFSET_HOUR","OFFSET_TIME","getStartOfWeek","timestamp","weekdays","today","start","copyTimestamp","findWeekday","prevDay","updateFormatted","updateRelative","hasTime","getEndOfWeek","end","length","getStartOfMonth","day","updateWeekday","getEndOfMonth","daysInMonth","year","month","validateTime","input","isFinite","exec","_typeof","hour","minute","parseTime","parts","parseInt","validateTimestamp","Date","parseTimestamp","required","now","date","parseDate","Error","time","weekday","hasDay","past","present","future","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","getDayIdentifier","getTimeIdentifier","getTimestampIdentifier","a","b","isTimedless","updateHasTime","getTime","updateMinutes","minutes","Math","floor","getWeekday","_","k","m","C","Y","padNumber","x","padded","String","str","nextMinutes","nextDay","relativeDays","mover","days","diffMinutes","min","max","M","D","h","maxDays","getWeekdaySkips","skips","filled","i","skip","j","next","timestampToDate","createDayList","weekdaySkips","stop","current","currentIdentifier","stopped","push","createIntervalList","first","count","intervals","mins","int","createNativeLocaleFormatter","locale","getOptions","emptyFormatter","_t","_s","Intl","DateTimeFormat","short","intlFormatter","undefined","format","e"],"sourceRoot":"","sources":["../../../../src/components/VCalendar/util/timestamp.ts"],"sourcesContent":["import { CalendarTimestamp, CalendarFormatter } from 'vuetify/types'\nimport { isLeapYear } from '../../../util/dateTimeUtils'\n\nexport const PARSE_REGEX = /^(\\d{4})-(\\d{1,2})(-(\\d{1,2}))?([^\\d]+(\\d{1,2}))?(:(\\d{1,2}))?(:(\\d{1,2}))?$/\nexport const PARSE_TIME = /(\\d\\d?)(:(\\d\\d?)|)(:(\\d\\d?)|)/\n\nexport const DAYS_IN_MONTH: number[] = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_LEAP: number[] = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_MIN = 28\nexport const DAYS_IN_MONTH_MAX = 31\nexport const MONTH_MAX = 12\nexport const MONTH_MIN = 1\nexport const DAY_MIN = 1\nexport const DAYS_IN_WEEK = 7\nexport const MINUTES_IN_HOUR = 60\nexport const MINUTE_MAX = 59\nexport const MINUTES_IN_DAY = 24 * 60\nexport const HOURS_IN_DAY = 24\nexport const HOUR_MAX = 23\nexport const FIRST_HOUR = 0\nexport const OFFSET_YEAR = 10000\nexport const OFFSET_MONTH = 100\nexport const OFFSET_HOUR = 100\nexport const OFFSET_TIME = 10000\n\ntype CalendarTimestampFormatOptions = (timestamp: CalendarTimestamp, short: boolean) => object\ntype CalendarTimestampOperation = (timestamp: CalendarTimestamp) => CalendarTimestamp\nexport type VTime = number | string | {\n  hour: number\n  minute: number\n}\n\nexport type VTimestampInput = number | string | Date;\n\nexport function getStartOfWeek (timestamp: CalendarTimestamp, weekdays: number[], today?: CalendarTimestamp): CalendarTimestamp {\n  const start = copyTimestamp(timestamp)\n  findWeekday(start, weekdays[0], prevDay)\n  updateFormatted(start)\n  if (today) {\n    updateRelative(start, today, start.hasTime)\n  }\n\n  return start\n}\n\nexport function getEndOfWeek (timestamp: CalendarTimestamp, weekdays: number[], today?: CalendarTimestamp): CalendarTimestamp {\n  const end = copyTimestamp(timestamp)\n  findWeekday(end, weekdays[weekdays.length - 1])\n  updateFormatted(end)\n  if (today) {\n    updateRelative(end, today, end.hasTime)\n  }\n\n  return end\n}\n\nexport function getStartOfMonth (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const start = copyTimestamp(timestamp)\n  start.day = DAY_MIN\n  updateWeekday(start)\n  updateFormatted(start)\n\n  return start\n}\n\nexport function getEndOfMonth (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const end = copyTimestamp(timestamp)\n  end.day = daysInMonth(end.year, end.month)\n  updateWeekday(end)\n  updateFormatted(end)\n\n  return end\n}\n\nexport function validateTime (input: any): input is VTime {\n  return (typeof input === 'number' && isFinite(input)) ||\n    (!!PARSE_TIME.exec(input)) ||\n    (typeof input === 'object' && isFinite(input.hour) && isFinite(input.minute))\n}\n\nexport function parseTime (input: any): number | false {\n  if (typeof input === 'number') {\n    // when a number is given, it's minutes since 12:00am\n    return input\n  } else if (typeof input === 'string') {\n    // when a string is given, it's a hh:mm:ss format where seconds are optional\n    const parts = PARSE_TIME.exec(input)\n    if (!parts) {\n      return false\n    }\n\n    return parseInt(parts[1]) * 60 + parseInt(parts[3] || 0)\n  } else if (typeof input === 'object') {\n    // when an object is given, it must have hour and minute\n    if (typeof input.hour !== 'number' || typeof input.minute !== 'number') {\n      return false\n    }\n\n    return input.hour * 60 + input.minute\n  } else {\n    // unsupported type\n    return false\n  }\n}\n\nexport function validateTimestamp (input: any): input is VTimestampInput {\n  return (typeof input === 'number' && isFinite(input)) ||\n    (typeof input === 'string' && !!PARSE_REGEX.exec(input)) ||\n    (input instanceof Date)\n}\n\nexport function parseTimestamp (input: VTimestampInput, required?: false, now?: CalendarTimestamp): CalendarTimestamp | null\nexport function parseTimestamp (input: VTimestampInput, required: true, now?: CalendarTimestamp): CalendarTimestamp\nexport function parseTimestamp (input: VTimestampInput, required = false, now?: CalendarTimestamp): CalendarTimestamp | null {\n  if (typeof input === 'number' && isFinite(input)) {\n    input = new Date(input)\n  }\n\n  if (input instanceof Date) {\n    const date: CalendarTimestamp = parseDate(input)\n\n    if (now) {\n      updateRelative(date, now, date.hasTime)\n    }\n\n    return date\n  }\n\n  if (typeof input !== 'string') {\n    if (required) {\n      throw new Error(`${input} is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`)\n    }\n    return null\n  }\n\n  // YYYY-MM-DD hh:mm:ss\n  const parts = PARSE_REGEX.exec(input)\n\n  if (!parts) {\n    if (required) {\n      throw new Error(`${input} is not a valid timestamp. It must be a Date, number of milliseconds since Epoch, or a string in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`)\n    }\n\n    return null\n  }\n\n  const timestamp: CalendarTimestamp = {\n    date: input,\n    time: '',\n    year: parseInt(parts[1]),\n    month: parseInt(parts[2]),\n    day: parseInt(parts[4]) || 1,\n    hour: parseInt(parts[6]) || 0,\n    minute: parseInt(parts[8]) || 0,\n    weekday: 0,\n    hasDay: !!parts[4],\n    hasTime: !!(parts[6] && parts[8]),\n    past: false,\n    present: false,\n    future: false,\n  }\n\n  updateWeekday(timestamp)\n  updateFormatted(timestamp)\n\n  if (now) {\n    updateRelative(timestamp, now, timestamp.hasTime)\n  }\n\n  return timestamp\n}\n\nexport function parseDate (date: Date): CalendarTimestamp {\n  return updateFormatted({\n    date: '',\n    time: '',\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    weekday: date.getDay(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    hasDay: true,\n    hasTime: true,\n    past: false,\n    present: true,\n    future: false,\n  })\n}\n\nexport function getDayIdentifier (timestamp: { year: number, month: number, day: number }): number {\n  return timestamp.year * OFFSET_YEAR + timestamp.month * OFFSET_MONTH + timestamp.day\n}\n\nexport function getTimeIdentifier (timestamp: { hour: number, minute: number }): number {\n  return timestamp.hour * OFFSET_HOUR + timestamp.minute\n}\n\nexport function getTimestampIdentifier (timestamp: CalendarTimestamp): number {\n  return getDayIdentifier(timestamp) * OFFSET_TIME + getTimeIdentifier(timestamp)\n}\n\nexport function updateRelative (timestamp: CalendarTimestamp, now: CalendarTimestamp, time = false): CalendarTimestamp {\n  let a = getDayIdentifier(now)\n  let b = getDayIdentifier(timestamp)\n  let present = a === b\n\n  if (timestamp.hasTime && time && present) {\n    a = getTimeIdentifier(now)\n    b = getTimeIdentifier(timestamp)\n    present = a === b\n  }\n\n  timestamp.past = b < a\n  timestamp.present = present\n  timestamp.future = b > a\n\n  return timestamp\n}\n\nexport function isTimedless (input: VTimestampInput): input is (Date | number) {\n  return (input instanceof Date) || (typeof input === 'number' && isFinite(input))\n}\n\nexport function updateHasTime (timestamp: CalendarTimestamp, hasTime: boolean, now?: CalendarTimestamp): CalendarTimestamp {\n  if (timestamp.hasTime !== hasTime) {\n    timestamp.hasTime = hasTime\n    if (!hasTime) {\n      timestamp.hour = HOUR_MAX\n      timestamp.minute = MINUTE_MAX\n      timestamp.time = getTime(timestamp)\n    }\n    if (now) {\n      updateRelative(timestamp, now, timestamp.hasTime)\n    }\n  }\n\n  return timestamp\n}\n\nexport function updateMinutes (timestamp: CalendarTimestamp, minutes: number, now?: CalendarTimestamp): CalendarTimestamp {\n  timestamp.hasTime = true\n  timestamp.hour = Math.floor(minutes / MINUTES_IN_HOUR)\n  timestamp.minute = minutes % MINUTES_IN_HOUR\n  timestamp.time = getTime(timestamp)\n  if (now) {\n    updateRelative(timestamp, now, true)\n  }\n\n  return timestamp\n}\n\nexport function updateWeekday (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.weekday = getWeekday(timestamp)\n\n  return timestamp\n}\n\nexport function updateFormatted (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.time = getTime(timestamp)\n  timestamp.date = getDate(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekday (timestamp: CalendarTimestamp): number {\n  if (timestamp.hasDay) {\n    const _ = Math.floor\n    const k = timestamp.day\n    const m = ((timestamp.month + 9) % MONTH_MAX) + 1\n    const C = _(timestamp.year / 100)\n    const Y = (timestamp.year % 100) - (timestamp.month <= 2 ? 1 : 0)\n\n    return (((k + _(2.6 * m - 0.2) - 2 * C + Y + _(Y / 4) + _(C / 4)) % 7) + 7) % 7\n  }\n\n  return timestamp.weekday\n}\n\nexport function daysInMonth (year: number, month: number) {\n  return isLeapYear(year) ? DAYS_IN_MONTH_LEAP[month] : DAYS_IN_MONTH[month]\n}\n\nexport function copyTimestamp (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future } = timestamp\n\n  return { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future }\n}\n\nexport function padNumber (x: number, length: number): string {\n  let padded = String(x)\n  while (padded.length < length) {\n    padded = '0' + padded\n  }\n\n  return padded\n}\n\nexport function getDate (timestamp: CalendarTimestamp): string {\n  let str = `${padNumber(timestamp.year, 4)}-${padNumber(timestamp.month, 2)}`\n\n  if (timestamp.hasDay) str += `-${padNumber(timestamp.day, 2)}`\n\n  return str\n}\n\nexport function getTime (timestamp: CalendarTimestamp): string {\n  if (!timestamp.hasTime) {\n    return ''\n  }\n\n  return `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n}\n\nexport function nextMinutes (timestamp: CalendarTimestamp, minutes: number): CalendarTimestamp {\n  timestamp.minute += minutes\n  while (timestamp.minute > MINUTES_IN_HOUR) {\n    timestamp.minute -= MINUTES_IN_HOUR\n    timestamp.hour++\n    if (timestamp.hour >= HOURS_IN_DAY) {\n      nextDay(timestamp)\n      timestamp.hour = FIRST_HOUR\n    }\n  }\n\n  return timestamp\n}\n\nexport function nextDay (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.day++\n  timestamp.weekday = (timestamp.weekday + 1) % DAYS_IN_WEEK\n  if (timestamp.day > DAYS_IN_MONTH_MIN && timestamp.day > daysInMonth(timestamp.year, timestamp.month)) {\n    timestamp.day = DAY_MIN\n    timestamp.month++\n    if (timestamp.month > MONTH_MAX) {\n      timestamp.month = MONTH_MIN\n      timestamp.year++\n    }\n  }\n\n  return timestamp\n}\n\nexport function prevDay (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.day--\n  timestamp.weekday = (timestamp.weekday + 6) % DAYS_IN_WEEK\n  if (timestamp.day < DAY_MIN) {\n    timestamp.month--\n    if (timestamp.month < MONTH_MIN) {\n      timestamp.year--\n      timestamp.month = MONTH_MAX\n    }\n    timestamp.day = daysInMonth(timestamp.year, timestamp.month)\n  }\n\n  return timestamp\n}\n\nexport function relativeDays (\n  timestamp: CalendarTimestamp,\n  mover: CalendarTimestampOperation = nextDay,\n  days = 1\n): CalendarTimestamp {\n  while (--days >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function diffMinutes (min: CalendarTimestamp, max: CalendarTimestamp) {\n  const Y = (max.year - min.year) * 525600\n  const M = (max.month - min.month) * 43800\n  const D = (max.day - min.day) * 1440\n  const h = (max.hour - min.hour) * 60\n  const m = (max.minute - min.minute)\n\n  return Y + M + D + h + m\n}\n\nexport function findWeekday (timestamp: CalendarTimestamp, weekday: number,\n  mover: CalendarTimestampOperation = nextDay, maxDays = 6): CalendarTimestamp {\n  while (timestamp.weekday !== weekday && --maxDays >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekdaySkips (weekdays: number[]): number[] {\n  const skips: number[] = [1, 1, 1, 1, 1, 1, 1]\n  const filled: number[] = [0, 0, 0, 0, 0, 0, 0]\n  for (let i = 0; i < weekdays.length; i++) {\n    filled[weekdays[i]] = 1\n  }\n  for (let k = 0; k < DAYS_IN_WEEK; k++) {\n    let skip = 1\n    for (let j = 1; j < DAYS_IN_WEEK; j++) {\n      const next = (k + j) % DAYS_IN_WEEK\n      if (filled[next]) {\n        break\n      }\n      skip++\n    }\n    skips[k] = filled[k] * skip\n  }\n\n  return skips\n}\n\nexport function timestampToDate (timestamp: CalendarTimestamp): Date {\n  const time = `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n  const date = timestamp.date\n\n  return new Date(`${date}T${time}:00+00:00`)\n}\n\nexport function createDayList (\n  start: CalendarTimestamp,\n  end: CalendarTimestamp,\n  now: CalendarTimestamp,\n  weekdaySkips: number[],\n  max = 42,\n  min = 0\n): CalendarTimestamp[] {\n  const stop = getDayIdentifier(end)\n  const days: CalendarTimestamp[] = []\n  let current = copyTimestamp(start)\n  let currentIdentifier = 0\n  let stopped = currentIdentifier === stop\n\n  if (stop < getDayIdentifier(start)) {\n    throw new Error('End date is earlier than start date.')\n  }\n\n  while ((!stopped || days.length < min) && days.length < max) {\n    currentIdentifier = getDayIdentifier(current)\n    stopped = stopped || currentIdentifier === stop\n    if (weekdaySkips[current.weekday] === 0) {\n      current = nextDay(current)\n      continue\n    }\n    const day = copyTimestamp(current)\n    updateFormatted(day)\n    updateRelative(day, now)\n    days.push(day)\n    current = relativeDays(current, nextDay, weekdaySkips[current.weekday])\n  }\n\n  if (!days.length) throw new Error('No dates found using specified start date, end date, and weekdays.')\n\n  return days\n}\n\nexport function createIntervalList (timestamp: CalendarTimestamp, first: number,\n  minutes: number, count: number, now?: CalendarTimestamp): CalendarTimestamp[] {\n  const intervals: CalendarTimestamp[] = []\n\n  for (let i = 0; i < count; i++) {\n    const mins = first + (i * minutes)\n    const int = copyTimestamp(timestamp)\n    intervals.push(updateMinutes(int, mins, now))\n  }\n\n  return intervals\n}\n\nexport function createNativeLocaleFormatter (locale: string, getOptions: CalendarTimestampFormatOptions): CalendarFormatter {\n  const emptyFormatter: CalendarFormatter = (_t, _s) => ''\n\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return emptyFormatter\n  }\n\n  return (timestamp, short) => {\n    try {\n      const intlFormatter = new Intl.DateTimeFormat(locale || undefined, getOptions(timestamp, short))\n\n      return intlFormatter.format(timestampToDate(timestamp))\n    } catch (e) {\n      return ''\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
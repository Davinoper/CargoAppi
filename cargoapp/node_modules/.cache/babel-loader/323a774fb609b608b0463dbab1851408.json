{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VResponsive/VResponsive.sass\");\n\nvar _measurable = _interopRequireDefault(require(\"../../mixins/measurable\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Mixins\n// Utils\n\n/* @vue/component */\n\n\nvar _default = (0, _mixins.default)(_measurable.default).extend({\n  name: 'v-responsive',\n  props: {\n    aspectRatio: [String, Number],\n    contentClass: String\n  },\n  computed: {\n    computedAspectRatio: function computedAspectRatio() {\n      return Number(this.aspectRatio);\n    },\n    aspectStyle: function aspectStyle() {\n      return this.computedAspectRatio ? {\n        paddingBottom: 1 / this.computedAspectRatio * 100 + '%'\n      } : undefined;\n    },\n    __cachedSizer: function __cachedSizer() {\n      if (!this.aspectStyle) return [];\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer'\n      });\n    }\n  },\n  methods: {\n    genContent: function genContent() {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n        class: this.contentClass\n      }, (0, _helpers.getSlot)(this));\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners\n    }, [this.__cachedSizer, this.genContent()]);\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AAAAA;;AAGA;;AAMA;;AACA;;;;;;EARA;AAMA;;AAIA;;;eACe,qBAAOC,mBAAP,EAAmBC,MAAnB,CAA0B;EACvCC,IAAI,EAAE,cADiC;EAGvCC,KAAK,EAAE;IACLC,WAAW,EAAE,CAACC,MAAD,EAASC,MAAT,CADR;IAELC,YAAY,EAAEF;EAFT,CAHgC;EAQvCG,QAAQ,EAAE;IACRC,mBADQ,iCACW;MACjB,OAAOH,MAAM,CAAC,KAAKF,WAAN,CAAb;IAFM;IAIRM,WAJQ,yBAIG;MACT,OAAO,KAAKD,mBAAL,GACH;QAAEE,aAAa,EAAG,IAAI,KAAKF,mBAAT,GAAgC,GAAhC,GAAsC;MAAxD,CADG,GAEHG,SAFJ;IALM;IASRC,aATQ,2BASK;MACX,IAAI,CAAC,KAAKH,WAAV,EAAuB,OAAO,EAAP;MAEvB,OAAO,KAAKI,cAAL,CAAoB,KAApB,EAA2B;QAChCC,KAAK,EAAE,KAAKL,WADoB;QAEhCM,WAAW,EAAE;MAFmB,CAA3B,CAAP;IAID;EAhBO,CAR6B;EA2BvCC,OAAO,EAAE;IACPC,UADO,wBACG;MACR,OAAO,KAAKJ,cAAL,CAAoB,KAApB,EAA2B;QAChCE,WAAW,EAAE,uBADmB;QAEhCG,KAAK,EAAE,KAAKZ;MAFoB,CAA3B,EAGJ,sBAAQ,IAAR,CAHI,CAAP;IAID;EANM,CA3B8B;EAoCvCa,MApCuC,kBAoC/BC,CApC+B,EAoC9B;IACP,OAAOA,CAAC,CAAC,KAAD,EAAQ;MACdL,WAAW,EAAE,cADC;MAEdD,KAAK,EAAE,KAAKO,gBAFE;MAGdC,EAAE,EAAE,KAAKC;IAHK,CAAR,EAIL,CACD,KAAKX,aADJ,EAED,KAAKK,UAAL,EAFC,CAJK,CAAR;EAQD;AA7CsC,CAA1B","names":["require","_measurable","extend","name","props","aspectRatio","String","Number","contentClass","computed","computedAspectRatio","aspectStyle","paddingBottom","undefined","__cachedSizer","$createElement","style","staticClass","methods","genContent","class","render","h","measurableStyles","on","$listeners"],"sourceRoot":"","sources":["../../../src/components/VResponsive/VResponsive.ts"],"sourcesContent":["import './VResponsive.sass'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString,\n    contentClass: String,\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | [] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer',\n      })\n    },\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n        class: this.contentClass,\n      }, getSlot(this))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners,\n    }, [\n      this.__cachedSizer,\n      this.genContent(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mixins;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable max-len, import/export, no-use-before-define */\n\n\nfunction mixins() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _vue.default.extend({\n    mixins: args\n  });\n}","map":{"version":3,"mappings":";;;;;;;AACA;;;;;;;AADA;;;AAKc,SAAUA,MAAV,GAA2C;EAAA,kCAAtBC,IAAsB;IAAtBA,IAAsB,MAAtB,GAAsBC,eAAtB;EAAsB;;EACvD,OAAOC,aAAIC,MAAJ,CAAW;IAAEJ,MAAM,EAAEC;EAAV,CAAX,CAAP;AACD","names":["mixins","args","arguments","_vue","extend"],"sourceRoot":"","sources":["../../src/util/mixins.ts"],"sourcesContent":["/* eslint-disable max-len, import/export, no-use-before-define */\nimport Vue, { VueConstructor } from 'vue'\n\nexport default function mixins<T extends VueConstructor[]> (...args: T): ExtractVue<T> extends infer V ? V extends Vue ? VueConstructor<V> : never : never\nexport default function mixins<T extends Vue> (...args: VueConstructor[]): VueConstructor<T>\nexport default function mixins (...args: VueConstructor[]): VueConstructor {\n  return Vue.extend({ mixins: args })\n}\n\n/**\n * Returns the instance type from a VueConstructor\n * Useful for adding types when using mixins().extend()\n */\nexport type ExtractVue<T extends VueConstructor | VueConstructor[]> = T extends (infer U)[]\n  ? UnionToIntersection<\n    U extends VueConstructor<infer V> ? V : never\n  >\n  : T extends VueConstructor<infer V> ? V : never\n\ntype UnionToIntersection<U> =\n  (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _transitions = require(\"../transitions\");\n\nvar _bootable = _interopRequireDefault(require(\"../../mixins/bootable\"));\n\nvar _colorable = _interopRequireDefault(require(\"../../mixins/colorable\"));\n\nvar _registrable = require(\"../../mixins/registrable\");\n\nvar _helpers = require(\"../../util/helpers\");\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Mixins\n// Utilities\n\n\nvar baseMixins = (0, _mixins.default)(_bootable.default, _colorable.default, (0, _registrable.inject)('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel'));\n/* @vue/component */\n\nvar _default = baseMixins.extend().extend({\n  name: 'v-expansion-panel-content',\n  data: function data() {\n    return {\n      isActive: false\n    };\n  },\n  computed: {\n    parentIsActive: function parentIsActive() {\n      return this.expansionPanel.isActive;\n    }\n  },\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler: function handler(val, oldVal) {\n        var _this = this;\n\n        if (val) this.isBooted = true;\n        if (oldVal == null) this.isActive = val;else this.$nextTick(function () {\n          return _this.isActive = val;\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.expansionPanel.registerContent(this);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.expansionPanel.unregisterContent();\n  },\n  render: function render(h) {\n    var _this2 = this;\n\n    return h(_transitions.VExpandTransition, this.showLazyContent(function () {\n      return [h('div', _this2.setBackgroundColor(_this2.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: _this2.isActive\n        }]\n      }), [h('div', {\n        class: 'v-expansion-panel-content__wrap'\n      }, (0, _helpers.getSlot)(_this2))])];\n    }));\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAEA;;AAGA;;AACA;;AACA;;AAGA;;AACA;;;;;;EAPA;AAKA;;;AAOA,IAAMA,UAAU,GAAG,qBACjBC,iBADiB,EAEjBC,kBAFiB,EAGjB,yBAAyD,gBAAzD,EAA2E,2BAA3E,EAAwG,mBAAxG,CAHiB,CAAnB;AAUA;;eACeF,UAAU,CAACG,MAAX,GAA6BA,MAA7B,CAAoC;EACjDC,IAAI,EAAE,2BAD2C;EAGjDC,IAAI,EAAE;IAAA,OAAO;MACXC,QAAQ,EAAE;IADC,CAAP;EAH2C;EAOjDC,QAAQ,EAAE;IACRC,cADQ,4BACM;MACZ,OAAO,KAAKC,cAAL,CAAoBH,QAA3B;IACD;EAHO,CAPuC;EAajDI,KAAK,EAAE;IACLF,cAAc,EAAE;MACdG,SAAS,EAAE,IADG;MAEdC,OAFc,mBAELC,GAFK,EAEAC,MAFA,EAEM;QAAA;;QAClB,IAAID,GAAJ,EAAS,KAAKE,QAAL,GAAgB,IAAhB;QAET,IAAID,MAAM,IAAI,IAAd,EAAoB,KAAKR,QAAL,GAAgBO,GAAhB,CAApB,KACK,KAAKG,SAAL,CAAe;UAAA,OAAMC,KAAI,CAACX,QAAL,GAAgBO,GAAtB;QAAf;MACN;IAPa;EADX,CAb0C;EAyBjDK,OAzBiD,qBAyB1C;IACL,KAAKT,cAAL,CAAoBU,eAApB,CAAoC,IAApC;EA1B+C;EA6BjDC,aA7BiD,2BA6BpC;IACX,KAAKX,cAAL,CAAoBY,iBAApB;EA9B+C;EAiCjDC,MAjCiD,kBAiCzCC,CAjCyC,EAiCxC;IAAA;;IACP,OAAOA,CAAC,CAACC,8BAAD,EAAoB,KAAKC,eAAL,CAAqB;MAAA,OAAM,CACrDF,CAAC,CAAC,KAAD,EAAQG,MAAI,CAACC,kBAAL,CAAwBD,MAAI,CAACE,KAA7B,EAAoC;QAC3CC,WAAW,EAAE,2BAD8B;QAE3CC,UAAU,EAAE,CAAC;UACX1B,IAAI,EAAE,MADK;UAEX2B,KAAK,EAAEL,MAAI,CAACpB;QAFD,CAAD;MAF+B,CAApC,CAAR,EAMG,CACFiB,CAAC,CAAC,KAAD,EAAQ;QAAES,KAAK,EAAE;MAAT,CAAR,EAAsD,sBAAQN,MAAR,CAAtD,CADC,CANH,CADoD,CAAN;IAArB,EAApB,CAAR;EAWD;AA7CgD,CAApC","names":["baseMixins","_bootable","_colorable","extend","name","data","isActive","computed","parentIsActive","expansionPanel","watch","immediate","handler","val","oldVal","isBooted","$nextTick","_this","created","registerContent","beforeDestroy","unregisterContent","render","h","_transitions","showLazyContent","_this2","setBackgroundColor","color","staticClass","directives","value","class"],"sourceRoot":"","sources":["../../../src/components/VExpansionPanel/VExpansionPanelContent.ts"],"sourcesContent":["// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  data: () => ({\n    isActive: false,\n  }),\n\n  computed: {\n    parentIsActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  watch: {\n    parentIsActive: {\n      immediate: true,\n      handler (val, oldVal) {\n        if (val) this.isBooted = true\n\n        if (oldVal == null) this.isActive = val\n        else this.$nextTick(() => this.isActive = val)\n      },\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
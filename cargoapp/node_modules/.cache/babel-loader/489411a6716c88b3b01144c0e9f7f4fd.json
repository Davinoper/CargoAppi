{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.string.trim.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.array.find-index.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VAutocomplete/VAutocomplete.sass\");\n\nvar _VSelect = _interopRequireWildcard(require(\"../VSelect/VSelect\"));\n\nvar _VTextField = _interopRequireDefault(require(\"../VTextField/VTextField\"));\n\nvar _mergeData = _interopRequireDefault(require(\"../../util/mergeData\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar defaultMenuProps = _objectSpread(_objectSpread({}, _VSelect.defaultMenuProps), {}, {\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false\n});\n/* @vue/component */\n\n\nvar _default2 = _VSelect.default.extend({\n  name: 'v-autocomplete',\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false\n    },\n    filter: {\n      type: Function,\n      default: function _default(item, queryText, itemText) {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1;\n      }\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: _VSelect.default.options.props.menuProps.type,\n      default: function _default() {\n        return defaultMenuProps;\n      }\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      lazySearch: this.searchInput\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, _VSelect.default.options.computed.classes.call(this)), {}, {\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1\n      });\n    },\n    computedItems: function computedItems() {\n      return this.filteredItems;\n    },\n    selectedValues: function selectedValues() {\n      var _this = this;\n\n      return this.selectedItems.map(function (item) {\n        return _this.getValue(item);\n      });\n    },\n    hasDisplayedItems: function hasDisplayedItems() {\n      var _this2 = this;\n\n      return this.hideSelected ? this.filteredItems.some(function (item) {\n        return !_this2.hasItem(item);\n      }) : this.filteredItems.length > 0;\n    },\n    currentRange: function currentRange() {\n      if (this.selectedItem == null) return 0;\n      return String(this.getText(this.selectedItem)).length;\n    },\n    filteredItems: function filteredItems() {\n      var _this3 = this;\n\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems;\n      return this.allItems.filter(function (item) {\n        var value = (0, _helpers.getPropertyFromItem)(item, _this3.itemText);\n        var text = value != null ? String(value) : '';\n        return _this3.filter(item, String(_this3.internalSearch), text);\n      });\n    },\n    internalSearch: {\n      get: function get() {\n        return this.lazySearch;\n      },\n      set: function set(val) {\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val;\n          this.$emit('update:search-input', val);\n        }\n      }\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return false;\n    },\n    isDirty: function isDirty() {\n      return this.searchIsDirty || this.selectedItems.length > 0;\n    },\n    isSearching: function isSearching() {\n      return this.multiple && this.searchIsDirty || this.searchIsDirty && this.internalSearch !== this.getText(this.selectedItem);\n    },\n    menuCanShow: function menuCanShow() {\n      if (!this.isFocused) return false;\n      return this.hasDisplayedItems || !this.hideNoData;\n    },\n    $_menuProps: function $_menuProps() {\n      var props = _VSelect.default.options.computed.$_menuProps.call(this);\n\n      props.contentClass = \"v-autocomplete__content \".concat(props.contentClass || '').trim();\n      return _objectSpread(_objectSpread({}, defaultMenuProps), props);\n    },\n    searchIsDirty: function searchIsDirty() {\n      return this.internalSearch != null && this.internalSearch !== '';\n    },\n    selectedItem: function selectedItem() {\n      var _this4 = this;\n\n      if (this.multiple) return null;\n      return this.selectedItems.find(function (i) {\n        return _this4.valueComparator(_this4.getValue(i), _this4.getValue(_this4.internalValue));\n      });\n    },\n    listData: function listData() {\n      var data = _VSelect.default.options.computed.listData.call(this);\n\n      data.props = _objectSpread(_objectSpread({}, data.props), {}, {\n        items: this.virtualizedItems,\n        noFilter: this.noFilter || !this.isSearching || !this.filteredItems.length,\n        searchInput: this.internalSearch\n      });\n      return data;\n    }\n  },\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused: function isFocused(val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy);\n        this.$refs.input && this.$refs.input.select();\n      } else {\n        document.removeEventListener('copy', this.onCopy);\n        this.blur();\n        this.updateSelf();\n      }\n    },\n    isMenuActive: function isMenuActive(val) {\n      if (val || !this.hasSlot) return;\n      this.lazySearch = null;\n    },\n    items: function items(val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (!(oldVal && oldVal.length) && this.hideNoData && this.isFocused && !this.isMenuActive && val.length) this.activateMenu();\n    },\n    searchInput: function searchInput(val) {\n      this.lazySearch = val;\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf'\n  },\n  created: function created() {\n    this.setSearch();\n  },\n  destroyed: function destroyed() {\n    document.removeEventListener('copy', this.onCopy);\n  },\n  methods: {\n    onFilteredItemsChanged: function onFilteredItemsChanged(val, oldVal) {\n      var _this5 = this; // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n\n\n      if (val === oldVal) return;\n\n      if (!this.autoSelectFirst) {\n        var preSelectedItem = oldVal[this.$refs.menu.listIndex];\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(function (i) {\n            return i === preSelectedItem;\n          }));\n        } else {\n          this.setMenuIndex(-1);\n        }\n\n        this.$emit('update:list-index', this.$refs.menu.listIndex);\n      }\n\n      this.$nextTick(function () {\n        if (!_this5.internalSearch || val.length !== 1 && !_this5.autoSelectFirst) return;\n\n        _this5.$refs.menu.getTiles();\n\n        if (_this5.autoSelectFirst && val.length) {\n          _this5.setMenuIndex(0);\n\n          _this5.$emit('update:list-index', _this5.$refs.menu.listIndex);\n        }\n      });\n    },\n    onInternalSearchChanged: function onInternalSearchChanged() {\n      this.updateMenuDimensions();\n    },\n    updateMenuDimensions: function updateMenuDimensions() {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions();\n    },\n    changeSelectedIndex: function changeSelectedIndex(keyCode) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return;\n\n      if (this.multiple && keyCode === _helpers.keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1;\n        } else {\n          this.selectedIndex--;\n        }\n      } else if (this.multiple && keyCode === _helpers.keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1;\n        } else {\n          this.selectedIndex++;\n        }\n      } else if (keyCode === _helpers.keyCodes.backspace || keyCode === _helpers.keyCodes.delete) {\n        this.deleteCurrentItem();\n      }\n    },\n    deleteCurrentItem: function deleteCurrentItem() {\n      var curIndex = this.selectedIndex;\n      var curItem = this.selectedItems[curIndex]; // Do nothing if input or item is disabled\n\n      if (!this.isInteractive || this.getDisabled(curItem)) return;\n      var lastIndex = this.selectedItems.length - 1; // Select the last item if\n      // there is no selection\n\n      if (this.selectedIndex === -1 && lastIndex !== 0) {\n        this.selectedIndex = lastIndex;\n        return;\n      }\n\n      var length = this.selectedItems.length;\n      var nextIndex = curIndex !== length - 1 ? curIndex : curIndex - 1;\n      var nextItem = this.selectedItems[nextIndex];\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null);\n      } else {\n        this.selectItem(curItem);\n      }\n\n      this.selectedIndex = nextIndex;\n    },\n    clearableCallback: function clearableCallback() {\n      this.internalSearch = null;\n\n      _VSelect.default.options.methods.clearableCallback.call(this);\n    },\n    genInput: function genInput() {\n      var input = _VTextField.default.options.methods.genInput.call(this);\n\n      input.data = (0, _mergeData.default)(input.data, {\n        attrs: {\n          'aria-activedescendant': (0, _helpers.getObjectValueByPath)(this.$refs.menu, 'activeTile.id'),\n          autocomplete: (0, _helpers.getObjectValueByPath)(input.data, 'attrs.autocomplete', 'off')\n        },\n        domProps: {\n          value: this.internalSearch\n        }\n      });\n      return input;\n    },\n    genInputSlot: function genInputSlot() {\n      var slot = _VSelect.default.options.methods.genInputSlot.call(this);\n\n      slot.data.attrs.role = 'combobox';\n      return slot;\n    },\n    genSelections: function genSelections() {\n      return this.hasSlot || this.multiple ? _VSelect.default.options.methods.genSelections.call(this) : [];\n    },\n    onClick: function onClick(e) {\n      if (!this.isInteractive) return;\n      this.selectedIndex > -1 ? this.selectedIndex = -1 : this.onFocus();\n      if (!this.isAppendInner(e.target)) this.activateMenu();\n    },\n    onInput: function onInput(e) {\n      if (this.selectedIndex > -1 || !e.target) return;\n      var target = e.target;\n      var value = target.value; // If typing and menu is not currently active\n\n      if (target.value) this.activateMenu();\n      if (!this.multiple && value === '') this.deleteCurrentItem();\n      this.internalSearch = value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n    onKeyDown: function onKeyDown(e) {\n      var keyCode = e.keyCode;\n\n      if (e.ctrlKey || ![_helpers.keyCodes.home, _helpers.keyCodes.end].includes(keyCode)) {\n        _VSelect.default.options.methods.onKeyDown.call(this, e);\n      } // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n\n\n      this.changeSelectedIndex(keyCode);\n    },\n    onSpaceDown: function onSpaceDown(e) {},\n    onTabDown: function onTabDown(e) {\n      _VSelect.default.options.methods.onTabDown.call(this, e);\n\n      this.updateSelf();\n    },\n    onUpDown: function onUpDown(e) {\n      // Prevent screen from scrolling\n      e.preventDefault(); // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n\n      this.activateMenu();\n    },\n    selectItem: function selectItem(item) {\n      _VSelect.default.options.methods.selectItem.call(this, item);\n\n      this.setSearch();\n    },\n    setSelectedItems: function setSelectedItems() {\n      _VSelect.default.options.methods.setSelectedItems.call(this); // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n\n\n      if (!this.isFocused) this.setSearch();\n    },\n    setSearch: function setSearch() {\n      var _this6 = this; // Wait for nextTick so selectedItem\n      // has had time to update\n\n\n      this.$nextTick(function () {\n        if (!_this6.multiple || !_this6.internalSearch || !_this6.isMenuActive) {\n          _this6.internalSearch = !_this6.selectedItems.length || _this6.multiple || _this6.hasSlot ? null : _this6.getText(_this6.selectedItem);\n        }\n      });\n    },\n    updateSelf: function updateSelf() {\n      if (!this.searchIsDirty && !this.internalValue) return;\n\n      if (!this.multiple && !this.valueComparator(this.internalSearch, this.getValue(this.internalValue))) {\n        this.setSearch();\n      }\n    },\n    hasItem: function hasItem(item) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1;\n    },\n    onCopy: function onCopy(event) {\n      var _event$clipboardData, _event$clipboardData2;\n\n      if (this.selectedIndex === -1) return;\n      var currentItem = this.selectedItems[this.selectedIndex];\n      var currentItemText = this.getText(currentItem);\n      (_event$clipboardData = event.clipboardData) == null ? void 0 : _event$clipboardData.setData('text/plain', currentItemText);\n      (_event$clipboardData2 = event.clipboardData) == null ? void 0 : _event$clipboardData2.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText);\n      event.preventDefault();\n    }\n  }\n});\n\nexports.default = _default2;","map":{"version":3,"mappings":"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","names":["require","defaultMenuProps","_VSelect","offsetY","offsetOverflow","transition","extend","name","props","allowOverflow","type","Boolean","default","autoSelectFirst","filter","Function","item","queryText","itemText","toLocaleLowerCase","indexOf","hideNoData","menuProps","options","noFilter","searchInput","String","data","lazySearch","computed","classes","call","selectedIndex","computedItems","filteredItems","selectedValues","selectedItems","map","_this","getValue","hasDisplayedItems","hideSelected","some","_this2","hasItem","length","currentRange","selectedItem","getText","isSearching","internalSearch","allItems","value","_this3","text","get","set","val","$emit","isAnyValueAllowed","isDirty","searchIsDirty","multiple","menuCanShow","isFocused","$_menuProps","contentClass","trim","find","_this4","valueComparator","i","internalValue","listData","items","virtualizedItems","watch","document","addEventListener","onCopy","$refs","input","select","removeEventListener","blur","updateSelf","isMenuActive","hasSlot","oldVal","activateMenu","created","setSearch","destroyed","methods","onFilteredItemsChanged","preSelectedItem","menu","listIndex","setMenuIndex","findIndex","$nextTick","_this5","getTiles","onInternalSearchChanged","updateMenuDimensions","updateDimensions","changeSelectedIndex","keyCode","_helpers","left","right","backspace","delete","deleteCurrentItem","curIndex","curItem","isInteractive","getDisabled","lastIndex","nextIndex","nextItem","setValue","selectItem","clearableCallback","genInput","_VTextField","attrs","autocomplete","domProps","genInputSlot","slot","role","genSelections","onClick","e","onFocus","isAppendInner","target","onInput","badInput","validity","onKeyDown","ctrlKey","home","end","includes","onSpaceDown","onTabDown","onUpDown","preventDefault","setSelectedItems","_this6","event","currentItem","currentItemText","clipboardData","setData"],"sourceRoot":"","sources":["../../../src/components/VAutocomplete/VAutocomplete.ts"],"sourcesContent":["// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      if (!this.autoSelectFirst) {\n        const preSelectedItem = oldVal[this.$refs.menu.listIndex]\n\n        if (preSelectedItem) {\n          this.setMenuIndex(val.findIndex(i => i === preSelectedItem))\n        } else {\n          this.setMenuIndex(-1)\n        }\n        this.$emit('update:list-index', this.$refs.menu.listIndex)\n      }\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n\n        if (this.autoSelectFirst && val.length) {\n          this.setMenuIndex(0)\n          this.$emit('update:list-index', this.$refs.menu.listIndex)\n        }\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      if (!this.multiple && value === '') this.deleteCurrentItem()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (\n        !this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (\n        !this.multiple &&\n        !this.valueComparator(\n          this.internalSearch,\n          this.getValue(this.internalValue)\n        )\n      ) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
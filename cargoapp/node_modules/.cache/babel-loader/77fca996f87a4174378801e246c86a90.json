{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterTreeItem = filterTreeItem;\nexports.filterTreeItems = filterTreeItems;\n\nvar _helpers = require(\"../../../util/helpers\");\n\nfunction filterTreeItem(item, search, textKey) {\n  var text = (0, _helpers.getObjectValueByPath)(item, textKey);\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1;\n}\n\nfunction filterTreeItems(filter, item, search, idKey, textKey, childrenKey, excluded) {\n  if (filter(item, search, textKey)) {\n    return true;\n  }\n\n  var children = (0, _helpers.getObjectValueByPath)(item, childrenKey);\n\n  if (children) {\n    var match = false;\n\n    for (var i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true;\n      }\n    }\n\n    if (match) return true;\n  }\n\n  excluded.add((0, _helpers.getObjectValueByPath)(item, idKey));\n  return false;\n}","map":{"version":3,"mappings":";;;;;;;;AAAA;;AAGM,SAAUA,cAAV,CAA0BC,IAA1B,EAAwCC,MAAxC,EAAwDC,OAAxD,EAAuE;EAC3E,IAAMC,IAAI,GAAG,mCAAqBH,IAArB,EAA2BE,OAA3B,CAAb;EAEA,OAAOC,IAAI,CAACC,iBAAL,GAAyBC,OAAzB,CAAiCJ,MAAM,CAACG,iBAAP,EAAjC,IAA+D,CAAC,CAAvE;AACD;;AAEK,SAAUE,eAAV,CACJC,MADI,EAEJP,IAFI,EAGJC,MAHI,EAIJO,KAJI,EAKJN,OALI,EAMJO,WANI,EAOJC,QAPI,EAO0B;EAE9B,IAAIH,MAAM,CAACP,IAAD,EAAOC,MAAP,EAAeC,OAAf,CAAV,EAAmC;IACjC,OAAO,IAAP;EACD;;EAED,IAAMS,QAAQ,GAAG,mCAAqBX,IAArB,EAA2BS,WAA3B,CAAjB;;EAEA,IAAIE,QAAJ,EAAc;IACZ,IAAIC,KAAK,GAAG,KAAZ;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;MACxC,IAAIP,eAAe,CAACC,MAAD,EAASI,QAAQ,CAACE,CAAD,CAAjB,EAAsBZ,MAAtB,EAA8BO,KAA9B,EAAqCN,OAArC,EAA8CO,WAA9C,EAA2DC,QAA3D,CAAnB,EAAyF;QACvFE,KAAK,GAAG,IAAR;MACD;IACF;;IAED,IAAIA,KAAJ,EAAW,OAAO,IAAP;EACZ;;EAEDF,QAAQ,CAACK,GAAT,CAAa,mCAAqBf,IAArB,EAA2BQ,KAA3B,CAAb;EAEA,OAAO,KAAP;AACD","names":["filterTreeItem","item","search","textKey","text","toLocaleLowerCase","indexOf","filterTreeItems","filter","idKey","childrenKey","excluded","children","match","i","length","add"],"sourceRoot":"","sources":["../../../../src/components/VTreeview/util/filterTreeItems.ts"],"sourcesContent":["import { getObjectValueByPath } from '../../../util/helpers'\nimport { TreeviewItemFunction } from 'vuetify/types'\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: TreeviewItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n"]},"metadata":{},"sourceType":"script"}
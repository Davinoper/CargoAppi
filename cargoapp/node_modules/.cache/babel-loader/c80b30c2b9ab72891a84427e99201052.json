{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.from.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction needsTd(slot) {\n  var _slot$;\n\n  return slot.length !== 1 || !['td', 'th'].includes((_slot$ = slot[0]) == null ? void 0 : _slot$.tag);\n}\n\nvar _default = _vue.default.extend({\n  name: 'row',\n  functional: true,\n  props: {\n    headers: Array,\n    index: Number,\n    item: Object,\n    rtl: Boolean\n  },\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        slots = _ref.slots,\n        data = _ref.data;\n    var computedSlots = slots();\n    var columns = props.headers.map(function (header) {\n      var children = [];\n      var value = (0, _helpers.getObjectValueByPath)(props.item, header.value);\n      var slotName = header.value;\n      var scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName];\n      var regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName];\n\n      if (scopedSlot) {\n        children.push.apply(children, _toConsumableArray((0, _helpers.wrapInArray)(scopedSlot({\n          item: props.item,\n          isMobile: false,\n          header: header,\n          index: props.index,\n          value: value\n        }))));\n      } else if (regularSlot) {\n        children.push.apply(children, _toConsumableArray((0, _helpers.wrapInArray)(regularSlot)));\n      } else {\n        children.push(value == null ? value : String(value));\n      }\n\n      var textAlign = \"text-\".concat(header.align || 'start');\n      return needsTd(children) ? h('td', {\n        class: [textAlign, header.cellClass, {\n          'v-data-table__divider': header.divider\n        }]\n      }, children) : children;\n    });\n    return h('tr', data, columns);\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,OAAT,CAAkBC,IAAlB,EAA2C;EAAA;;EACzC,OAAOA,IAAK,CAACC,MAAN,KAAiB,CAAjB,IACL,CAAC,CAAC,IAAD,EAAO,IAAP,EAAaC,QAAb,WAAsBF,IAAK,CAAC,CAAD,CAA3B,qBAAsBG,OAAUC,GAAhC,CADH;AAED;;eAEcC,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAE,KADkB;EAGxBC,UAAU,EAAE,IAHY;EAKxBC,KAAK,EAAE;IACLC,OAAO,EAAEC,KADJ;IAELC,KAAK,EAAEC,MAFF;IAGLC,IAAI,EAAEC,MAHD;IAILC,GAAG,EAAEC;EAJA,CALiB;EAYxBC,MAZwB,kBAYhBC,CAZgB,QAYS;IAAA,IAApBV,KAAoB,QAApBA,KAAoB;IAAA,IAAbW,KAAa,QAAbA,KAAa;IAAA,IAANC,IAAM,QAANA,IAAM;IAC/B,IAAMC,aAAa,GAAGF,KAAK,EAA3B;IAEA,IAAMG,OAAO,GAAGd,KAAK,CAACC,OAAN,CAAcc,GAAd,CAAkB,UAACC,MAAD,EAA4B;MAC5D,IAAMC,QAAQ,GAAG,EAAjB;MACA,IAAMC,KAAK,GAAG,mCAAqBlB,KAAK,CAACK,IAA3B,EAAiCW,MAAM,CAACE,KAAxC,CAAd;MAEA,IAAMC,QAAQ,GAAGH,MAAM,CAACE,KAAxB;MACA,IAAME,UAAU,GAAGR,IAAI,CAACS,WAAL,IAAoBT,IAAI,CAACS,WAAL,CAAiBC,cAAjB,CAAgCH,QAAhC,CAApB,IAAiEP,IAAI,CAACS,WAAL,CAAiBF,QAAjB,CAApF;MACA,IAAMI,WAAW,GAAGV,aAAa,CAACS,cAAd,CAA6BH,QAA7B,KAA0CN,aAAa,CAACM,QAAD,CAA3E;;MAEA,IAAIC,UAAJ,EAAgB;QACdH,QAAQ,CAACO,IAAT,iBAAQC,mBAAS,0BAAYL,UAAU,CAAC;UACtCf,IAAI,EAAEL,KAAK,CAACK,IAD0B;UAEtCqB,QAAQ,EAAE,KAF4B;UAGtCV,MAAM,EAANA,MAHsC;UAItCb,KAAK,EAAEH,KAAK,CAACG,KAJyB;UAKtCe,KAAK,EAALA;QALsC,CAAD,CAAtB,CAAT,CAAR;MADF,OAQO,IAAIK,WAAJ,EAAiB;QACtBN,QAAQ,CAACO,IAAT,iBAAQC,mBAAS,0BAAYF,WAAZ,CAAT,CAAR;MADK,OAEA;QACLN,QAAQ,CAACO,IAAT,CAAcN,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBS,MAAM,CAACT,KAAD,CAA5C;MACD;;MAED,IAAMU,SAAS,kBAAWZ,MAAM,CAACa,KAAP,IAAgB,OAA3B,CAAf;MAEA,OAAOvC,OAAO,CAAC2B,QAAD,CAAP,GACHP,CAAC,CAAC,IAAD,EAAO;QACRoB,KAAK,EAAE,CACLF,SADK,EAELZ,MAAM,CAACe,SAFF,EAGL;UACE,yBAAyBf,MAAM,CAACgB;QADlC,CAHK;MADC,CAAP,EAQAf,QARA,CADE,GAUHA,QAVJ;IAxBc,EAAhB;IAqCA,OAAOP,CAAC,CAAC,IAAD,EAAOE,IAAP,EAAaE,OAAb,CAAR;EACD;AArDuB,CAAX","names":["needsTd","slot","length","includes","_slot$","tag","_vue","extend","name","functional","props","headers","Array","index","Number","item","Object","rtl","Boolean","render","h","slots","data","computedSlots","columns","map","header","children","value","slotName","scopedSlot","scopedSlots","hasOwnProperty","regularSlot","push","_toConsumableArray","isMobile","String","textAlign","align","class","cellClass","divider"],"sourceRoot":"","sources":["../../../src/components/VDataTable/Row.ts"],"sourcesContent":["// Types\nimport Vue, { VNode, PropType } from 'vue'\nimport { DataTableHeader } from 'vuetify/types'\n\n// Utils\nimport { getObjectValueByPath, wrapInArray } from '../../util/helpers'\n\nfunction needsTd (slot: VNode[] | undefined) {\n  return slot!.length !== 1 ||\n    !['td', 'th'].includes(slot![0]?.tag!)\n}\n\nexport default Vue.extend({\n  name: 'row',\n\n  functional: true,\n\n  props: {\n    headers: Array as PropType<DataTableHeader[]>,\n    index: Number,\n    item: Object,\n    rtl: Boolean,\n  },\n\n  render (h, { props, slots, data }): VNode {\n    const computedSlots = slots()\n\n    const columns = props.headers.map((header: DataTableHeader) => {\n      const children = []\n      const value = getObjectValueByPath(props.item, header.value)\n\n      const slotName = header.value\n      const scopedSlot = data.scopedSlots && data.scopedSlots.hasOwnProperty(slotName) && data.scopedSlots[slotName]\n      const regularSlot = computedSlots.hasOwnProperty(slotName) && computedSlots[slotName]\n\n      if (scopedSlot) {\n        children.push(...wrapInArray(scopedSlot({\n          item: props.item,\n          isMobile: false,\n          header,\n          index: props.index,\n          value,\n        })))\n      } else if (regularSlot) {\n        children.push(...wrapInArray(regularSlot))\n      } else {\n        children.push(value == null ? value : String(value))\n      }\n\n      const textAlign = `text-${header.align || 'start'}`\n\n      return needsTd(children)\n        ? h('td', {\n          class: [\n            textAlign,\n            header.cellClass,\n            {\n              'v-data-table__divider': header.divider,\n            },\n          ],\n        }, children)\n        : children\n    })\n\n    return h('tr', data, columns)\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
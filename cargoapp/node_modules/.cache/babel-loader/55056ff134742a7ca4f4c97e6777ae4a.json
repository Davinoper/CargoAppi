{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.string.sub.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Mutate = void 0;\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction inserted(el, binding, vnode) {\n  var modifiers = binding.modifiers || {};\n  var value = binding.value;\n  var callback = _typeof(value) === 'object' ? value.handler : value;\n\n  var once = modifiers.once,\n      modifierKeys = _objectWithoutProperties(modifiers, [\"once\"]);\n\n  var hasModifiers = Object.keys(modifierKeys).length > 0; // Options take top priority\n\n  var options = _typeof(value) === 'object' && value.options ? value.options : hasModifiers // If we have modifiers, use only those provided\n  ? {\n    attributes: modifierKeys.attr,\n    childList: modifierKeys.child,\n    subtree: modifierKeys.sub,\n    characterData: modifierKeys.char\n  } // Defaults to everything on\n  : {\n    attributes: true,\n    childList: true,\n    subtree: true,\n    characterData: true\n  };\n  var observer = new MutationObserver(function (mutationsList, observer) {\n    /* istanbul ignore if */\n    if (!el._mutate) return; // Just in case, should never fire\n\n    callback(mutationsList, observer); // If has the once modifier, unbind\n\n    once && unbind(el, binding, vnode);\n  });\n  observer.observe(el, options);\n  el._mutate = Object(el._mutate);\n  el._mutate[vnode.context._uid] = {\n    observer: observer\n  };\n}\n\nfunction unbind(el, binding, vnode) {\n  var _el$_mutate;\n\n  if (!((_el$_mutate = el._mutate) != null && _el$_mutate[vnode.context._uid])) return;\n\n  el._mutate[vnode.context._uid].observer.disconnect();\n\n  delete el._mutate[vnode.context._uid];\n}\n\nvar Mutate = {\n  inserted: inserted,\n  unbind: unbind\n};\nexports.Mutate = Mutate;\nvar _default = Mutate;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,SAASA,QAAT,CAAmBC,EAAnB,EAAoCC,OAApC,EAAmEC,KAAnE,EAA+E;EAC7E,IAAMC,SAAS,GAAGF,OAAO,CAACE,SAAR,IAAqB,EAAvC;EACA,IAAMC,KAAK,GAAGH,OAAO,CAACG,KAAtB;EACA,IAAMC,QAAQ,GAAGC,QAAOF,KAAP,MAAiB,QAAjB,GAA4BA,KAAK,CAACG,OAAlC,GAA4CH,KAA7D;;EAH6E,IAIrEI,IAJqE,GAI3CL,SAJ2C,CAIrEK,IAJqE;EAAA,IAI5DC,YAJ4D,4BAI3CN,SAJ2C;;EAK7E,IAAMO,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0BI,MAA1B,GAAmC,CAAxD,CAL6E,CAO7E;;EACA,IAAMC,OAAO,GAAGR,QAAOF,KAAP,MAAiB,QAAjB,IAA6BA,KAAK,CAACU,OAAnC,GACZV,KAAK,CAACU,OADM,GAEZJ,YAAY,CACZ;EADY,EAEV;IACAK,UAAU,EAAEN,YAAY,CAACO,IADzB;IAEAC,SAAS,EAAER,YAAY,CAACS,KAFxB;IAGAC,OAAO,EAAEV,YAAY,CAACW,GAHtB;IAIAC,aAAa,EAAEZ,YAAY,CAACa;EAJ5B,CAFU,CAQZ;EARY,EASV;IACAP,UAAU,EAAE,IADZ;IAEAE,SAAS,EAAE,IAFX;IAGAE,OAAO,EAAE,IAHT;IAIAE,aAAa,EAAE;EAJf,CAXN;EAkBA,IAAME,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,UACpCC,aADoC,EAEpCF,QAFoC,EAGlC;IACF;IACA,IAAI,CAACvB,EAAE,CAAC0B,OAAR,EAAiB,OAFf,CAEsB;;IAExBrB,QAAQ,CAACoB,aAAD,EAAgBF,QAAhB,CAAR,CAJE,CAMF;;IACAf,IAAI,IAAImB,MAAM,CAAC3B,EAAD,EAAKC,OAAL,EAAcC,KAAd,CAAd;EAVe,EAAjB;EAaAqB,QAAQ,CAACK,OAAT,CAAiB5B,EAAjB,EAAqBc,OAArB;EACAd,EAAE,CAAC0B,OAAH,GAAaf,MAAM,CAACX,EAAE,CAAC0B,OAAJ,CAAnB;EACA1B,EAAE,CAAC0B,OAAH,CAAYxB,KAAK,CAAC2B,OAAN,CAAeC,IAA3B,IAAmC;IAAEP,QAAQ,EAARA;EAAF,CAAnC;AACD;;AAED,SAASI,MAAT,CAAiB3B,EAAjB,EAAkCC,OAAlC,EAAiEC,KAAjE,EAA6E;EAAA;;EAC3E,IAAI,iBAACF,EAAE,CAAC0B,OAAJ,aAACK,YAAa7B,KAAK,CAAC2B,OAAN,CAAeC,IAA5B,CAAD,CAAJ,EAAwC;;EAExC9B,EAAE,CAAC0B,OAAH,CAAWxB,KAAK,CAAC2B,OAAN,CAAeC,IAA1B,EAAiCP,QAAjC,CAA0CS,UAA1C;;EACA,OAAOhC,EAAE,CAAC0B,OAAH,CAAWxB,KAAK,CAAC2B,OAAN,CAAeC,IAA1B,CAAP;AACD;;AAEM,IAAMG,MAAM,GAAG;EACpBlC,QAAQ,EAARA,QADoB;EAEpB4B,MAAM,EAANA;AAFoB,CAAf;;eAKQM","names":["inserted","el","binding","vnode","modifiers","value","callback","_typeof","handler","once","modifierKeys","hasModifiers","Object","keys","length","options","attributes","attr","childList","child","subtree","sub","characterData","char","observer","MutationObserver","mutationsList","_mutate","unbind","observe","context","_uid","_el$_mutate","disconnect","Mutate"],"sourceRoot":"","sources":["../../../src/directives/mutate/index.ts"],"sourcesContent":["import { VNode, VNodeDirective } from 'vue'\n\ntype MutateHandler = (\n  mutationsList: MutationRecord[],\n  observer: MutationObserver,\n) => void\n\ninterface MutateVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value?: MutateHandler | { handler: MutateHandler, options?: MutationObserverInit }\n  modifiers?: {\n    once?: boolean\n    attr?: boolean\n    child?: boolean\n    sub?: boolean\n    char?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: MutateVNodeDirective, vnode: VNode) {\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const callback = typeof value === 'object' ? value.handler : value!\n  const { once, ...modifierKeys } = modifiers\n  const hasModifiers = Object.keys(modifierKeys).length > 0\n\n  // Options take top priority\n  const options = typeof value === 'object' && value.options\n    ? value.options\n    : hasModifiers\n      // If we have modifiers, use only those provided\n      ? {\n        attributes: modifierKeys.attr,\n        childList: modifierKeys.child,\n        subtree: modifierKeys.sub,\n        characterData: modifierKeys.char,\n      }\n      // Defaults to everything on\n      : {\n        attributes: true,\n        childList: true,\n        subtree: true,\n        characterData: true,\n      }\n\n  const observer = new MutationObserver((\n    mutationsList: MutationRecord[],\n    observer: MutationObserver\n  ) => {\n    /* istanbul ignore if */\n    if (!el._mutate) return // Just in case, should never fire\n\n    callback(mutationsList, observer)\n\n    // If has the once modifier, unbind\n    once && unbind(el, binding, vnode)\n  })\n\n  observer.observe(el, options)\n  el._mutate = Object(el._mutate)\n  el._mutate![vnode.context!._uid] = { observer }\n}\n\nfunction unbind (el: HTMLElement, binding: MutateVNodeDirective, vnode: VNode) {\n  if (!el._mutate?.[vnode.context!._uid]) return\n\n  el._mutate[vnode.context!._uid]!.observer.disconnect()\n  delete el._mutate[vnode.context!._uid]\n}\n\nexport const Mutate = {\n  inserted,\n  unbind,\n}\n\nexport default Mutate\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nrequire(\"core-js/modules/es.array.flat.js\");\n\nrequire(\"core-js/modules/es.array.unscopables.flat.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/styles/components/_selection-controls.sass\");\n\nrequire(\"../../../src/components/VSwitch/VSwitch.sass\");\n\nvar _selectable = _interopRequireDefault(require(\"../../mixins/selectable\"));\n\nvar _VInput = _interopRequireDefault(require(\"../VInput\"));\n\nvar _touch = _interopRequireDefault(require(\"../../directives/touch\"));\n\nvar _transitions = require(\"../transitions\");\n\nvar _VProgressCircular = _interopRequireDefault(require(\"../VProgressCircular/VProgressCircular\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* @vue/component */\n\n\nvar _default = _selectable.default.extend({\n  name: 'v-switch',\n  directives: {\n    Touch: _touch.default\n  },\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, _VInput.default.options.computed.classes.call(this)), {}, {\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset\n      });\n    },\n    attrs: function attrs() {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch'\n      };\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState: function validationState() {\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor !== null) return this.computedColor;\n      return undefined;\n    },\n    switchData: function switchData() {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses\n      });\n    }\n  },\n  methods: {\n    genDefaultSlot: function genDefaultSlot() {\n      return [this.genSwitch(), this.genLabel()];\n    },\n    genSwitch: function genSwitch() {\n      var _this$attrs$ = this.attrs$,\n          title = _this$attrs$.title,\n          switchAttrs = _objectWithoutProperties(_this$attrs$, [\"title\"]);\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input'\n      }, [this.genInput('checkbox', _objectSpread(_objectSpread({}, this.attrs), switchAttrs)), this.genRipple(this.setTextColor(this.validationState, {\n        directives: [{\n          name: 'touch',\n          value: {\n            left: this.onSwipeLeft,\n            right: this.onSwipeRight\n          }\n        }]\n      })), this.$createElement('div', _objectSpread({\n        staticClass: 'v-input--switch__track'\n      }, this.switchData)), this.$createElement('div', _objectSpread({\n        staticClass: 'v-input--switch__thumb'\n      }, this.switchData), [this.genProgress()])]);\n    },\n    genProgress: function genProgress() {\n      return this.$createElement(_transitions.VFabTransition, {}, [this.loading === false ? null : this.$slots.progress || this.$createElement(_VProgressCircular.default, {\n        props: {\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          size: 16,\n          width: 2,\n          indeterminate: true\n        }\n      })]);\n    },\n    onSwipeLeft: function onSwipeLeft() {\n      if (this.isActive) this.onChange();\n    },\n    onSwipeRight: function onSwipeRight() {\n      if (!this.isActive) this.onChange();\n    },\n    onKeydown: function onKeydown(e) {\n      if (e.keyCode === _helpers.keyCodes.left && this.isActive || e.keyCode === _helpers.keyCodes.right && !this.isActive) this.onChange();\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["require","_selectable","extend","name","directives","Touch","_touch","props","inset","Boolean","loading","type","String","default","flat","computed","classes","_VInput","options","call","attrs","isActive","isDisabled","role","validationState","hasError","shouldValidate","hasSuccess","hasColor","computedColor","undefined","switchData","setTextColor","class","themeClasses","methods","genDefaultSlot","genSwitch","genLabel","attrs$","title","switchAttrs","$createElement","staticClass","genInput","genRipple","value","left","onSwipeLeft","right","onSwipeRight","genProgress","_transitions","$slots","progress","_VProgressCircular","color","size","width","indeterminate","onChange","onKeydown","e","keyCode","_helpers"],"sourceRoot":"","sources":["../../../src/components/VSwitch/VSwitch.ts"],"sourcesContent":["// Styles\nimport '../../styles/components/_selection-controls.sass'\nimport './VSwitch.sass'\n\n// Mixins\nimport Selectable from '../../mixins/selectable'\nimport VInput from '../VInput'\n\n// Directives\nimport Touch from '../../directives/touch'\n\n// Components\nimport { VFabTransition } from '../transitions'\nimport VProgressCircular from '../VProgressCircular/VProgressCircular'\n\n// Helpers\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\n/* @vue/component */\nexport default Selectable.extend({\n  name: 'v-switch',\n\n  directives: { Touch },\n\n  props: {\n    inset: Boolean,\n    loading: {\n      type: [Boolean, String],\n      default: false,\n    },\n    flat: {\n      type: Boolean,\n      default: false,\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-input--selection-controls v-input--switch': true,\n        'v-input--switch--flat': this.flat,\n        'v-input--switch--inset': this.inset,\n      }\n    },\n    attrs (): object {\n      return {\n        'aria-checked': String(this.isActive),\n        'aria-disabled': String(this.isDisabled),\n        role: 'switch',\n      }\n    },\n    // Do not return undefined if disabled,\n    // according to spec, should still show\n    // a color when disabled and active\n    validationState (): string | undefined {\n      if (this.hasError && this.shouldValidate) return 'error'\n      if (this.hasSuccess) return 'success'\n      if (this.hasColor !== null) return this.computedColor\n      return undefined\n    },\n    switchData (): VNodeData {\n      return this.setTextColor(this.loading ? undefined : this.validationState, {\n        class: this.themeClasses,\n      })\n    },\n  },\n\n  methods: {\n    genDefaultSlot (): (VNode | null)[] {\n      return [\n        this.genSwitch(),\n        this.genLabel(),\n      ]\n    },\n    genSwitch (): VNode {\n      const { title, ...switchAttrs } = this.attrs$\n\n      return this.$createElement('div', {\n        staticClass: 'v-input--selection-controls__input',\n      }, [\n        this.genInput('checkbox', {\n          ...this.attrs,\n          ...switchAttrs,\n        }),\n        this.genRipple(this.setTextColor(this.validationState, {\n          directives: [{\n            name: 'touch',\n            value: {\n              left: this.onSwipeLeft,\n              right: this.onSwipeRight,\n            },\n          }],\n        })),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__track',\n          ...this.switchData,\n        }),\n        this.$createElement('div', {\n          staticClass: 'v-input--switch__thumb',\n          ...this.switchData,\n        }, [this.genProgress()]),\n      ])\n    },\n    genProgress (): VNode {\n      return this.$createElement(VFabTransition, {}, [\n        this.loading === false\n          ? null\n          : this.$slots.progress || this.$createElement(VProgressCircular, {\n            props: {\n              color: (this.loading === true || this.loading === '')\n                ? (this.color || 'primary')\n                : this.loading,\n              size: 16,\n              width: 2,\n              indeterminate: true,\n            },\n          }),\n      ])\n    },\n    onSwipeLeft () {\n      if (this.isActive) this.onChange()\n    },\n    onSwipeRight () {\n      if (!this.isActive) this.onChange()\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (\n        (e.keyCode === keyCodes.left && this.isActive) ||\n        (e.keyCode === keyCodes.right && !this.isActive)\n      ) this.onChange()\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
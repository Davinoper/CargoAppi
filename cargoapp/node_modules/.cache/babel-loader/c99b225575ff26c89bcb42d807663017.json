{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nrequire(\"core-js/modules/es.array.from.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.string.includes.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.string.ends-with.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.modes = void 0;\n\nrequire(\"../../../src/components/VColorPicker/VColorPickerEdit.sass\");\n\nvar _VBtn = _interopRequireDefault(require(\"../VBtn\"));\n\nvar _VIcon = _interopRequireDefault(require(\"../VIcon\"));\n\nvar _colorUtils = require(\"../../util/colorUtils\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nvar _util = require(\"./util\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar modes = {\n  rgba: {\n    inputs: [['r', 255, 'int'], ['g', 255, 'int'], ['b', 255, 'int'], ['a', 1, 'float']],\n    from: _util.fromRGBA\n  },\n  hsla: {\n    inputs: [['h', 360, 'int'], ['s', 1, 'float'], ['l', 1, 'float'], ['a', 1, 'float']],\n    from: _util.fromHSLA\n  },\n  hexa: {\n    from: _util.fromHexa\n  }\n};\nexports.modes = modes;\n\nvar _default = _vue.default.extend({\n  name: 'v-color-picker-edit',\n  props: {\n    color: Object,\n    disabled: Boolean,\n    hideAlpha: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: function validator(v) {\n        return Object.keys(modes).includes(v);\n      }\n    }\n  },\n  data: function data() {\n    return {\n      modes: modes,\n      internalMode: this.mode\n    };\n  },\n  computed: {\n    currentMode: function currentMode() {\n      return this.modes[this.internalMode];\n    }\n  },\n  watch: {\n    mode: function mode(_mode) {\n      this.internalMode = _mode;\n    }\n  },\n  created: function created() {\n    this.internalMode = this.mode;\n  },\n  methods: {\n    getValue: function getValue(v, type) {\n      if (type === 'float') return Math.round(v * 100) / 100;else if (type === 'int') return Math.round(v);else return 0;\n    },\n    parseValue: function parseValue(v, type) {\n      if (type === 'float') return parseFloat(v);else if (type === 'int') return parseInt(v, 10) || 0;else return 0;\n    },\n    changeMode: function changeMode() {\n      var modes = Object.keys(this.modes);\n      var index = modes.indexOf(this.internalMode);\n      var newMode = modes[(index + 1) % modes.length];\n      this.internalMode = newMode;\n      this.$emit('update:mode', newMode);\n    },\n    genInput: function genInput(target, attrs, value, on) {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__input'\n      }, [this.$createElement('input', {\n        key: target,\n        attrs: attrs,\n        domProps: {\n          value: value\n        },\n        on: on\n      }), this.$createElement('span', target.toUpperCase())]);\n    },\n    genInputs: function genInputs() {\n      var _this = this;\n\n      if (this.internalMode === 'hexa') {\n        var hex = this.color.hexa;\n        var value = this.hideAlpha && hex.endsWith('FF') ? hex.substr(0, 7) : hex;\n        return this.genInput('hex', {\n          maxlength: this.hideAlpha ? 7 : 9,\n          disabled: this.disabled\n        }, value, {\n          change: function change(e) {\n            var el = e.target;\n\n            _this.$emit('update:color', _this.currentMode.from((0, _colorUtils.parseHex)(el.value)));\n          }\n        });\n      } else {\n        var inputs = this.hideAlpha ? this.currentMode.inputs.slice(0, -1) : this.currentMode.inputs;\n        return inputs.map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 3),\n              target = _ref2[0],\n              max = _ref2[1],\n              type = _ref2[2];\n\n          var value = _this.color[_this.internalMode];\n          return _this.genInput(target, {\n            type: 'number',\n            min: 0,\n            max: max,\n            step: type === 'float' ? '0.01' : type === 'int' ? '1' : undefined,\n            disabled: _this.disabled\n          }, _this.getValue(value[target], type), {\n            input: function input(e) {\n              var el = e.target;\n\n              var newVal = _this.parseValue(el.value || '0', type);\n\n              _this.$emit('update:color', _this.currentMode.from(Object.assign({}, value, _defineProperty({}, target, newVal)), _this.color.alpha));\n            }\n          });\n        });\n      }\n    },\n    genSwitch: function genSwitch() {\n      return this.$createElement(_VBtn.default, {\n        props: {\n          small: true,\n          icon: true,\n          disabled: this.disabled\n        },\n        on: {\n          click: this.changeMode\n        }\n      }, [this.$createElement(_VIcon.default, '$unfold')]);\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-color-picker__edit'\n    }, [this.genInputs(), !this.hideModeSwitch && this.genSwitch()]);\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["require","modes","rgba","inputs","from","_util","hsla","hexa","_vue","extend","name","props","color","Object","disabled","Boolean","hideAlpha","hideModeSwitch","mode","type","String","default","validator","v","keys","includes","data","internalMode","computed","currentMode","watch","_mode","created","methods","getValue","Math","round","parseValue","parseFloat","parseInt","changeMode","index","indexOf","newMode","length","$emit","genInput","target","attrs","value","on","$createElement","staticClass","key","domProps","toUpperCase","genInputs","hex","endsWith","substr","maxlength","change","e","el","_this","slice","map","max","min","step","undefined","input","newVal","assign","alpha","genSwitch","_VBtn","small","icon","click","_VIcon","render","h"],"sourceRoot":"","sources":["../../../src/components/VColorPicker/VColorPickerEdit.ts"],"sourcesContent":["// Styles\nimport './VColorPickerEdit.sass'\n\n// Components\nimport VBtn from '../VBtn'\nimport VIcon from '../VIcon'\n\n// Helpers\nimport { parseHex } from '../../util/colorUtils'\n\n// Types\nimport Vue, { VNode, PropType } from 'vue'\nimport { VColorPickerColor, fromRGBA, fromHexa, fromHSLA } from './util'\n\ntype Input = [string, number, string]\n\nexport type Mode = {\n  inputs?: Input[]\n  from: Function\n}\n\nexport const modes = {\n  rgba: {\n    inputs: [\n      ['r', 255, 'int'],\n      ['g', 255, 'int'],\n      ['b', 255, 'int'],\n      ['a', 1, 'float'],\n    ],\n    from: fromRGBA,\n  },\n  hsla: {\n    inputs: [\n      ['h', 360, 'int'],\n      ['s', 1, 'float'],\n      ['l', 1, 'float'],\n      ['a', 1, 'float'],\n    ],\n    from: fromHSLA,\n  },\n  hexa: {\n    from: fromHexa,\n  },\n} as { [key: string]: Mode }\n\nexport default Vue.extend({\n  name: 'v-color-picker-edit',\n\n  props: {\n    color: Object as PropType<VColorPickerColor>,\n    disabled: Boolean,\n    hideAlpha: Boolean,\n    hideModeSwitch: Boolean,\n    mode: {\n      type: String,\n      default: 'rgba',\n      validator: (v: string) => Object.keys(modes).includes(v),\n    },\n  },\n\n  data () {\n    return {\n      modes,\n      internalMode: this.mode,\n    }\n  },\n\n  computed: {\n    currentMode (): Mode {\n      return this.modes[this.internalMode]\n    },\n  },\n\n  watch: {\n    mode (mode) {\n      this.internalMode = mode\n    },\n  },\n\n  created () {\n    this.internalMode = this.mode\n  },\n\n  methods: {\n    getValue (v: any, type: string) {\n      if (type === 'float') return Math.round(v * 100) / 100\n      else if (type === 'int') return Math.round(v)\n      else return 0\n    },\n    parseValue (v: string, type: string) {\n      if (type === 'float') return parseFloat(v)\n      else if (type === 'int') return parseInt(v, 10) || 0\n      else return 0\n    },\n    changeMode () {\n      const modes = Object.keys(this.modes)\n      const index = modes.indexOf(this.internalMode)\n      const newMode = modes[(index + 1) % modes.length]\n      this.internalMode = newMode\n      this.$emit('update:mode', newMode)\n    },\n    genInput (target: string, attrs: any, value: any, on: any): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__input',\n      }, [\n        this.$createElement('input', {\n          key: target,\n          attrs,\n          domProps: {\n            value,\n          },\n          on,\n        }),\n        this.$createElement('span', target.toUpperCase()),\n      ])\n    },\n    genInputs (): VNode[] | VNode {\n      if (this.internalMode === 'hexa') {\n        const hex = this.color.hexa\n        const value = this.hideAlpha && hex.endsWith('FF') ? hex.substr(0, 7) : hex\n        return this.genInput(\n          'hex',\n          {\n            maxlength: this.hideAlpha ? 7 : 9,\n            disabled: this.disabled,\n          },\n          value,\n          {\n            change: (e: Event) => {\n              const el = e.target as HTMLInputElement\n              this.$emit('update:color', this.currentMode.from(parseHex(el.value)))\n            },\n          }\n        )\n      } else {\n        const inputs = this.hideAlpha ? this.currentMode.inputs!.slice(0, -1) : this.currentMode.inputs!\n        return inputs.map(([target, max, type]) => {\n          const value = this.color[this.internalMode as keyof VColorPickerColor] as any\n          return this.genInput(\n            target,\n            {\n              type: 'number',\n              min: 0,\n              max,\n              step: type === 'float' ? '0.01' : type === 'int' ? '1' : undefined,\n              disabled: this.disabled,\n            },\n            this.getValue(value[target], type),\n            {\n              input: (e: Event) => {\n                const el = e.target as HTMLInputElement\n                const newVal = this.parseValue(el.value || '0', type)\n\n                this.$emit('update:color', this.currentMode.from(\n                  Object.assign({}, value, { [target]: newVal }),\n                  this.color.alpha\n                ))\n              },\n            }\n          )\n        })\n      }\n    },\n    genSwitch (): VNode {\n      return this.$createElement(VBtn, {\n        props: {\n          small: true,\n          icon: true,\n          disabled: this.disabled,\n        },\n        on: {\n          click: this.changeMode,\n        },\n      }, [\n        this.$createElement(VIcon, '$unfold'),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__edit',\n    }, [\n      this.genInputs(),\n      !this.hideModeSwitch && this.genSwitch(),\n    ])\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
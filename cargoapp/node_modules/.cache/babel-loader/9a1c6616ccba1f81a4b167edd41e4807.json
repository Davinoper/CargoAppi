{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helpers = require(\"../../util/helpers\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Helpers\n// Types\n\n\nvar _default = _vue.default.extend({\n  name: 'measurable',\n  props: {\n    height: [Number, String],\n    maxHeight: [Number, String],\n    maxWidth: [Number, String],\n    minHeight: [Number, String],\n    minWidth: [Number, String],\n    width: [Number, String]\n  },\n  computed: {\n    measurableStyles: function measurableStyles() {\n      var styles = {};\n      var height = (0, _helpers.convertToUnit)(this.height);\n      var minHeight = (0, _helpers.convertToUnit)(this.minHeight);\n      var minWidth = (0, _helpers.convertToUnit)(this.minWidth);\n      var maxHeight = (0, _helpers.convertToUnit)(this.maxHeight);\n      var maxWidth = (0, _helpers.convertToUnit)(this.maxWidth);\n      var width = (0, _helpers.convertToUnit)(this.width);\n      if (height) styles.height = height;\n      if (minHeight) styles.minHeight = minHeight;\n      if (minWidth) styles.minWidth = minWidth;\n      if (maxHeight) styles.maxHeight = maxHeight;\n      if (maxWidth) styles.maxWidth = maxWidth;\n      if (width) styles.width = width;\n      return styles;\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AACA;;AAGA;;;;;;EAJA;AAGA;;;eAKeA,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAE,YADkB;EAGxBC,KAAK,EAAE;IACLC,MAAM,EAAE,CAACC,MAAD,EAASC,MAAT,CADH;IAELC,SAAS,EAAE,CAACF,MAAD,EAASC,MAAT,CAFN;IAGLE,QAAQ,EAAE,CAACH,MAAD,EAASC,MAAT,CAHL;IAILG,SAAS,EAAE,CAACJ,MAAD,EAASC,MAAT,CAJN;IAKLI,QAAQ,EAAE,CAACL,MAAD,EAASC,MAAT,CALL;IAMLK,KAAK,EAAE,CAACN,MAAD,EAASC,MAAT;EANF,CAHiB;EAYxBM,QAAQ,EAAE;IACRC,gBADQ,8BACQ;MACd,IAAMC,MAAM,GAA2B,EAAvC;MAEA,IAAMV,MAAM,GAAG,4BAAc,KAAKA,MAAnB,CAAf;MACA,IAAMK,SAAS,GAAG,4BAAc,KAAKA,SAAnB,CAAlB;MACA,IAAMC,QAAQ,GAAG,4BAAc,KAAKA,QAAnB,CAAjB;MACA,IAAMH,SAAS,GAAG,4BAAc,KAAKA,SAAnB,CAAlB;MACA,IAAMC,QAAQ,GAAG,4BAAc,KAAKA,QAAnB,CAAjB;MACA,IAAMG,KAAK,GAAG,4BAAc,KAAKA,KAAnB,CAAd;MAEA,IAAIP,MAAJ,EAAYU,MAAM,CAACV,MAAP,GAAgBA,MAAhB;MACZ,IAAIK,SAAJ,EAAeK,MAAM,CAACL,SAAP,GAAmBA,SAAnB;MACf,IAAIC,QAAJ,EAAcI,MAAM,CAACJ,QAAP,GAAkBA,QAAlB;MACd,IAAIH,SAAJ,EAAeO,MAAM,CAACP,SAAP,GAAmBA,SAAnB;MACf,IAAIC,QAAJ,EAAcM,MAAM,CAACN,QAAP,GAAkBA,QAAlB;MACd,IAAIG,KAAJ,EAAWG,MAAM,CAACH,KAAP,GAAeA,KAAf;MAEX,OAAOG,MAAP;IACD;EAnBO;AAZc,CAAX","names":["_vue","extend","name","props","height","Number","String","maxHeight","maxWidth","minHeight","minWidth","width","computed","measurableStyles","styles"],"sourceRoot":"","sources":["../../../src/mixins/measurable/index.ts"],"sourcesContent":["// Helpers\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport Vue, { PropType } from 'vue'\n\nexport type NumberOrNumberString = PropType<string | number | undefined>\n\nexport default Vue.extend({\n  name: 'measurable',\n\n  props: {\n    height: [Number, String] as NumberOrNumberString,\n    maxHeight: [Number, String] as NumberOrNumberString,\n    maxWidth: [Number, String] as NumberOrNumberString,\n    minHeight: [Number, String] as NumberOrNumberString,\n    minWidth: [Number, String] as NumberOrNumberString,\n    width: [Number, String] as NumberOrNumberString,\n  },\n\n  computed: {\n    measurableStyles (): object {\n      const styles: Record<string, string> = {}\n\n      const height = convertToUnit(this.height)\n      const minHeight = convertToUnit(this.minHeight)\n      const minWidth = convertToUnit(this.minWidth)\n      const maxHeight = convertToUnit(this.maxHeight)\n      const maxWidth = convertToUnit(this.maxWidth)\n      const width = convertToUnit(this.width)\n\n      if (height) styles.height = height\n      if (minHeight) styles.minHeight = minHeight\n      if (minWidth) styles.minWidth = minWidth\n      if (maxHeight) styles.maxHeight = maxHeight\n      if (maxWidth) styles.maxWidth = maxWidth\n      if (width) styles.width = width\n\n      return styles\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
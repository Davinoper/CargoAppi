{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _console = require(\"../../util/console\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* @vue/component */\n\n\nvar _default2 = _vue.default.extend({\n  name: 'mobile',\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String],\n      default: function _default() {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify ? this.$vuetify.breakpoint.mobileBreakpoint : undefined;\n      },\n      validator: function validator(v) {\n        return !isNaN(Number(v)) || ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v));\n      }\n    }\n  },\n  computed: {\n    isMobile: function isMobile() {\n      var _this$$vuetify$breakp = this.$vuetify.breakpoint,\n          mobile = _this$$vuetify$breakp.mobile,\n          width = _this$$vuetify$breakp.width,\n          name = _this$$vuetify$breakp.name,\n          mobileBreakpoint = _this$$vuetify$breakp.mobileBreakpoint; // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile;\n      var mobileWidth = parseInt(this.mobileBreakpoint, 10);\n      var isNumber = !isNaN(mobileWidth);\n      return isNumber ? width < mobileWidth : name === this.mobileBreakpoint;\n    }\n  },\n  created: function created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      (0, _console.deprecate)('mobile-break-point', 'mobile-breakpoint', this);\n    }\n  }\n});\n\nexports.default = _default2;","map":{"version":3,"mappings":";;;;;;;;;;;;;AAEA;;AACA;;;;;;;AAEA;;;gBACeA,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAE,QADkB;EAGxBC,KAAK,EAAE;IACLC,gBAAgB,EAAE;MAChBC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADU;MAEhBC,OAFgB,sBAET;QACL;QACA;QACA,OAAO,KAAKC,QAAL,GACH,KAAKA,QAAL,CAAcC,UAAd,CAAyBN,gBADtB,GAEHO,SAFJ;MALc;MAShBC,SAAS,EAAE,sBAAC;QAAA,OACV,CAACC,KAAK,CAACP,MAAM,CAACQ,CAAD,CAAP,CAAN,IACA,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+BC,QAA/B,CAAwCR,MAAM,CAACO,CAAD,CAA9C,CAFU;MAAA;IATI;EADb,CAHiB;EAoBxBE,QAAQ,EAAE;IACRC,QADQ,sBACA;MAAA,4BAMF,KAAKR,QAAL,CAAcC,UANZ;MAAA,IAEJQ,MAFI,yBAEJA,MAFI;MAAA,IAGJC,KAHI,yBAGJA,KAHI;MAAA,IAIJjB,IAJI,yBAIJA,IAJI;MAAA,IAKJE,gBALI,yBAKJA,gBALI,EAQN;MACA;;MACA,IAAIA,gBAAgB,KAAK,KAAKA,gBAA9B,EAAgD,OAAOc,MAAP;MAEhD,IAAME,WAAW,GAAGC,QAAQ,CAAC,KAAKjB,gBAAN,EAAwB,EAAxB,CAA5B;MACA,IAAMkB,QAAQ,GAAG,CAACT,KAAK,CAACO,WAAD,CAAvB;MAEA,OAAOE,QAAQ,GACXH,KAAK,GAAGC,WADG,GAEXlB,IAAI,KAAK,KAAKE,gBAFlB;IAGD;EAnBO,CApBc;EA0CxBmB,OA1CwB,qBA0CjB;IACL;IACA,IAAI,KAAKC,MAAL,CAAYC,cAAZ,CAA2B,oBAA3B,CAAJ,EAAsD;MACpD,wBAAU,oBAAV,EAAgC,mBAAhC,EAAqD,IAArD;IACD;EACF;AA/CuB,CAAX","names":["_vue","extend","name","props","mobileBreakpoint","type","Number","String","default","$vuetify","breakpoint","undefined","validator","isNaN","v","includes","computed","isMobile","mobile","width","mobileWidth","parseInt","isNumber","created","$attrs","hasOwnProperty"],"sourceRoot":"","sources":["../../../src/mixins/mobile/index.ts"],"sourcesContent":["// Types\nimport { BreakpointName } from 'vuetify/types/services/breakpoint'\nimport { deprecate } from '../../util/console'\nimport Vue, { PropType } from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'mobile',\n\n  props: {\n    mobileBreakpoint: {\n      type: [Number, String] as PropType<number | BreakpointName>,\n      default (): number | BreakpointName | undefined {\n        // Avoid destroying unit\n        // tests for users\n        return this.$vuetify\n          ? this.$vuetify.breakpoint.mobileBreakpoint\n          : undefined\n      },\n      validator: v => (\n        !isNaN(Number(v)) ||\n        ['xs', 'sm', 'md', 'lg', 'xl'].includes(String(v))\n      ),\n    },\n  },\n\n  computed: {\n    isMobile (): boolean {\n      const {\n        mobile,\n        width,\n        name,\n        mobileBreakpoint,\n      } = this.$vuetify.breakpoint\n\n      // Check if local mobileBreakpoint matches\n      // the application's mobileBreakpoint\n      if (mobileBreakpoint === this.mobileBreakpoint) return mobile\n\n      const mobileWidth = parseInt(this.mobileBreakpoint, 10)\n      const isNumber = !isNaN(mobileWidth)\n\n      return isNumber\n        ? width < mobileWidth\n        : name === this.mobileBreakpoint\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('mobile-break-point')) {\n      deprecate('mobile-break-point', 'mobile-breakpoint', this)\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
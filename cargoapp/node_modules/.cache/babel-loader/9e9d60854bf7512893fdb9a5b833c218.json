{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nrequire(\"core-js/modules/es.array.fill.js\");\n\nrequire(\"core-js/modules/es.regexp.to-string.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nrequire(\"core-js/modules/es.array.slice.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _colorable = _interopRequireDefault(require(\"../../mixins/colorable\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nvar _core = require(\"./helpers/core\");\n\nvar _path = require(\"./helpers/path\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar _default2 = (0, _mixins.default)(_colorable.default).extend({\n  name: 'VSparkline',\n  inheritAttrs: false,\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease'\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    fill: {\n      type: Boolean,\n      default: false\n    },\n    gradient: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    gradientDirection: {\n      type: String,\n      validator: function validator(val) {\n        return ['top', 'bottom', 'left', 'right'].includes(val);\n      },\n      default: 'top'\n    },\n    height: {\n      type: [String, Number],\n      default: 75\n    },\n    labels: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    labelSize: {\n      type: [Number, String],\n      default: 7\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4\n    },\n    padding: {\n      type: [String, Number],\n      default: 8\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false\n    },\n    type: {\n      type: String,\n      default: 'trend',\n      validator: function validator(val) {\n        return ['trend', 'bar'].includes(val);\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    width: {\n      type: [Number, String],\n      default: 300\n    }\n  },\n  data: function data() {\n    return {\n      lastLength: 0\n    };\n  },\n  computed: {\n    parsedPadding: function parsedPadding() {\n      return Number(this.padding);\n    },\n    parsedWidth: function parsedWidth() {\n      return Number(this.width);\n    },\n    parsedHeight: function parsedHeight() {\n      return parseInt(this.height, 10);\n    },\n    parsedLabelSize: function parsedLabelSize() {\n      return parseInt(this.labelSize, 10) || 7;\n    },\n    totalHeight: function totalHeight() {\n      var height = this.parsedHeight;\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5;\n      return height;\n    },\n    totalWidth: function totalWidth() {\n      var width = this.parsedWidth;\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width);\n      return width;\n    },\n    totalValues: function totalValues() {\n      return this.value.length;\n    },\n    _lineWidth: function _lineWidth() {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        var totalPadding = this.parsedPadding * (this.totalValues + 1);\n        return (this.parsedWidth - totalPadding) / this.totalValues;\n      } else {\n        return parseFloat(this.lineWidth) || 4;\n      }\n    },\n    boundary: function boundary() {\n      if (this.type === 'bar') return {\n        minX: 0,\n        maxX: this.totalWidth,\n        minY: 0,\n        maxY: this.parsedHeight\n      };\n      var padding = this.parsedPadding;\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding\n      };\n    },\n    hasLabels: function hasLabels() {\n      return Boolean(this.showLabels || this.labels.length > 0 || this.$scopedSlots.label);\n    },\n    parsedLabels: function parsedLabels() {\n      var labels = [];\n      var points = this._values;\n      var len = points.length;\n\n      for (var i = 0; labels.length < len; i++) {\n        var item = points[i];\n        var value = this.labels[i];\n\n        if (!value) {\n          value = _typeof(item) === 'object' ? item.value : item;\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value)\n        });\n      }\n\n      return labels;\n    },\n    normalizedValues: function normalizedValues() {\n      return this.value.map(function (item) {\n        return typeof item === 'number' ? item : item.value;\n      });\n    },\n    _values: function _values() {\n      return this.type === 'trend' ? (0, _core.genPoints)(this.normalizedValues, this.boundary) : (0, _core.genBars)(this.normalizedValues, this.boundary);\n    },\n    textY: function textY() {\n      var y = this.parsedHeight;\n      if (this.type === 'trend') y -= 4;\n      return y;\n    },\n    _radius: function _radius() {\n      return this.smooth === true ? 8 : Number(this.smooth);\n    }\n  },\n  watch: {\n    value: {\n      immediate: true,\n      handler: function handler() {\n        var _this = this;\n\n        this.$nextTick(function () {\n          if (!_this.autoDraw || _this.type === 'bar' || !_this.$refs.path) return;\n          var path = _this.$refs.path;\n          var length = path.getTotalLength();\n\n          if (!_this.fill) {\n            path.style.transition = 'none';\n            path.style.strokeDasharray = length + ' ' + length;\n            path.style.strokeDashoffset = Math.abs(length - (_this.lastLength || 0)).toString();\n            path.getBoundingClientRect();\n            path.style.transition = \"stroke-dashoffset \".concat(_this.autoDrawDuration, \"ms \").concat(_this.autoDrawEasing);\n            path.style.strokeDashoffset = '0';\n          } else {\n            path.style.transformOrigin = 'bottom center';\n            path.style.transition = 'none';\n            path.style.transform = \"scaleY(0)\";\n            path.getBoundingClientRect();\n            path.style.transition = \"transform \".concat(_this.autoDrawDuration, \"ms \").concat(_this.autoDrawEasing);\n            path.style.transform = \"scaleY(1)\";\n          }\n\n          _this.lastLength = length;\n        });\n      }\n    }\n  },\n  methods: {\n    genGradient: function genGradient() {\n      var _this2 = this;\n\n      var gradientDirection = this.gradientDirection;\n      var gradient = this.gradient.slice(); // Pushes empty string to force\n      // a fallback to currentColor\n\n      if (!gradient.length) gradient.push('');\n      var len = Math.max(gradient.length - 1, 1);\n      var stops = gradient.reverse().map(function (color, index) {\n        return _this2.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor'\n          }\n        });\n      });\n      return this.$createElement('defs', [this.$createElement('linearGradient', {\n        attrs: {\n          id: this._uid,\n          gradientUnits: 'userSpaceOnUse',\n          x1: gradientDirection === 'left' ? '100%' : '0',\n          y1: gradientDirection === 'top' ? '100%' : '0',\n          x2: gradientDirection === 'right' ? '100%' : '0',\n          y2: gradientDirection === 'bottom' ? '100%' : '0'\n        }\n      }, stops)]);\n    },\n    genG: function genG(children) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor'\n        }\n      }, children);\n    },\n    genPath: function genPath() {\n      var points = (0, _core.genPoints)(this.normalizedValues, this.boundary);\n      return this.$createElement('path', {\n        attrs: {\n          d: (0, _path.genPath)(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? \"url(#\".concat(this._uid, \")\") : 'none',\n          stroke: this.fill ? 'none' : \"url(#\".concat(this._uid, \")\")\n        },\n        ref: 'path'\n      });\n    },\n    genLabels: function genLabels(offsetX) {\n      var _this3 = this;\n\n      var children = this.parsedLabels.map(function (item, i) {\n        return _this3.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + _this3._lineWidth / 2,\n            y: _this3.textY + _this3.parsedLabelSize * 0.75,\n            'font-size': Number(_this3.labelSize) || 7\n          }\n        }, [_this3.genLabel(item, i)]);\n      });\n      return this.genG(children);\n    },\n    genLabel: function genLabel(item, index) {\n      return this.$scopedSlots.label ? this.$scopedSlots.label({\n        index: index,\n        value: item.value\n      }) : item.value;\n    },\n    genBars: function genBars() {\n      if (!this.value || this.totalValues < 2) return undefined;\n      var bars = (0, _core.genBars)(this.normalizedValues, this.boundary);\n      var offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2;\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: \"0 0 \".concat(this.totalWidth, \" \").concat(this.totalHeight)\n        }\n      }, [this.genGradient(), this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid), this.hasLabels ? this.genLabels(offsetX) : undefined, this.$createElement('g', {\n        attrs: {\n          'clip-path': \"url(#sparkline-bar-\".concat(this._uid, \"-clip)\"),\n          fill: \"url(#\".concat(this._uid, \")\")\n        }\n      }, [this.$createElement('rect', {\n        attrs: {\n          x: 0,\n          y: 0,\n          width: this.totalWidth,\n          height: this.height\n        }\n      })])]);\n    },\n    genClipPath: function genClipPath(bars, offsetX, lineWidth, id) {\n      var _this4 = this;\n\n      var rounding = typeof this.smooth === 'number' ? this.smooth : this.smooth ? 2 : 0;\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: \"\".concat(id, \"-clip\")\n        }\n      }, bars.map(function (item) {\n        return _this4.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding\n          }\n        }, [_this4.autoDraw ? _this4.$createElement('animate', {\n          attrs: {\n            attributeName: 'height',\n            from: 0,\n            to: item.height,\n            dur: \"\".concat(_this4.autoDrawDuration, \"ms\"),\n            fill: 'freeze'\n          }\n        }) : undefined]);\n      }));\n    },\n    genTrend: function genTrend() {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: _objectSpread(_objectSpread({}, this.$attrs), {}, {\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: \"0 0 \".concat(this.width, \" \").concat(this.totalHeight)\n        })\n      }), [this.genGradient(), this.hasLabels && this.genLabels(-(this._lineWidth / 2)), this.genPath()]);\n    }\n  },\n  render: function render(h) {\n    if (this.totalValues < 2) return undefined;\n    return this.type === 'trend' ? this.genTrend() : this.genBars();\n  }\n});\n\nexports.default = _default2;","map":{"version":3,"mappings":"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","names":["_colorable","extend","name","inheritAttrs","props","autoDraw","Boolean","autoDrawDuration","type","Number","default","autoDrawEasing","String","autoLineWidth","color","fill","gradient","Array","gradientDirection","validator","val","includes","height","labels","labelSize","lineWidth","padding","showLabels","smooth","value","width","data","lastLength","computed","parsedPadding","parsedWidth","parsedHeight","parseInt","parsedLabelSize","totalHeight","hasLabels","totalWidth","Math","max","length","_lineWidth","totalValues","totalPadding","parseFloat","boundary","minX","maxX","minY","maxY","$scopedSlots","label","parsedLabels","points","_values","len","i","item","_typeof","push","x","normalizedValues","map","textY","y","_radius","watch","immediate","handler","$nextTick","_this","$refs","path","getTotalLength","style","transition","strokeDasharray","strokeDashoffset","abs","toString","getBoundingClientRect","transformOrigin","transform","methods","genGradient","slice","stops","reverse","index","_this2","$createElement","attrs","offset","id","_uid","gradientUnits","x1","y1","x2","y2","genG","children","fontSize","textAnchor","dominantBaseline","genPath","d","stroke","ref","genLabels","offsetX","_this3","genLabel","genBars","undefined","bars","display","viewBox","genClipPath","rounding","_this4","rx","ry","attributeName","from","to","dur","genTrend","setTextColor","$attrs","render","h"],"sourceRoot":"","sources":["../../../src/components/VSparkline/VSparkline.ts"],"sourcesContent":["// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { genPoints, genBars } from './helpers/core'\nimport { genPath } from './helpers/path'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { Prop, PropValidator } from 'vue/types/options'\n\nexport type SparklineItem = number | { value: number }\n\nexport type SparklineText = {\n  x: number\n  value: string\n}\n\nexport interface Boundary {\n  minX: number\n  minY: number\n  maxX: number\n  maxY: number\n}\n\nexport interface Point {\n  x: number\n  y: number\n  value: number\n}\n\nexport interface Bar {\n  x: number\n  y: number\n  height: number\n  value: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    path: SVGPathElement\n  }\n}\n\nexport default mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof Colorable\n  ]>\n/* eslint-enable indent */\n>(\n  Colorable\n).extend({\n  name: 'VSparkline',\n\n  inheritAttrs: false,\n\n  props: {\n    autoDraw: Boolean,\n    autoDrawDuration: {\n      type: Number,\n      default: 2000,\n    },\n    autoDrawEasing: {\n      type: String,\n      default: 'ease',\n    },\n    autoLineWidth: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    fill: {\n      type: Boolean,\n      default: false,\n    },\n    gradient: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n    gradientDirection: {\n      type: String as Prop<'top' | 'bottom' | 'left' | 'right'>,\n      validator: (val: string) => ['top', 'bottom', 'left', 'right'].includes(val),\n      default: 'top',\n    },\n    height: {\n      type: [String, Number],\n      default: 75,\n    },\n    labels: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    labelSize: {\n      type: [Number, String],\n      default: 7,\n    },\n    lineWidth: {\n      type: [String, Number],\n      default: 4,\n    },\n    padding: {\n      type: [String, Number],\n      default: 8,\n    },\n    showLabels: Boolean,\n    smooth: {\n      type: [Boolean, Number, String],\n      default: false,\n    },\n    type: {\n      type: String as Prop<'trend' | 'bar'>,\n      default: 'trend',\n      validator: (val: string) => ['trend', 'bar'].includes(val),\n    },\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<SparklineItem[]>,\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data: () => ({\n    lastLength: 0,\n  }),\n\n  computed: {\n    parsedPadding (): number {\n      return Number(this.padding)\n    },\n    parsedWidth (): number {\n      return Number(this.width)\n    },\n    parsedHeight (): number {\n      return parseInt(this.height, 10)\n    },\n    parsedLabelSize (): number {\n      return parseInt(this.labelSize, 10) || 7\n    },\n    totalHeight (): number {\n      let height = this.parsedHeight\n\n      if (this.hasLabels) height += parseInt(this.labelSize, 10) * 1.5\n\n      return height\n    },\n    totalWidth (): number {\n      let width = this.parsedWidth\n      if (this.type === 'bar') width = Math.max(this.value.length * this._lineWidth, width)\n\n      return width\n    },\n    totalValues (): number {\n      return this.value.length\n    },\n    _lineWidth (): number {\n      if (this.autoLineWidth && this.type !== 'trend') {\n        const totalPadding = this.parsedPadding * (this.totalValues + 1)\n        return (this.parsedWidth - totalPadding) / this.totalValues\n      } else {\n        return parseFloat(this.lineWidth) || 4\n      }\n    },\n    boundary (): Boundary {\n      if (this.type === 'bar') return { minX: 0, maxX: this.totalWidth, minY: 0, maxY: this.parsedHeight }\n\n      const padding = this.parsedPadding\n\n      return {\n        minX: padding,\n        maxX: this.totalWidth - padding,\n        minY: padding,\n        maxY: this.parsedHeight - padding,\n      }\n    },\n    hasLabels (): boolean {\n      return Boolean(\n        this.showLabels ||\n        this.labels.length > 0 ||\n        this.$scopedSlots.label\n      )\n    },\n    parsedLabels (): SparklineText[] {\n      const labels = []\n      const points = this._values\n      const len = points.length\n\n      for (let i = 0; labels.length < len; i++) {\n        const item = points[i]\n        let value = this.labels[i]\n\n        if (!value) {\n          value = typeof item === 'object'\n            ? item.value\n            : item\n        }\n\n        labels.push({\n          x: item.x,\n          value: String(value),\n        })\n      }\n\n      return labels\n    },\n    normalizedValues (): number[] {\n      return this.value.map(item => (typeof item === 'number' ? item : item.value))\n    },\n    _values (): Point[] | Bar[] {\n      return this.type === 'trend' ? genPoints(this.normalizedValues, this.boundary) : genBars(this.normalizedValues, this.boundary)\n    },\n    textY (): number {\n      let y = this.parsedHeight\n      if (this.type === 'trend') y -= 4\n      return y\n    },\n    _radius (): number {\n      return this.smooth === true ? 8 : Number(this.smooth)\n    },\n  },\n\n  watch: {\n    value: {\n      immediate: true,\n      handler () {\n        this.$nextTick(() => {\n          if (\n            !this.autoDraw ||\n            this.type === 'bar' ||\n            !this.$refs.path\n          ) return\n\n          const path = this.$refs.path\n          const length = path.getTotalLength()\n\n          if (!this.fill) {\n            path.style.transition = 'none'\n            path.style.strokeDasharray = length + ' ' + length\n            path.style.strokeDashoffset = Math.abs(length - (this.lastLength || 0)).toString()\n            path.getBoundingClientRect()\n            path.style.transition = `stroke-dashoffset ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.strokeDashoffset = '0'\n          } else {\n            path.style.transformOrigin = 'bottom center'\n            path.style.transition = 'none'\n            path.style.transform = `scaleY(0)`\n            path.getBoundingClientRect()\n            path.style.transition = `transform ${this.autoDrawDuration}ms ${this.autoDrawEasing}`\n            path.style.transform = `scaleY(1)`\n          }\n          this.lastLength = length\n        })\n      },\n    },\n  },\n\n  methods: {\n    genGradient () {\n      const gradientDirection = this.gradientDirection\n      const gradient = this.gradient.slice()\n\n      // Pushes empty string to force\n      // a fallback to currentColor\n      if (!gradient.length) gradient.push('')\n\n      const len = Math.max(gradient.length - 1, 1)\n      const stops = gradient.reverse().map((color, index) =>\n        this.$createElement('stop', {\n          attrs: {\n            offset: index / len,\n            'stop-color': color || 'currentColor',\n          },\n        })\n      )\n\n      return this.$createElement('defs', [\n        this.$createElement('linearGradient', {\n          attrs: {\n            id: this._uid,\n            gradientUnits: 'userSpaceOnUse',\n            x1: gradientDirection === 'left' ? '100%' : '0',\n            y1: gradientDirection === 'top' ? '100%' : '0',\n            x2: gradientDirection === 'right' ? '100%' : '0',\n            y2: gradientDirection === 'bottom' ? '100%' : '0',\n          },\n        }, stops),\n      ])\n    },\n    genG (children: VNode[]) {\n      return this.$createElement('g', {\n        style: {\n          fontSize: '8',\n          textAnchor: 'middle',\n          dominantBaseline: 'mathematical',\n          fill: 'currentColor',\n        } as object, // TODO: TS 3.5 is too eager with the array type here\n      }, children)\n    },\n    genPath () {\n      const points = genPoints(this.normalizedValues, this.boundary)\n\n      return this.$createElement('path', {\n        attrs: {\n          d: genPath(points, this._radius, this.fill, this.parsedHeight),\n          fill: this.fill ? `url(#${this._uid})` : 'none',\n          stroke: this.fill ? 'none' : `url(#${this._uid})`,\n        },\n        ref: 'path',\n      })\n    },\n    genLabels (offsetX: number) {\n      const children = this.parsedLabels.map((item, i) => (\n        this.$createElement('text', {\n          attrs: {\n            x: item.x + offsetX + this._lineWidth / 2,\n            y: this.textY + (this.parsedLabelSize * 0.75),\n            'font-size': Number(this.labelSize) || 7,\n          },\n        }, [this.genLabel(item, i)])\n      ))\n\n      return this.genG(children)\n    },\n    genLabel (item: SparklineText, index: number) {\n      return this.$scopedSlots.label\n        ? this.$scopedSlots.label({ index, value: item.value })\n        : item.value\n    },\n    genBars () {\n      if (!this.value || this.totalValues < 2) return undefined as never\n\n      const bars = genBars(this.normalizedValues, this.boundary)\n      const offsetX = (Math.abs(bars[0].x - bars[1].x) - this._lineWidth) / 2\n\n      return this.$createElement('svg', {\n        attrs: {\n          display: 'block',\n          viewBox: `0 0 ${this.totalWidth} ${this.totalHeight}`,\n        },\n      }, [\n        this.genGradient(),\n        this.genClipPath(bars, offsetX, this._lineWidth, 'sparkline-bar-' + this._uid),\n        this.hasLabels ? this.genLabels(offsetX) : undefined as never,\n        this.$createElement('g', {\n          attrs: {\n            'clip-path': `url(#sparkline-bar-${this._uid}-clip)`,\n            fill: `url(#${this._uid})`,\n          },\n        }, [\n          this.$createElement('rect', {\n            attrs: {\n              x: 0,\n              y: 0,\n              width: this.totalWidth,\n              height: this.height,\n            },\n          }),\n        ]),\n      ])\n    },\n    genClipPath (bars: Bar[], offsetX: number, lineWidth: number, id: string) {\n      const rounding = typeof this.smooth === 'number'\n        ? this.smooth\n        : this.smooth ? 2 : 0\n\n      return this.$createElement('clipPath', {\n        attrs: {\n          id: `${id}-clip`,\n        },\n      }, bars.map(item => {\n        return this.$createElement('rect', {\n          attrs: {\n            x: item.x + offsetX,\n            y: item.y,\n            width: lineWidth,\n            height: item.height,\n            rx: rounding,\n            ry: rounding,\n          },\n        }, [\n          this.autoDraw ? this.$createElement('animate', {\n            attrs: {\n              attributeName: 'height',\n              from: 0,\n              to: item.height,\n              dur: `${this.autoDrawDuration}ms`,\n              fill: 'freeze',\n            },\n          }) : undefined as never,\n        ])\n      }))\n    },\n    genTrend () {\n      return this.$createElement('svg', this.setTextColor(this.color, {\n        attrs: {\n          ...this.$attrs,\n          display: 'block',\n          'stroke-width': this._lineWidth || 1,\n          viewBox: `0 0 ${this.width} ${this.totalHeight}`,\n        },\n      }), [\n        this.genGradient(),\n        this.hasLabels && this.genLabels(-(this._lineWidth / 2)),\n        this.genPath(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    if (this.totalValues < 2) return undefined as never\n\n    return this.type === 'trend' ? this.genTrend() : this.genBars()\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _groupable = require(\"../../mixins/groupable\");\n\nvar _registrable = require(\"../../mixins/registrable\");\n\nvar _helpers = require(\"../../util/helpers\");\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar _default = (0, _mixins.default)((0, _groupable.factory)('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'), (0, _registrable.provide)('expansionPanel', true)\n/* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n  props: {\n    disabled: Boolean,\n    readonly: Boolean\n  },\n  data: function data() {\n    return {\n      content: null,\n      header: null,\n      nextIsActive: false\n    };\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled\n      }, this.groupClasses);\n    },\n    isDisabled: function isDisabled() {\n      return this.expansionPanels.disabled || this.disabled;\n    },\n    isReadonly: function isReadonly() {\n      return this.expansionPanels.readonly || this.readonly;\n    }\n  },\n  methods: {\n    registerContent: function registerContent(vm) {\n      this.content = vm;\n    },\n    unregisterContent: function unregisterContent() {\n      this.content = null;\n    },\n    registerHeader: function registerHeader(vm) {\n      this.header = vm;\n      vm.$on('click', this.onClick);\n    },\n    unregisterHeader: function unregisterHeader() {\n      this.header = null;\n    },\n    onClick: function onClick(e) {\n      if (e.detail) this.header.$el.blur();\n      this.$emit('click', e);\n      this.isReadonly || this.isDisabled || this.toggle();\n    },\n    toggle: function toggle() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        return _this.$emit('change');\n      });\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive)\n      }\n    }, (0, _helpers.getSlot)(this));\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;AAGA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAQe,qBACb,wBAA6D,iBAA7D,EAAgF,mBAAhF,EAAqG,oBAArG,CADa,EAEb,0BAAmB,gBAAnB,EAAqC,IAArC;AACA;AAHa,EAIbA,MAJa,CAIN;EACPC,IAAI,EAAE,mBADC;EAGPC,KAAK,EAAE;IACLC,QAAQ,EAAEC,OADL;IAELC,QAAQ,EAAED;EAFL,CAHA;EAQPE,IARO,kBAQH;IACF,OAAO;MACLC,OAAO,EAAE,IADJ;MAELC,MAAM,EAAE,IAFH;MAGLC,YAAY,EAAE;IAHT,CAAP;EATK;EAgBPC,QAAQ,EAAE;IACRC,OADQ,qBACD;MACL;QACE,6BAA6B,KAAKC,QADpC;QAEE,kCAAkC,KAAKH,YAFzC;QAGE,+BAA+B,KAAKI;MAHtC,GAIK,KAAKC,YAJV;IAFM;IASRD,UATQ,wBASE;MACR,OAAO,KAAKE,eAAL,CAAqBZ,QAArB,IAAiC,KAAKA,QAA7C;IAVM;IAYRa,UAZQ,wBAYE;MACR,OAAO,KAAKD,eAAL,CAAqBV,QAArB,IAAiC,KAAKA,QAA7C;IACD;EAdO,CAhBH;EAiCPY,OAAO,EAAE;IACPC,eADO,2BACUC,EADV,EAC4C;MACjD,KAAKZ,OAAL,GAAeY,EAAf;IAFK;IAIPC,iBAJO,+BAIU;MACf,KAAKb,OAAL,GAAe,IAAf;IALK;IAOPc,cAPO,0BAOSF,EAPT,EAO0C;MAC/C,KAAKX,MAAL,GAAcW,EAAd;MACAA,EAAE,CAACG,GAAH,CAAO,OAAP,EAAgB,KAAKC,OAArB;IATK;IAWPC,gBAXO,8BAWS;MACd,KAAKhB,MAAL,GAAc,IAAd;IAZK;IAcPe,OAdO,mBAcEE,CAdF,EAce;MACpB,IAAIA,CAAC,CAACC,MAAN,EAAc,KAAKlB,MAAL,CAAamB,GAAb,CAAiBC,IAAjB;MAEd,KAAKC,KAAL,CAAW,OAAX,EAAoBJ,CAApB;MAEA,KAAKT,UAAL,IAAmB,KAAKH,UAAxB,IAAsC,KAAKiB,MAAL,EAAtC;IAnBK;IAqBPA,MArBO,oBAqBD;MAAA;;MACJ,KAAKC,SAAL,CAAe;QAAA,OAAMC,KAAI,CAACH,KAAL,CAAW,QAAX,CAAN;MAAf;IACD;EAvBM,CAjCF;EA2DPI,MA3DO,kBA2DCC,CA3DD,EA2DE;IACP,OAAOA,CAAC,CAAC,KAAD,EAAQ;MACdC,WAAW,EAAE,mBADC;MAEdC,KAAK,EAAE,KAAKzB,OAFE;MAGd0B,KAAK,EAAE;QACL,iBAAiBC,MAAM,CAAC,KAAK1B,QAAN;MADlB;IAHO,CAAR,EAML,sBAAQ,IAAR,CANK,CAAR;EAOD;AAnEM,CAJM","names":["extend","name","props","disabled","Boolean","readonly","data","content","header","nextIsActive","computed","classes","isActive","isDisabled","groupClasses","expansionPanels","isReadonly","methods","registerContent","vm","unregisterContent","registerHeader","$on","onClick","unregisterHeader","e","detail","$el","blur","$emit","toggle","$nextTick","_this","render","h","staticClass","class","attrs","String"],"sourceRoot":"","sources":["../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"sourcesContent":["// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
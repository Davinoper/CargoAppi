{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\n\nfunction makeWatcher(property) {\n  return function (val, oldVal) {\n    for (var attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr);\n      }\n    }\n\n    for (var _attr in val) {\n      this.$set(this.$data[property], _attr, val[_attr]);\n    }\n  };\n}\n\nvar _default = _vue.default.extend({\n  data: function data() {\n    return {\n      attrs$: {},\n      listeners$: {}\n    };\n  },\n  created: function created() {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), {\n      immediate: true\n    });\n    this.$watch('$listeners', makeWatcher('listeners$'), {\n      immediate: true\n    });\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;;;;;;AAEA;;;AAGG;;;AAEH,SAASA,WAAT,CAAsBC,QAAtB,EAAsC;EACpC,OAAO,UAAqBC,GAArB,EAA0BC,MAA1B,EAAgC;IACrC,KAAK,IAAMC,IAAX,IAAmBD,MAAnB,EAA2B;MACzB,IAAI,CAACE,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,GAArC,EAA0CE,IAA1C,CAAL,EAAsD;QACpD,KAAKK,OAAL,CAAa,KAAKC,KAAL,CAAWT,QAAX,CAAb,EAAmCG,IAAnC;MACD;IACF;;IACD,KAAK,IAAMO,KAAX,IAAmBT,GAAnB,EAAwB;MACtB,KAAKU,IAAL,CAAU,KAAKF,KAAL,CAAWT,QAAX,CAAV,EAAgCU,KAAhC,EAAsCT,GAAG,CAACS,KAAD,CAAzC;IACD;EARH;AAUD;;eAEcE,aAAIC,MAAJ,CAAW;EACxBC,IAAI,EAAE;IAAA,OAAO;MACXC,MAAM,EAAE,EADG;MAEXC,UAAU,EAAE;IAFD,CAAP;EADkB;EAMxBC,OANwB,qBAMjB;IACL;IACA;IACA,KAAKC,MAAL,CAAY,QAAZ,EAAsBnB,WAAW,CAAC,QAAD,CAAjC,EAA6C;MAAEoB,SAAS,EAAE;IAAb,CAA7C;IACA,KAAKD,MAAL,CAAY,YAAZ,EAA0BnB,WAAW,CAAC,YAAD,CAArC,EAAqD;MAAEoB,SAAS,EAAE;IAAb,CAArD;EACD;AAXuB,CAAX","names":["makeWatcher","property","val","oldVal","attr","Object","prototype","hasOwnProperty","call","$delete","$data","_attr","$set","_vue","extend","data","attrs$","listeners$","created","$watch","immediate"],"sourceRoot":"","sources":["../../../src/mixins/binds-attrs/index.ts"],"sourcesContent":["import Vue, { WatchHandler } from 'vue'\n\n/**\n * This mixin provides `attrs$` and `listeners$` to work around\n * vue bug https://github.com/vuejs/vue/issues/10115\n */\n\nfunction makeWatcher (property: string): ThisType<Vue> & WatchHandler<any> {\n  return function (this: Vue, val, oldVal) {\n    for (const attr in oldVal) {\n      if (!Object.prototype.hasOwnProperty.call(val, attr)) {\n        this.$delete(this.$data[property], attr)\n      }\n    }\n    for (const attr in val) {\n      this.$set(this.$data[property], attr, val[attr])\n    }\n  }\n}\n\nexport default Vue.extend({\n  data: () => ({\n    attrs$: {} as Dictionary<string>,\n    listeners$: {} as Dictionary<Function | Function[]>,\n  }),\n\n  created () {\n    // Work around unwanted re-renders: https://github.com/vuejs/vue/issues/10115\n    // Make sure to use `attrs$` instead of `$attrs` (confusing right?)\n    this.$watch('$attrs', makeWatcher('attrs$'), { immediate: true })\n    this.$watch('$listeners', makeWatcher('listeners$'), { immediate: true })\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VChipGroup/VChipGroup.sass\");\n\nvar _VSlideGroup = require(\"../VSlideGroup/VSlideGroup\");\n\nvar _colorable = _interopRequireDefault(require(\"../../mixins/colorable\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* @vue/component */\n\n\nvar _default = (0, _mixins.default)(_VSlideGroup.BaseSlideGroup, _colorable.default).extend({\n  name: 'v-chip-group',\n  provide: function provide() {\n    return {\n      chipGroup: this\n    };\n  },\n  props: {\n    column: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, _VSlideGroup.BaseSlideGroup.options.computed.classes.call(this)), {}, {\n        'v-chip-group': true,\n        'v-chip-group--column': this.column\n      });\n    }\n  },\n  watch: {\n    column: function column(val) {\n      if (val) this.scrollOffset = 0;\n      this.$nextTick(this.onResize);\n    }\n  },\n  methods: {\n    genData: function genData() {\n      return this.setTextColor(this.color, _objectSpread({}, _VSlideGroup.BaseSlideGroup.options.methods.genData.call(this)));\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;AACAA;;AAGA;;AAGA;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;eACe,qBACbC,2BADa,EAEbC,kBAFa,EAGbC,MAHa,CAGN;EACPC,IAAI,EAAE,cADC;EAGPC,OAHO,qBAGA;IACL,OAAO;MACLC,SAAS,EAAE;IADN,CAAP;EAJK;EASPC,KAAK,EAAE;IACLC,MAAM,EAAEC;EADH,CATA;EAaPC,QAAQ,EAAE;IACRC,OADQ,qBACD;MACL,uCACKV,4BAAeW,OAAf,CAAuBF,QAAvB,CAAgCC,OAAhC,CAAwCE,IAAxC,CAA6C,IAA7C,CADL;QAEE,gBAAgB,IAFlB;QAGE,wBAAwB,KAAKL;MAH/B;IAKD;EAPO,CAbH;EAuBPM,KAAK,EAAE;IACLN,MADK,kBACGO,GADH,EACM;MACT,IAAIA,GAAJ,EAAS,KAAKC,YAAL,GAAoB,CAApB;MAET,KAAKC,SAAL,CAAe,KAAKC,QAApB;IACD;EALI,CAvBA;EA+BPC,OAAO,EAAE;IACPC,OADO,qBACA;MACL,OAAO,KAAKC,YAAL,CAAkB,KAAKC,KAAvB,oBACFrB,4BAAeW,OAAf,CAAuBO,OAAvB,CAA+BC,OAA/B,CAAuCP,IAAvC,CAA4C,IAA5C,CADE,EAAP;IAGD;EALM;AA/BF,CAHM","names":["require","_VSlideGroup","_colorable","extend","name","provide","chipGroup","props","column","Boolean","computed","classes","options","call","watch","val","scrollOffset","$nextTick","onResize","methods","genData","setTextColor","color"],"sourceRoot":"","sources":["../../../src/components/VChipGroup/VChipGroup.ts"],"sourcesContent":["// Styles\nimport './VChipGroup.sass'\n\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  BaseSlideGroup,\n  Colorable\n).extend({\n  name: 'v-chip-group',\n\n  provide () {\n    return {\n      chipGroup: this,\n    }\n  },\n\n  props: {\n    column: Boolean,\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column,\n      }\n    },\n  },\n\n  watch: {\n    column (val) {\n      if (val) this.scrollOffset = 0\n\n      this.$nextTick(this.onResize)\n    },\n  },\n\n  methods: {\n    genData () {\n      return this.setTextColor(this.color, {\n        ...BaseSlideGroup.options.methods.genData.call(this),\n      })\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
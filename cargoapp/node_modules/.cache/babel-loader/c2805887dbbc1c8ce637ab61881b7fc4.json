{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.factory = factory;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction factory() {\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'change';\n  return _vue.default.extend({\n    name: 'proxyable',\n    model: {\n      prop: prop,\n      event: event\n    },\n    props: _defineProperty({}, prop, {\n      required: false\n    }),\n    data: function data() {\n      return {\n        internalLazyValue: this[prop]\n      };\n    },\n    computed: {\n      internalValue: {\n        get: function get() {\n          return this.internalLazyValue;\n        },\n        set: function set(val) {\n          if (val === this.internalLazyValue) return;\n          this.internalLazyValue = val;\n          this.$emit(event, val);\n        }\n      }\n    },\n    watch: _defineProperty({}, prop, function (val) {\n      this.internalLazyValue = val;\n    })\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\n\nvar Proxyable = factory();\nvar _default = Proxyable;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAQM,SAAUA,OAAV,GAEY;EAAA,IADhBC,IACgB,uEADT,OACS;EAAA,IAAhBC,KAAgB,uEAAR,QAAQ;EAEhB,OAAOC,aAAIC,MAAJ,CAAW;IAChBC,IAAI,EAAE,WADU;IAGhBC,KAAK,EAAE;MACLL,IAAI,EAAJA,IADK;MAELC,KAAK,EAALA;IAFK,CAHS;IAQhBK,KAAK,sBACFN,IADE,EACK;MACNO,QAAQ,EAAE;IADJ,CADL,CARW;IAchBC,IAdgB,kBAcZ;MACF,OAAO;QACLC,iBAAiB,EAAE,KAAKT,IAAL;MADd,CAAP;IAfc;IAoBhBU,QAAQ,EAAE;MACRC,aAAa,EAAE;QACbC,GADa,iBACV;UACD,OAAO,KAAKH,iBAAZ;QAFW;QAIbI,GAJa,eAIRC,GAJQ,EAIA;UACX,IAAIA,GAAG,KAAK,KAAKL,iBAAjB,EAAoC;UAEpC,KAAKA,iBAAL,GAAyBK,GAAzB;UAEA,KAAKC,KAAL,CAAWd,KAAX,EAAkBa,GAAlB;QACD;MAVY;IADP,CApBM;IAmChBE,KAAK,sBACFhB,IADE,YACKc,GADL,EACQ;MACT,KAAKL,iBAAL,GAAyBK,GAAzB;IAFC;EAnCW,CAAX,CAAP;AAyCD;AAED;;;AACA,IAAMG,SAAS,GAAGlB,OAAO,EAAzB;eAEekB","names":["factory","prop","event","_vue","extend","name","model","props","required","data","internalLazyValue","computed","internalValue","get","set","val","$emit","watch","Proxyable"],"sourceRoot":"","sources":["../../../src/mixins/proxyable/index.ts"],"sourcesContent":["import Vue, { VueConstructor } from 'vue'\n\nexport type Proxyable<T extends string = 'value'> = VueConstructor<Vue & {\n  internalLazyValue: unknown\n  internalValue: unknown\n} & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Proxyable<T>\nexport function factory (\n  prop = 'value',\n  event = 'change'\n) {\n  return Vue.extend({\n    name: 'proxyable',\n\n    model: {\n      prop,\n      event,\n    },\n\n    props: {\n      [prop]: {\n        required: false,\n      },\n    },\n\n    data () {\n      return {\n        internalLazyValue: this[prop] as unknown,\n      }\n    },\n\n    computed: {\n      internalValue: {\n        get (): unknown {\n          return this.internalLazyValue\n        },\n        set (val: any) {\n          if (val === this.internalLazyValue) return\n\n          this.internalLazyValue = val\n\n          this.$emit(event, val)\n        },\n      },\n    },\n\n    watch: {\n      [prop] (val) {\n        this.internalLazyValue = val\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Proxyable = factory()\n\nexport default Proxyable\n"]},"metadata":{},"sourceType":"script"}
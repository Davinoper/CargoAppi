{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\n\n\nvar _default = _vue.default.extend().extend({\n  name: 'delayable',\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      openTimeout: undefined,\n      closeTimeout: undefined\n    };\n  },\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay: function clearDelay() {\n      clearTimeout(this.openTimeout);\n      clearTimeout(this.closeTimeout);\n    },\n\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay: function runDelay(type, cb) {\n      var _this = this;\n\n      this.clearDelay();\n      var delay = parseInt(this[\"\".concat(type, \"Delay\")], 10);\n      this[\"\".concat(type, \"Timeout\")] = setTimeout(cb || function () {\n        _this.isActive = {\n          open: true,\n          close: false\n        }[type];\n      }, delay);\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;;AAAA;;;;;;;AAEA;;;;;;AAMG;;;eACYA,aAAIC,MAAJ,GAA2CA,MAA3C,CAAkD;EAC/DC,IAAI,EAAE,WADyD;EAG/DC,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADG;MAETC,OAAO,EAAE;IAFA,CADN;IAKLC,UAAU,EAAE;MACVJ,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADI;MAEVC,OAAO,EAAE;IAFC;EALP,CAHwD;EAc/DE,IAAI,EAAE;IAAA,OAAO;MACXC,WAAW,EAAEC,SADF;MAEXC,YAAY,EAAED;IAFH,CAAP;EAdyD;EAmB/DE,OAAO,EAAE;IACP;;AAEG;IACHC,UAJO,wBAIG;MACRC,YAAY,CAAC,KAAKL,WAAN,CAAZ;MACAK,YAAY,CAAC,KAAKH,YAAN,CAAZ;IANK;;IAQP;;AAEG;IACHI,QAXO,oBAWGZ,IAXH,EAW2Ba,EAX3B,EAW0C;MAAA;;MAC/C,KAAKH,UAAL;MAEA,IAAMI,KAAK,GAAGC,QAAQ,CAAE,eAAgBf,IAAhB,WAAF,EAAgC,EAAhC,CAAtB;MAEE,eAAgBA,IAAhB,gBAAiCgB,UAAU,CAACH,EAAE,IAAK,YAAK;QACxDI,KAAI,CAACC,QAAL,GAAgB;UAAEC,IAAI,EAAE,IAAR;UAAcC,KAAK,EAAE;QAArB,EAA6BpB,IAA7B,CAAhB;MAD2C,GAEzCc,KAFyC,CAA3C;IAGH;EAnBM;AAnBsD,CAAlD","names":["_vue","extend","name","props","openDelay","type","Number","String","default","closeDelay","data","openTimeout","undefined","closeTimeout","methods","clearDelay","clearTimeout","runDelay","cb","delay","parseInt","setTimeout","_this","isActive","open","close"],"sourceRoot":"","sources":["../../../src/mixins/delayable/index.ts"],"sourcesContent":["import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
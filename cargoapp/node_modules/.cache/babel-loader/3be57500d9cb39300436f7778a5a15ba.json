{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.weak-map.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nrequire(\"core-js/modules/es.reflect.construct.js\");\n\nrequire(\"core-js/modules/es.reflect.to-string-tag.js\");\n\nrequire(\"core-js/modules/es.object.get-prototype-of.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Theme = void 0;\n\nvar _service = require(\"../service\");\n\nvar ThemeUtils = _interopRequireWildcard(require(\"./utils\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nvar Theme = /*#__PURE__*/function (_Service) {\n  _inherits(Theme, _Service);\n\n  var _super = _createSuper(Theme);\n\n  function Theme(preset) {\n    var _this;\n\n    _classCallCheck(this, Theme);\n\n    _this = _super.call(this);\n    _this.disabled = false;\n    _this.isDark = null;\n    _this.unwatch = null;\n    _this.vueMeta = null;\n    var _preset$Theme$propert = preset[Theme.property],\n        dark = _preset$Theme$propert.dark,\n        disable = _preset$Theme$propert.disable,\n        options = _preset$Theme$propert.options,\n        themes = _preset$Theme$propert.themes;\n    _this.dark = Boolean(dark);\n    _this.defaults = _this.themes = themes;\n    _this.options = options;\n\n    if (disable) {\n      _this.disabled = true;\n      return _possibleConstructorReturn(_this);\n    }\n\n    _this.themes = {\n      dark: _this.fillVariant(themes.dark, true),\n      light: _this.fillVariant(themes.light, false)\n    };\n    return _this;\n  } // When setting css, check for element and apply new values\n\n  /* eslint-disable-next-line accessor-pairs */\n\n\n  _createClass(Theme, [{\n    key: \"css\",\n    set: function set(val) {\n      if (this.vueMeta) {\n        if (this.isVueMeta23) {\n          this.applyVueMeta23();\n        }\n\n        return;\n      }\n\n      this.checkOrCreateStyleElement() && (this.styleEl.innerHTML = val);\n    }\n  }, {\n    key: \"dark\",\n    get: function get() {\n      return Boolean(this.isDark);\n    } // Apply current theme default\n    // only called on client side\n    ,\n    set: function set(val) {\n      var oldDark = this.isDark;\n      this.isDark = val; // Only apply theme after dark\n      // has already been set before\n\n      oldDark != null && this.applyTheme();\n    }\n  }, {\n    key: \"applyTheme\",\n    value: function applyTheme() {\n      if (this.disabled) return this.clearCss();\n      this.css = this.generatedStyles;\n    }\n  }, {\n    key: \"clearCss\",\n    value: function clearCss() {\n      this.css = '';\n    } // Initialize theme for SSR and SPA\n    // Attach to ssrContext head or\n    // apply new theme to document\n\n  }, {\n    key: \"init\",\n    value: function init(root, ssrContext) {\n      if (this.disabled) return;\n      /* istanbul ignore else */\n\n      if (root.$meta) {\n        this.initVueMeta(root);\n      } else if (ssrContext) {\n        this.initSSR(ssrContext);\n      }\n\n      this.initTheme(root);\n    } // Allows for you to set target theme\n\n  }, {\n    key: \"setTheme\",\n    value: function setTheme(theme, value) {\n      this.themes[theme] = Object.assign(this.themes[theme], value);\n      this.applyTheme();\n    } // Reset theme defaults\n\n  }, {\n    key: \"resetThemes\",\n    value: function resetThemes() {\n      this.themes.light = Object.assign({}, this.defaults.light);\n      this.themes.dark = Object.assign({}, this.defaults.dark);\n      this.applyTheme();\n    } // Check for existence of style element\n\n  }, {\n    key: \"checkOrCreateStyleElement\",\n    value: function checkOrCreateStyleElement() {\n      this.styleEl = document.getElementById('vuetify-theme-stylesheet');\n      /* istanbul ignore next */\n\n      if (this.styleEl) return true;\n      this.genStyleElement(); // If doesn't have it, create it\n\n      return Boolean(this.styleEl);\n    }\n  }, {\n    key: \"fillVariant\",\n    value: function fillVariant() {\n      var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var dark = arguments.length > 1 ? arguments[1] : undefined;\n      var defaultTheme = this.themes[dark ? 'dark' : 'light'];\n      return Object.assign({}, defaultTheme, theme);\n    } // Generate the style element\n    // if applicable\n\n  }, {\n    key: \"genStyleElement\",\n    value: function genStyleElement() {\n      /* istanbul ignore if */\n      if (typeof document === 'undefined') return;\n      /* istanbul ignore next */\n\n      this.styleEl = document.createElement('style');\n      this.styleEl.type = 'text/css';\n      this.styleEl.id = 'vuetify-theme-stylesheet';\n\n      if (this.options.cspNonce) {\n        this.styleEl.setAttribute('nonce', this.options.cspNonce);\n      }\n\n      document.head.appendChild(this.styleEl);\n    }\n  }, {\n    key: \"initVueMeta\",\n    value: function initVueMeta(root) {\n      var _this2 = this;\n\n      this.vueMeta = root.$meta();\n\n      if (this.isVueMeta23) {\n        // vue-meta needs to apply after mounted()\n        root.$nextTick(function () {\n          _this2.applyVueMeta23();\n        });\n        return;\n      }\n\n      var metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo';\n      var metaInfo = root.$options[metaKeyName] || {};\n\n      root.$options[metaKeyName] = function () {\n        metaInfo.style = metaInfo.style || [];\n        var vuetifyStylesheet = metaInfo.style.find(function (s) {\n          return s.id === 'vuetify-theme-stylesheet';\n        });\n\n        if (!vuetifyStylesheet) {\n          metaInfo.style.push({\n            cssText: _this2.generatedStyles,\n            type: 'text/css',\n            id: 'vuetify-theme-stylesheet',\n            nonce: (_this2.options || {}).cspNonce\n          });\n        } else {\n          vuetifyStylesheet.cssText = _this2.generatedStyles;\n        }\n\n        return metaInfo;\n      };\n    }\n  }, {\n    key: \"applyVueMeta23\",\n    value: function applyVueMeta23() {\n      var _this$vueMeta$addApp = this.vueMeta.addApp('vuetify'),\n          set = _this$vueMeta$addApp.set;\n\n      set({\n        style: [{\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: this.options.cspNonce\n        }]\n      });\n    }\n  }, {\n    key: \"initSSR\",\n    value: function initSSR(ssrContext) {\n      // SSR\n      var nonce = this.options.cspNonce ? \" nonce=\\\"\".concat(this.options.cspNonce, \"\\\"\") : '';\n      ssrContext.head = ssrContext.head || '';\n      ssrContext.head += \"<style type=\\\"text/css\\\" id=\\\"vuetify-theme-stylesheet\\\"\".concat(nonce, \">\").concat(this.generatedStyles, \"</style>\");\n    }\n  }, {\n    key: \"initTheme\",\n    value: function initTheme(root) {\n      var _this3 = this; // Only watch for reactivity on client side\n\n\n      if (typeof document === 'undefined') return; // If we get here somehow, ensure\n      // existing instance is removed\n\n      if (this.unwatch) {\n        this.unwatch();\n        this.unwatch = null;\n      } // TODO: Update to use RFC if merged\n      // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n\n\n      root.$once('hook:created', function () {\n        var obs = _vue.default.observable({\n          themes: _this3.themes\n        });\n\n        _this3.unwatch = root.$watch(function () {\n          return obs.themes;\n        }, function () {\n          return _this3.applyTheme();\n        }, {\n          deep: true\n        });\n      });\n      this.applyTheme();\n    }\n  }, {\n    key: \"currentTheme\",\n    get: function get() {\n      var target = this.dark ? 'dark' : 'light';\n      return this.themes[target];\n    }\n  }, {\n    key: \"generatedStyles\",\n    get: function get() {\n      var theme = this.parsedTheme;\n      /* istanbul ignore next */\n\n      var options = this.options || {};\n      var css;\n\n      if (options.themeCache != null) {\n        css = options.themeCache.get(theme);\n        /* istanbul ignore if */\n\n        if (css != null) return css;\n      }\n\n      css = ThemeUtils.genStyles(theme, options.customProperties);\n\n      if (options.minifyTheme != null) {\n        css = options.minifyTheme(css);\n      }\n\n      if (options.themeCache != null) {\n        options.themeCache.set(theme, css);\n      }\n\n      return css;\n    }\n  }, {\n    key: \"parsedTheme\",\n    get: function get() {\n      return ThemeUtils.parse(this.currentTheme || {}, undefined, (0, _helpers.getNestedValue)(this.options, ['variations'], true));\n    } // Is using v2.3 of vue-meta\n    // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n\n  }, {\n    key: \"isVueMeta23\",\n    get: function get() {\n      return typeof this.vueMeta.addApp === 'function';\n    }\n  }]);\n\n  return Theme;\n}(_service.Service);\n\nexports.Theme = Theme;\nTheme.property = 'theme';","map":{"version":3,"mappings":"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","names":["Theme","preset","_classCallCheck","_this","property","dark","disable","options","themes","Boolean","defaults","disabled","fillVariant","light","val","vueMeta","isVueMeta23","applyVueMeta23","checkOrCreateStyleElement","styleEl","innerHTML","isDark","oldDark","applyTheme","clearCss","css","generatedStyles","root","ssrContext","$meta","initVueMeta","initSSR","initTheme","theme","value","Object","assign","document","getElementById","genStyleElement","defaultTheme","createElement","type","id","cspNonce","setAttribute","head","appendChild","$nextTick","_this2","metaKeyName","getOptions","keyName","metaInfo","$options","style","vuetifyStylesheet","find","s","push","cssText","nonce","addApp","set","unwatch","$once","obs","_vue","observable","_this3","$watch","deep","target","parsedTheme","themeCache","get","ThemeUtils","genStyles","customProperties","minifyTheme","parse","currentTheme","undefined","_service"],"sourceRoot":"","sources":["../../../src/services/theme/index.ts"],"sourcesContent":["/* eslint-disable no-multi-spaces */\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport * as ThemeUtils from './utils'\nimport { getNestedValue } from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyParsedTheme,\n  VuetifyThemes,\n  VuetifyThemeVariant,\n  Theme as ITheme,\n} from 'vuetify/types/services/theme'\n\nexport class Theme extends Service {\n  static property: 'theme' = 'theme'\n\n  public disabled = false\n\n  public options: ITheme['options']\n\n  public styleEl?: HTMLStyleElement\n\n  public themes: VuetifyThemes\n\n  public defaults: VuetifyThemes\n\n  private isDark = null as boolean | null\n\n  private unwatch = null as (() => void) | null\n\n  private vueMeta = null as any | null\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      dark,\n      disable,\n      options,\n      themes,\n    } = preset[Theme.property]\n\n    this.dark = Boolean(dark)\n    this.defaults = this.themes = themes\n    this.options = options\n\n    if (disable) {\n      this.disabled = true\n\n      return\n    }\n\n    this.themes = {\n      dark: this.fillVariant(themes.dark, true),\n      light: this.fillVariant(themes.light, false),\n    }\n  }\n\n  // When setting css, check for element and apply new values\n  /* eslint-disable-next-line accessor-pairs */\n  set css (val: string) {\n    if (this.vueMeta) {\n      if (this.isVueMeta23) {\n        this.applyVueMeta23()\n      }\n      return\n    }\n    this.checkOrCreateStyleElement() && (this.styleEl!.innerHTML = val)\n  }\n\n  set dark (val: boolean) {\n    const oldDark = this.isDark\n\n    this.isDark = val\n    // Only apply theme after dark\n    // has already been set before\n    oldDark != null && this.applyTheme()\n  }\n\n  get dark () {\n    return Boolean(this.isDark)\n  }\n\n  // Apply current theme default\n  // only called on client side\n  public applyTheme (): void {\n    if (this.disabled) return this.clearCss()\n\n    this.css = this.generatedStyles\n  }\n\n  public clearCss (): void {\n    this.css = ''\n  }\n\n  // Initialize theme for SSR and SPA\n  // Attach to ssrContext head or\n  // apply new theme to document\n  public init (root: Vue, ssrContext?: any): void {\n    if (this.disabled) return\n\n    /* istanbul ignore else */\n    if ((root as any).$meta) {\n      this.initVueMeta(root)\n    } else if (ssrContext) {\n      this.initSSR(ssrContext)\n    }\n\n    this.initTheme(root)\n  }\n\n  // Allows for you to set target theme\n  public setTheme (theme: 'light' | 'dark', value: object) {\n    this.themes[theme] = Object.assign(this.themes[theme], value)\n    this.applyTheme()\n  }\n\n  // Reset theme defaults\n  public resetThemes () {\n    this.themes.light = Object.assign({}, this.defaults.light)\n    this.themes.dark = Object.assign({}, this.defaults.dark)\n    this.applyTheme()\n  }\n\n  // Check for existence of style element\n  private checkOrCreateStyleElement (): boolean {\n    this.styleEl = document.getElementById('vuetify-theme-stylesheet') as HTMLStyleElement\n\n    /* istanbul ignore next */\n    if (this.styleEl) return true\n\n    this.genStyleElement() // If doesn't have it, create it\n\n    return Boolean(this.styleEl)\n  }\n\n  private fillVariant (\n    theme: Partial<VuetifyThemeVariant> = {},\n    dark: boolean\n  ): VuetifyThemeVariant {\n    const defaultTheme = this.themes[dark ? 'dark' : 'light']\n\n    return Object.assign({},\n      defaultTheme,\n      theme\n    )\n  }\n\n  // Generate the style element\n  // if applicable\n  private genStyleElement (): void {\n    /* istanbul ignore if */\n    if (typeof document === 'undefined') return\n\n    /* istanbul ignore next */\n    this.styleEl = document.createElement('style')\n    this.styleEl.type = 'text/css'\n    this.styleEl.id = 'vuetify-theme-stylesheet'\n\n    if (this.options.cspNonce) {\n      this.styleEl.setAttribute('nonce', this.options.cspNonce)\n    }\n\n    document.head.appendChild(this.styleEl)\n  }\n\n  private initVueMeta (root: any) {\n    this.vueMeta = root.$meta()\n    if (this.isVueMeta23) {\n      // vue-meta needs to apply after mounted()\n      root.$nextTick(() => {\n        this.applyVueMeta23()\n      })\n      return\n    }\n\n    const metaKeyName = typeof this.vueMeta.getOptions === 'function' ? this.vueMeta.getOptions().keyName : 'metaInfo'\n    const metaInfo = root.$options[metaKeyName] || {}\n\n    root.$options[metaKeyName] = () => {\n      metaInfo.style = metaInfo.style || []\n\n      const vuetifyStylesheet = metaInfo.style.find((s: any) => s.id === 'vuetify-theme-stylesheet')\n\n      if (!vuetifyStylesheet) {\n        metaInfo.style.push({\n          cssText: this.generatedStyles,\n          type: 'text/css',\n          id: 'vuetify-theme-stylesheet',\n          nonce: (this.options || {}).cspNonce,\n        })\n      } else {\n        vuetifyStylesheet.cssText = this.generatedStyles\n      }\n\n      return metaInfo\n    }\n  }\n\n  private applyVueMeta23 () {\n    const { set } = this.vueMeta.addApp('vuetify')\n\n    set({\n      style: [{\n        cssText: this.generatedStyles,\n        type: 'text/css',\n        id: 'vuetify-theme-stylesheet',\n        nonce: this.options.cspNonce,\n      }],\n    })\n  }\n\n  private initSSR (ssrContext?: any) {\n    // SSR\n    const nonce = this.options.cspNonce ? ` nonce=\"${this.options.cspNonce}\"` : ''\n    ssrContext.head = ssrContext.head || ''\n    ssrContext.head += `<style type=\"text/css\" id=\"vuetify-theme-stylesheet\"${nonce}>${this.generatedStyles}</style>`\n  }\n\n  private initTheme (root: Vue) {\n    // Only watch for reactivity on client side\n    if (typeof document === 'undefined') return\n\n    // If we get here somehow, ensure\n    // existing instance is removed\n    if (this.unwatch) {\n      this.unwatch()\n      this.unwatch = null\n    }\n\n    // TODO: Update to use RFC if merged\n    // https://github.com/vuejs/rfcs/blob/advanced-reactivity-api/active-rfcs/0000-advanced-reactivity-api.md\n    root.$once('hook:created', () => {\n      const obs = Vue.observable({ themes: this.themes })\n      this.unwatch = root.$watch(() => obs.themes, () => this.applyTheme(), { deep: true })\n    })\n    this.applyTheme()\n  }\n\n  get currentTheme () {\n    const target = this.dark ? 'dark' : 'light'\n\n    return this.themes[target]\n  }\n\n  get generatedStyles (): string {\n    const theme = this.parsedTheme\n    /* istanbul ignore next */\n    const options = this.options || {}\n    let css\n\n    if (options.themeCache != null) {\n      css = options.themeCache.get(theme)\n      /* istanbul ignore if */\n      if (css != null) return css\n    }\n\n    css = ThemeUtils.genStyles(theme, options.customProperties)\n\n    if (options.minifyTheme != null) {\n      css = options.minifyTheme(css)\n    }\n\n    if (options.themeCache != null) {\n      options.themeCache.set(theme, css)\n    }\n\n    return css\n  }\n\n  get parsedTheme (): VuetifyParsedTheme {\n    return ThemeUtils.parse(\n      this.currentTheme || {},\n      undefined,\n      getNestedValue(this.options, ['variations'], true)\n    )\n  }\n\n  // Is using v2.3 of vue-meta\n  // https://github.com/nuxt/vue-meta/releases/tag/v2.3.0\n  private get isVueMeta23 (): boolean {\n    return typeof this.vueMeta.addApp === 'function'\n  }\n}\n"]},"metadata":{},"sourceType":"script"}
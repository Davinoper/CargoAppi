{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nrequire(\"core-js/modules/es.array.find.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VOverflowBtn/VOverflowBtn.sass\");\n\nvar _VSelect = _interopRequireDefault(require(\"../VSelect/VSelect\"));\n\nvar _VAutocomplete = _interopRequireDefault(require(\"../VAutocomplete\"));\n\nvar _VTextField = _interopRequireDefault(require(\"../VTextField/VTextField\"));\n\nvar _VBtn = _interopRequireDefault(require(\"../VBtn\"));\n\nvar _console = require(\"../../util/console\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* @vue/component */\n\n\nvar _default = _VAutocomplete.default.extend({\n  name: 'v-overflow-btn',\n  props: {\n    editable: Boolean,\n    segmented: Boolean\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread(_objectSpread({}, _VAutocomplete.default.options.computed.classes.call(this)), {}, {\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable\n      });\n    },\n    isAnyValueAllowed: function isAnyValueAllowed() {\n      return this.editable || _VAutocomplete.default.options.computed.isAnyValueAllowed.call(this);\n    },\n    isSingle: function isSingle() {\n      return true;\n    },\n    computedItems: function computedItems() {\n      return this.segmented ? this.allItems : this.filteredItems;\n    }\n  },\n  methods: {\n    genSelections: function genSelections() {\n      return this.editable ? _VAutocomplete.default.options.methods.genSelections.call(this) : _VSelect.default.options.methods.genSelections.call(this); // Override v-autocomplete's override\n    },\n    genCommaSelection: function genCommaSelection(item, index, last) {\n      return this.segmented ? this.genSegmentedBtn(item) : _VSelect.default.options.methods.genCommaSelection.call(this, item, index, last);\n    },\n    genInput: function genInput() {\n      var input = _VTextField.default.options.methods.genInput.call(this);\n\n      input.data = input.data || {};\n      input.data.domProps.value = this.editable ? this.internalSearch : '';\n      input.data.attrs.readonly = !this.isAnyValueAllowed;\n      return input;\n    },\n    genLabel: function genLabel() {\n      if (this.editable && this.isFocused) return null;\n\n      var label = _VTextField.default.options.methods.genLabel.call(this);\n\n      if (!label) return label;\n      label.data = label.data || {}; // Reset previously set styles from parent\n\n      label.data.style = {};\n      return label;\n    },\n    genSegmentedBtn: function genSegmentedBtn(item) {\n      var _this = this;\n\n      var itemValue = this.getValue(item);\n      var itemObj = this.computedItems.find(function (i) {\n        return _this.getValue(i) === itemValue;\n      }) || item;\n\n      if (!itemObj.text || !itemObj.callback) {\n        (0, _console.consoleWarn)('When using \"segmented\" prop without a selection slot, items must contain both a text and callback property', this);\n        return null;\n      }\n\n      return this.$createElement(_VBtn.default, {\n        props: {\n          text: true\n        },\n        on: {\n          click: function click(e) {\n            e.stopPropagation();\n            itemObj.callback(e);\n          }\n        }\n      }, [itemObj.text]);\n    },\n    updateValue: function updateValue(val) {\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["require","_VAutocomplete","extend","name","props","editable","Boolean","segmented","computed","classes","options","call","isAnyValueAllowed","isSingle","computedItems","allItems","filteredItems","methods","genSelections","_VSelect","genCommaSelection","item","index","last","genSegmentedBtn","genInput","input","_VTextField","data","domProps","value","internalSearch","attrs","readonly","genLabel","isFocused","label","style","itemValue","getValue","itemObj","find","_this","i","text","callback","$createElement","_VBtn","on","click","e","stopPropagation","updateValue","val","initialValue","lazyValue","$emit"],"sourceRoot":"","sources":["../../../src/components/VOverflowBtn/VOverflowBtn.ts"],"sourcesContent":["// Styles\nimport './VOverflowBtn.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete'\nimport VTextField from '../VTextField/VTextField'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n\n  props: {\n    editable: Boolean,\n    segmented: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable,\n      }\n    },\n    isAnyValueAllowed (): boolean {\n      return this.editable ||\n        VAutocomplete.options.computed.isAnyValueAllowed.call(this)\n    },\n    isSingle (): true {\n      return true\n    },\n    computedItems (): object[] {\n      return this.segmented ? this.allItems : this.filteredItems\n    },\n  },\n\n  methods: {\n    genSelections () {\n      return this.editable\n        ? VAutocomplete.options.methods.genSelections.call(this)\n        : VSelect.options.methods.genSelections.call(this) // Override v-autocomplete's override\n    },\n    genCommaSelection (item: any, index: number, last: boolean) {\n      return this.segmented\n        ? this.genSegmentedBtn(item)\n        : VSelect.options.methods.genCommaSelection.call(this, item, index, last)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.domProps!.value = this.editable ? this.internalSearch : ''\n      input.data.attrs!.readonly = !this.isAnyValueAllowed\n\n      return input\n    },\n    genLabel () {\n      if (this.editable && this.isFocused) return null\n\n      const label = VTextField.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label.data = label.data || {}\n\n      // Reset previously set styles from parent\n      label.data.style = {}\n\n      return label\n    },\n    genSegmentedBtn (item: any) {\n      const itemValue = this.getValue(item)\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \"segmented\" prop without a selection slot, items must contain both a text and callback property', this)\n        return null\n      }\n\n      return this.$createElement(VBtn, {\n        props: { text: true },\n        on: {\n          click (e: Event) {\n            e.stopPropagation()\n            itemObj.callback(e)\n          },\n        },\n      }, [itemObj.text])\n    },\n    updateValue (val: boolean) {\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
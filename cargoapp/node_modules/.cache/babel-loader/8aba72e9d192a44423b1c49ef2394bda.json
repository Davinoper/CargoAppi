{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.map.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VMessages/VMessages.sass\");\n\nvar _colorable = _interopRequireDefault(require(\"../../mixins/colorable\"));\n\nvar _themeable = _interopRequireDefault(require(\"../../mixins/themeable\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Styles\n// Mixins\n// Utilities\n\n/* @vue/component */\n\n\nvar _default2 = (0, _mixins.default)(_colorable.default, _themeable.default).extend({\n  name: 'v-messages',\n  props: {\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  methods: {\n    genChildren: function genChildren() {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div'\n        }\n      }, this.value.map(this.genMessage));\n    },\n    genMessage: function genMessage(message, key) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key: key\n      }, (0, _helpers.getSlot)(this, 'default', {\n        message: message,\n        key: key\n      }) || [message]);\n    }\n  },\n  render: function render(h) {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses\n    }), [this.genChildren()]);\n  }\n});\n\nexports.default = _default2;","map":{"version":3,"mappings":";;;;;;;;;AACAA;;AAGA;;AACA;;AAKA;;AAGA;;;;;;EAbA;AAGA;AASA;;AAGA;;;gBACe,qBAAOC,kBAAP,EAAkBC,kBAAlB,EAA6BC,MAA7B,CAAoC;EACjDC,IAAI,EAAE,YAD2C;EAGjDC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KADD;MAELC,OAAO,EAAE;QAAA,OAAO,EAAP;MAAA;IAFJ;EADF,CAH0C;EAUjDC,OAAO,EAAE;IACPC,WADO,yBACI;MACT,OAAO,KAAKC,cAAL,CAAoB,kBAApB,EAAwC;QAC7CC,WAAW,EAAE,qBADgC;QAE7CC,KAAK,EAAE;UACLV,IAAI,EAAE,oBADD;UAELW,GAAG,EAAE;QAFA;MAFsC,CAAxC,EAMJ,KAAKT,KAAL,CAAWU,GAAX,CAAe,KAAKC,UAApB,CANI,CAAP;IAFK;IAUPA,UAVO,sBAUKC,OAVL,EAUsBC,GAVtB,EAUiC;MACtC,OAAO,KAAKP,cAAL,CAAoB,KAApB,EAA2B;QAChCC,WAAW,EAAE,qBADmB;QAEhCM,GAAG,EAAHA;MAFgC,CAA3B,EAGJ,sBAAQ,IAAR,EAAc,SAAd,EAAyB;QAAED,OAAO,EAAPA,OAAF;QAAWC,GAAG,EAAHA;MAAX,CAAzB,KAA8C,CAACD,OAAD,CAH1C,CAAP;IAID;EAfM,CAVwC;EA4BjDE,MA5BiD,kBA4BzCC,CA5ByC,EA4BxC;IACP,OAAOA,CAAC,CAAC,KAAD,EAAQ,KAAKC,YAAL,CAAkB,KAAKC,KAAvB,EAA8B;MAC5CV,WAAW,EAAE,YAD+B;MAE5CW,KAAK,EAAE,KAAKC;IAFgC,CAA9B,CAAR,EAGJ,CAAC,KAAKd,WAAL,EAAD,CAHI,CAAR;EAID;AAjCgD,CAApC","names":["require","_colorable","_themeable","extend","name","props","value","type","Array","default","methods","genChildren","$createElement","staticClass","attrs","tag","map","genMessage","message","key","render","h","setTextColor","color","class","themeClasses"],"sourceRoot":"","sources":["../../../src/components/VMessages/VMessages.ts"],"sourcesContent":["// Styles\nimport './VMessages.sass'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport mixins from '../../util/mixins'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n\n  props: {\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<string[]>,\n  },\n\n  methods: {\n    genChildren () {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div',\n        },\n      }, this.value.map(this.genMessage))\n    },\n    genMessage (message: string, key: number) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key,\n      }, getSlot(this, 'default', { message, key }) || [message])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses,\n    }), [this.genChildren()])\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
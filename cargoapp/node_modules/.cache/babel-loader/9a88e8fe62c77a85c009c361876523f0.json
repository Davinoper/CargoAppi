{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.symbol.description.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.symbol.iterator.js\");\n\nrequire(\"core-js/modules/es.string.iterator.js\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\n\nrequire(\"core-js/modules/es.array.includes.js\");\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.function.name.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _delayable = _interopRequireDefault(require(\"../delayable\"));\n\nvar _toggleable = _interopRequireDefault(require(\"../toggleable\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nvar _helpers = require(\"../../util/helpers\");\n\nvar _console = require(\"../../util/console\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar baseMixins = (0, _mixins.default)(_delayable.default, _toggleable.default);\n/* @vue/component */\n\nvar _default = baseMixins.extend({\n  name: 'activatable',\n  props: {\n    activator: {\n      default: null,\n      validator: function validator(val) {\n        return ['string', 'object'].includes(_typeof(val));\n      }\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true\n    },\n    openOnHover: Boolean,\n    openOnFocus: Boolean\n  },\n  data: function data() {\n    return {\n      // Do not use this directly, call getActivator() instead\n      activatorElement: null,\n      activatorNode: [],\n      events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n      listeners: {}\n    };\n  },\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator'\n  },\n  mounted: function mounted() {\n    var slotType = (0, _helpers.getSlotType)(this, 'activator', true);\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      (0, _console.consoleError)(\"The activator slot must be bound, try '<template v-slot:activator=\\\"{ on }\\\"><v-btn v-on=\\\"on\\\">'\", this);\n    }\n\n    this.addActivatorEvents();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.removeActivatorEvents();\n  },\n  methods: {\n    addActivatorEvents: function addActivatorEvents() {\n      if (!this.activator || this.disabled || !this.getActivator()) return;\n      this.listeners = this.genActivatorListeners();\n      var keys = Object.keys(this.listeners);\n\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var key = _keys[_i];\n        this.getActivator().addEventListener(key, this.listeners[key]);\n      }\n    },\n    genActivator: function genActivator() {\n      var node = (0, _helpers.getSlot)(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes()\n      })) || [];\n      this.activatorNode = node;\n      return node;\n    },\n    genActivatorAttributes: function genActivatorAttributes() {\n      return {\n        role: this.openOnClick && !this.openOnHover ? 'button' : undefined,\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive)\n      };\n    },\n    genActivatorListeners: function genActivatorListeners() {\n      var _this = this;\n\n      if (this.disabled) return {};\n      var listeners = {};\n\n      if (this.openOnHover) {\n        listeners.mouseenter = function (e) {\n          _this.getActivator(e);\n\n          _this.runDelay('open');\n        };\n\n        listeners.mouseleave = function (e) {\n          _this.getActivator(e);\n\n          _this.runDelay('close');\n        };\n      } else if (this.openOnClick) {\n        listeners.click = function (e) {\n          var activator = _this.getActivator(e);\n\n          if (activator) activator.focus();\n          e.stopPropagation();\n          _this.isActive = !_this.isActive;\n        };\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = function (e) {\n          _this.getActivator(e);\n\n          e.stopPropagation();\n          _this.isActive = !_this.isActive;\n        };\n      }\n\n      return listeners;\n    },\n    getActivator: function getActivator(e) {\n      var _activator; // If we've already fetched the activator, re-use\n\n\n      if (this.activatorElement) return this.activatorElement;\n      var activator = null;\n\n      if (this.activator) {\n        var target = this.internalActivator ? this.$el : document;\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator);\n        } else if (this.activator.$el) {\n          // Component (ref)\n          activator = this.activator.$el;\n        } else {\n          // HTMLElement | Element\n          activator = this.activator;\n        }\n      } else if (this.activatorNode.length === 1 || this.activatorNode.length && !e) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        var vm = this.activatorNode[0].componentInstance;\n\n        if (vm && vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n        vm.$options.mixins.some(function (m) {\n          return m.options && ['activatable', 'menuable'].includes(m.options.name);\n        })) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = vm.getActivator();\n        } else {\n          activator = this.activatorNode[0].elm;\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = e.currentTarget || e.target;\n      } // The activator should only be a valid element (Ignore comments and text nodes)\n\n\n      this.activatorElement = ((_activator = activator) == null ? void 0 : _activator.nodeType) === Node.ELEMENT_NODE ? activator : null;\n      return this.activatorElement;\n    },\n    getContentSlot: function getContentSlot() {\n      return (0, _helpers.getSlot)(this, 'default', this.getValueProxy(), true);\n    },\n    getValueProxy: function getValueProxy() {\n      var self = this;\n      return {\n        get value() {\n          return self.isActive;\n        },\n\n        set value(isActive) {\n          self.isActive = isActive;\n        }\n\n      };\n    },\n    removeActivatorEvents: function removeActivatorEvents() {\n      if (!this.activator || !this.activatorElement) return;\n      var keys = Object.keys(this.listeners);\n\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n        var key = _keys2[_i2];\n        this.activatorElement.removeEventListener(key, this.listeners[key]);\n      }\n\n      this.listeners = {};\n    },\n    resetActivator: function resetActivator() {\n      this.removeActivatorEvents();\n      this.activatorElement = null;\n      this.getActivator();\n      this.addActivatorEvents();\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["baseMixins","_delayable","_toggleable","extend","name","props","activator","default","validator","val","includes","disabled","Boolean","internalActivator","openOnClick","type","openOnHover","openOnFocus","data","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","addActivatorEvents","beforeDestroy","removeActivatorEvents","methods","getActivator","genActivatorListeners","keys","Object","key","addEventListener","genActivator","node","assign","getValueProxy","on","attrs","genActivatorAttributes","role","undefined","String","isActive","mouseenter","e","_this","runDelay","mouseleave","click","focus","stopPropagation","target","$el","document","querySelector","length","vm","componentInstance","$options","mixins","some","m","options","elm","currentTarget","nodeType","Node","ELEMENT_NODE","getContentSlot","self","value","removeEventListener","resetActivator"],"sourceRoot":"","sources":["../../../src/mixins/activatable/index.ts"],"sourcesContent":["// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: (this.openOnClick && !this.openOnHover) ? 'button' : undefined,\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else if (this.openOnClick) {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
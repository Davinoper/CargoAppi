{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nrequire(\"core-js/modules/es.number.constructor.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"../../../src/components/VTextarea/VTextarea.sass\");\n\nvar _VTextField = _interopRequireDefault(require(\"../VTextField/VTextField\"));\n\nvar _mixins = _interopRequireDefault(require(\"../../util/mixins\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar baseMixins = (0, _mixins.default)(_VTextField.default);\n/* @vue/component */\n\nvar _default = baseMixins.extend({\n  name: 'v-textarea',\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: function validator(v) {\n        return !isNaN(parseFloat(v));\n      }\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: function validator(v) {\n        return !isNaN(parseInt(v, 10));\n      }\n    }\n  },\n  computed: {\n    classes: function classes() {\n      return _objectSpread({\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle\n      }, _VTextField.default.options.computed.classes.call(this));\n    },\n    noResizeHandle: function noResizeHandle() {\n      return this.noResize || this.autoGrow;\n    }\n  },\n  watch: {\n    autoGrow: function autoGrow(val) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        var _this$$refs$input;\n\n        val ? _this.calculateInputHeight() : (_this$$refs$input = _this.$refs.input) == null ? void 0 : _this$$refs$input.style.removeProperty('height');\n      });\n    },\n    lazyValue: function lazyValue() {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight);\n    },\n    rowHeight: function rowHeight() {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    setTimeout(function () {\n      _this2.autoGrow && _this2.calculateInputHeight();\n    }, 0);\n  },\n  methods: {\n    calculateInputHeight: function calculateInputHeight() {\n      var input = this.$refs.input;\n      if (!input) return;\n      input.style.height = '0';\n      var height = input.scrollHeight;\n      var minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight); // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n\n      input.style.height = Math.max(minHeight, height) + 'px';\n    },\n    genInput: function genInput() {\n      var input = _VTextField.default.options.methods.genInput.call(this);\n\n      input.tag = 'textarea';\n      delete input.data.attrs.type;\n      input.data.attrs.rows = this.rows;\n      return input;\n    },\n    onInput: function onInput(e) {\n      _VTextField.default.options.methods.onInput.call(this, e);\n\n      this.autoGrow && this.calculateInputHeight();\n    },\n    onKeyDown: function onKeyDown(e) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation();\n      }\n\n      this.$emit('keydown', e);\n    }\n  }\n});\n\nexports.default = _default;","map":{"version":3,"mappings":"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","names":["require","baseMixins","_VTextField","extend","name","props","autoGrow","Boolean","noResize","rowHeight","type","Number","String","default","validator","v","isNaN","parseFloat","rows","parseInt","computed","classes","noResizeHandle","options","call","watch","val","$nextTick","_this","calculateInputHeight","$refs","input","_this$$refs$input","style","removeProperty","lazyValue","mounted","setTimeout","_this2","methods","height","scrollHeight","minHeight","Math","max","genInput","tag","data","attrs","onInput","e","onKeyDown","isFocused","keyCode","stopPropagation","$emit"],"sourceRoot":"","sources":["../../../src/components/VTextarea/VTextarea.ts"],"sourcesContent":["// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    autoGrow (val: boolean) {\n      this.$nextTick(() => {\n        val\n          ? this.calculateInputHeight()\n          : this.$refs.input?.style.removeProperty('height')\n      })\n    },\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"script"}
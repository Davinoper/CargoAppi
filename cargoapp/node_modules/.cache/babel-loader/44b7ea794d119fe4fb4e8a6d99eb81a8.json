{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.factory = factory;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction factory() {\n  var _watch;\n\n  var prop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'value';\n  var event = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'input';\n  return _vue.default.extend({\n    name: 'toggleable',\n    model: {\n      prop: prop,\n      event: event\n    },\n    props: _defineProperty({}, prop, {\n      required: false\n    }),\n    data: function data() {\n      return {\n        isActive: !!this[prop]\n      };\n    },\n    watch: (_watch = {}, _defineProperty(_watch, prop, function (val) {\n      this.isActive = !!val;\n    }), _defineProperty(_watch, \"isActive\", function isActive(val) {\n      !!val !== this[prop] && this.$emit(event, val);\n    }), _watch)\n  });\n}\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\n\n\nvar Toggleable = factory();\nvar _default = Toggleable;\nexports.default = _default;","map":{"version":3,"mappings":";;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AAKM,SAAUA,OAAV,GAAkD;EAAA;;EAAA,IAA/BC,IAA+B,uEAAxB,OAAwB;EAAA,IAAfC,KAAe,uEAAP,OAAO;EACtD,OAAOC,aAAIC,MAAJ,CAAW;IAChBC,IAAI,EAAE,YADU;IAGhBC,KAAK,EAAE;MAAEL,IAAI,EAAJA,IAAF;MAAQC,KAAK,EAALA;IAAR,CAHS;IAKhBK,KAAK,sBACFN,IADE,EACK;MAAEO,QAAQ,EAAE;IAAZ,CADL,CALW;IAShBC,IATgB,kBASZ;MACF,OAAO;QACLC,QAAQ,EAAE,CAAC,CAAC,KAAKT,IAAL;MADP,CAAP;IAVc;IAehBU,KAAK,wCACFV,IADE,YACKW,GADL,EACQ;MACT,KAAKF,QAAL,GAAgB,CAAC,CAACE,GAAlB;IAFC,0DAIOA,GAJP,EAIU;MACX,CAAC,CAACA,GAAF,KAAU,KAAKX,IAAL,CAAV,IAAwB,KAAKY,KAAL,CAAWX,KAAX,EAAkBU,GAAlB,CAAxB;IALC;EAfW,CAAX,CAAP;AAwBD;AAED;;;AACA,IAAME,UAAU,GAAGd,OAAO,EAA1B;eAEec","names":["factory","prop","event","_vue","extend","name","model","props","required","data","isActive","watch","val","$emit","Toggleable"],"sourceRoot":"","sources":["../../../src/mixins/toggleable/index.ts"],"sourcesContent":["import Vue, { VueConstructor } from 'vue'\n\nexport type Toggleable<T extends string = 'value'> = VueConstructor<Vue & { isActive: boolean } & Record<T, any>>\n\nexport function factory<T extends string = 'value'> (prop?: T, event?: string): Toggleable<T>\nexport function factory (prop = 'value', event = 'input') {\n  return Vue.extend({\n    name: 'toggleable',\n\n    model: { prop, event },\n\n    props: {\n      [prop]: { required: false },\n    },\n\n    data () {\n      return {\n        isActive: !!this[prop],\n      }\n    },\n\n    watch: {\n      [prop] (val) {\n        this.isActive = !!val\n      },\n      isActive (val) {\n        !!val !== this[prop] && this.$emit(event, val)\n      },\n    },\n  })\n}\n\n/* eslint-disable-next-line @typescript-eslint/no-redeclare */\nconst Toggleable = factory()\n\nexport default Toggleable\n"]},"metadata":{},"sourceType":"script"}
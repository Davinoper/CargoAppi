{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.object.keys.js\");\n\nrequire(\"core-js/modules/es.symbol.js\");\n\nrequire(\"core-js/modules/es.array.filter.js\");\n\nrequire(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\n\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.functionalThemeClasses = functionalThemeClasses;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"vue\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/* @vue/component */\n\n\nvar Themeable = _vue.default.extend().extend({\n  name: 'themeable',\n  provide: function provide() {\n    return {\n      theme: this.themeableProvide\n    };\n  },\n  inject: {\n    theme: {\n      default: {\n        isDark: false\n      }\n    }\n  },\n  props: {\n    dark: {\n      type: Boolean,\n      default: null\n    },\n    light: {\n      type: Boolean,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      themeableProvide: {\n        isDark: false\n      }\n    };\n  },\n  computed: {\n    appIsDark: function appIsDark() {\n      return this.$vuetify.theme.dark || false;\n    },\n    isDark: function isDark() {\n      if (this.dark === true) {\n        // explicitly dark\n        return true;\n      } else if (this.light === true) {\n        // explicitly light\n        return false;\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark;\n      }\n    },\n    themeClasses: function themeClasses() {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark\n      };\n    },\n\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark: function rootIsDark() {\n      if (this.dark === true) {\n        // explicitly dark\n        return true;\n      } else if (this.light === true) {\n        // explicitly light\n        return false;\n      } else {\n        // inherit from v-app\n        return this.appIsDark;\n      }\n    },\n    rootThemeClasses: function rootThemeClasses() {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark\n      };\n    }\n  },\n  watch: {\n    isDark: {\n      handler: function handler(newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark;\n        }\n      },\n      immediate: true\n    }\n  }\n});\n\nvar _default = Themeable;\nexports.default = _default;\n\nfunction functionalThemeClasses(context) {\n  var vm = _objectSpread(_objectSpread({}, context.props), context.injections);\n\n  var isDark = Themeable.options.computed.isDark.call(vm);\n  return Themeable.options.computed.themeClasses.call({\n    isDark: isDark\n  });\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;;;AACA,IAAMA,SAAS,GAAGC,aAAIC,MAAJ,GAAsBA,MAAtB,CAA6B;EAC7CC,IAAI,EAAE,WADuC;EAG7CC,OAH6C,qBAGtC;IACL,OAAO;MACLC,KAAK,EAAE,KAAKC;IADP,CAAP;EAJ2C;EAS7CC,MAAM,EAAE;IACNF,KAAK,EAAE;MACLG,OAAO,EAAE;QACPC,MAAM,EAAE;MADD;IADJ;EADD,CATqC;EAiB7CC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,OADF;MAEJL,OAAO,EAAE;IAFL,CADD;IAKLM,KAAK,EAAE;MACLF,IAAI,EAAEC,OADD;MAELL,OAAO,EAAE;IAFJ;EALF,CAjBsC;EA4B7CO,IA5B6C,kBA4BzC;IACF,OAAO;MACLT,gBAAgB,EAAE;QAChBG,MAAM,EAAE;MADQ;IADb,CAAP;EA7B2C;EAoC7CO,QAAQ,EAAE;IACRC,SADQ,uBACC;MACP,OAAO,KAAKC,QAAL,CAAcb,KAAd,CAAoBM,IAApB,IAA4B,KAAnC;IAFM;IAIRF,MAJQ,oBAIF;MACJ,IAAI,KAAKE,IAAL,KAAc,IAAlB,EAAwB;QACtB;QACA,OAAO,IAAP;MAFF,OAGO,IAAI,KAAKG,KAAL,KAAe,IAAnB,EAAyB;QAC9B;QACA,OAAO,KAAP;MAFK,OAGA;QACL;QACA,OAAO,KAAKT,KAAL,CAAWI,MAAlB;MACD;IAdK;IAgBRU,YAhBQ,0BAgBI;MACV,OAAO;QACL,eAAe,KAAKV,MADf;QAEL,gBAAgB,CAAC,KAAKA;MAFjB,CAAP;IAjBM;;IAsBR;IACAW,UAvBQ,wBAuBE;MACR,IAAI,KAAKT,IAAL,KAAc,IAAlB,EAAwB;QACtB;QACA,OAAO,IAAP;MAFF,OAGO,IAAI,KAAKG,KAAL,KAAe,IAAnB,EAAyB;QAC9B;QACA,OAAO,KAAP;MAFK,OAGA;QACL;QACA,OAAO,KAAKG,SAAZ;MACD;IAjCK;IAmCRI,gBAnCQ,8BAmCQ;MACd,OAAO;QACL,eAAe,KAAKD,UADf;QAEL,gBAAgB,CAAC,KAAKA;MAFjB,CAAP;IAID;EAxCO,CApCmC;EA+E7CE,KAAK,EAAE;IACLb,MAAM,EAAE;MACNc,OADM,mBACGC,MADH,EACWC,MADX,EACiB;QACrB,IAAID,MAAM,KAAKC,MAAf,EAAuB;UACrB,KAAKnB,gBAAL,CAAsBG,MAAtB,GAA+B,KAAKA,MAApC;QACD;MAJG;MAMNiB,SAAS,EAAE;IANL;EADH;AA/EsC,CAA7B,CAAlB;;eA2Fe1B;;;AAET,SAAU2B,sBAAV,CAAkCC,OAAlC,EAAwD;EAC5D,IAAMC,EAAE,mCACHD,OAAO,CAAClB,KADL,GAEHkB,OAAO,CAACE,UAFL,CAAR;;EAIA,IAAMrB,MAAM,GAAGT,SAAS,CAAC+B,OAAV,CAAkBf,QAAlB,CAA2BP,MAA3B,CAAkCuB,IAAlC,CAAuCH,EAAvC,CAAf;EACA,OAAO7B,SAAS,CAAC+B,OAAV,CAAkBf,QAAlB,CAA2BG,YAA3B,CAAwCa,IAAxC,CAA6C;IAAEvB,MAAM,EAANA;EAAF,CAA7C,CAAP;AACD","names":["Themeable","_vue","extend","name","provide","theme","themeableProvide","inject","default","isDark","props","dark","type","Boolean","light","data","computed","appIsDark","$vuetify","themeClasses","rootIsDark","rootThemeClasses","watch","handler","newVal","oldVal","immediate","functionalThemeClasses","context","vm","injections","options","call"],"sourceRoot":"","sources":["../../../src/mixins/themeable/index.ts"],"sourcesContent":["import Vue from 'vue'\nimport { PropType, RenderContext } from 'vue/types/options'\n\ninterface options extends Vue {\n  theme: {\n    isDark: boolean\n  }\n}\n\n/* @vue/component */\nconst Themeable = Vue.extend<options>().extend({\n  name: 'themeable',\n\n  provide (): object {\n    return {\n      theme: this.themeableProvide,\n    }\n  },\n\n  inject: {\n    theme: {\n      default: {\n        isDark: false,\n      },\n    },\n  },\n\n  props: {\n    dark: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n    light: {\n      type: Boolean as PropType<boolean | null>,\n      default: null,\n    },\n  },\n\n  data () {\n    return {\n      themeableProvide: {\n        isDark: false,\n      },\n    }\n  },\n\n  computed: {\n    appIsDark (): boolean {\n      return this.$vuetify.theme.dark || false\n    },\n    isDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from parent, or default false if there is none\n        return this.theme.isDark\n      }\n    },\n    themeClasses (): object {\n      return {\n        'theme--dark': this.isDark,\n        'theme--light': !this.isDark,\n      }\n    },\n    /** Used by menus and dialogs, inherits from v-app instead of the parent */\n    rootIsDark (): boolean {\n      if (this.dark === true) {\n        // explicitly dark\n        return true\n      } else if (this.light === true) {\n        // explicitly light\n        return false\n      } else {\n        // inherit from v-app\n        return this.appIsDark\n      }\n    },\n    rootThemeClasses (): Dictionary<boolean> {\n      return {\n        'theme--dark': this.rootIsDark,\n        'theme--light': !this.rootIsDark,\n      }\n    },\n  },\n\n  watch: {\n    isDark: {\n      handler (newVal, oldVal) {\n        if (newVal !== oldVal) {\n          this.themeableProvide.isDark = this.isDark\n        }\n      },\n      immediate: true,\n    },\n  },\n})\n\nexport default Themeable\n\nexport function functionalThemeClasses (context: RenderContext): object {\n  const vm = {\n    ...context.props,\n    ...context.injections,\n  }\n  const isDark = Themeable.options.computed.isDark.call(vm)\n  return Themeable.options.computed.themeClasses.call({ isDark })\n}\n"]},"metadata":{},"sourceType":"script"}